// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Master.proto

#ifndef PROTOBUF_Master_2eproto__INCLUDED
#define PROTOBUF_Master_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "HBase.pb.h"
#include "Client.pb.h"
#include "ClusterStatus.pb.h"
#include "ErrorHandling.pb.h"
#include "Procedure.pb.h"
#include "Quota.pb.h"
// @@protoc_insertion_point(includes)

namespace hbase {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Master_2eproto();
void protobuf_AssignDesc_Master_2eproto();
void protobuf_ShutdownFile_Master_2eproto();

class AddColumnRequest;
class AddColumnResponse;
class DeleteColumnRequest;
class DeleteColumnResponse;
class ModifyColumnRequest;
class ModifyColumnResponse;
class MoveRegionRequest;
class MoveRegionResponse;
class DispatchMergingRegionsRequest;
class DispatchMergingRegionsResponse;
class AssignRegionRequest;
class AssignRegionResponse;
class UnassignRegionRequest;
class UnassignRegionResponse;
class OfflineRegionRequest;
class OfflineRegionResponse;
class CreateTableRequest;
class CreateTableResponse;
class DeleteTableRequest;
class DeleteTableResponse;
class TruncateTableRequest;
class TruncateTableResponse;
class EnableTableRequest;
class EnableTableResponse;
class DisableTableRequest;
class DisableTableResponse;
class ModifyTableRequest;
class ModifyTableResponse;
class CreateNamespaceRequest;
class CreateNamespaceResponse;
class DeleteNamespaceRequest;
class DeleteNamespaceResponse;
class ModifyNamespaceRequest;
class ModifyNamespaceResponse;
class GetNamespaceDescriptorRequest;
class GetNamespaceDescriptorResponse;
class ListNamespaceDescriptorsRequest;
class ListNamespaceDescriptorsResponse;
class ListTableDescriptorsByNamespaceRequest;
class ListTableDescriptorsByNamespaceResponse;
class ListTableNamesByNamespaceRequest;
class ListTableNamesByNamespaceResponse;
class ShutdownRequest;
class ShutdownResponse;
class StopMasterRequest;
class StopMasterResponse;
class BalanceRequest;
class BalanceResponse;
class SetBalancerRunningRequest;
class SetBalancerRunningResponse;
class IsBalancerEnabledRequest;
class IsBalancerEnabledResponse;
class SetSplitOrMergeEnabledRequest;
class SetSplitOrMergeEnabledResponse;
class IsSplitOrMergeEnabledRequest;
class IsSplitOrMergeEnabledResponse;
class NormalizeRequest;
class NormalizeResponse;
class SetNormalizerRunningRequest;
class SetNormalizerRunningResponse;
class IsNormalizerEnabledRequest;
class IsNormalizerEnabledResponse;
class RunCatalogScanRequest;
class RunCatalogScanResponse;
class EnableCatalogJanitorRequest;
class EnableCatalogJanitorResponse;
class IsCatalogJanitorEnabledRequest;
class IsCatalogJanitorEnabledResponse;
class SnapshotRequest;
class SnapshotResponse;
class GetCompletedSnapshotsRequest;
class GetCompletedSnapshotsResponse;
class DeleteSnapshotRequest;
class DeleteSnapshotResponse;
class RestoreSnapshotRequest;
class RestoreSnapshotResponse;
class IsSnapshotDoneRequest;
class IsSnapshotDoneResponse;
class IsRestoreSnapshotDoneRequest;
class IsRestoreSnapshotDoneResponse;
class GetSchemaAlterStatusRequest;
class GetSchemaAlterStatusResponse;
class GetTableDescriptorsRequest;
class GetTableDescriptorsResponse;
class GetTableNamesRequest;
class GetTableNamesResponse;
class GetTableStateRequest;
class GetTableStateResponse;
class GetClusterStatusRequest;
class GetClusterStatusResponse;
class IsMasterRunningRequest;
class IsMasterRunningResponse;
class ExecProcedureRequest;
class ExecProcedureResponse;
class IsProcedureDoneRequest;
class IsProcedureDoneResponse;
class GetProcedureResultRequest;
class GetProcedureResultResponse;
class AbortProcedureRequest;
class AbortProcedureResponse;
class ListProceduresRequest;
class ListProceduresResponse;
class SetQuotaRequest;
class SetQuotaResponse;
class MajorCompactionTimestampRequest;
class MajorCompactionTimestampForRegionRequest;
class MajorCompactionTimestampResponse;
class SecurityCapabilitiesRequest;
class SecurityCapabilitiesResponse;

enum GetProcedureResultResponse_State {
  GetProcedureResultResponse_State_NOT_FOUND = 0,
  GetProcedureResultResponse_State_RUNNING = 1,
  GetProcedureResultResponse_State_FINISHED = 2
};
bool GetProcedureResultResponse_State_IsValid(int value);
const GetProcedureResultResponse_State GetProcedureResultResponse_State_State_MIN = GetProcedureResultResponse_State_NOT_FOUND;
const GetProcedureResultResponse_State GetProcedureResultResponse_State_State_MAX = GetProcedureResultResponse_State_FINISHED;
const int GetProcedureResultResponse_State_State_ARRAYSIZE = GetProcedureResultResponse_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetProcedureResultResponse_State_descriptor();
inline const ::std::string& GetProcedureResultResponse_State_Name(GetProcedureResultResponse_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetProcedureResultResponse_State_descriptor(), value);
}
inline bool GetProcedureResultResponse_State_Parse(
    const ::std::string& name, GetProcedureResultResponse_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetProcedureResultResponse_State>(
    GetProcedureResultResponse_State_descriptor(), name, value);
}
enum SecurityCapabilitiesResponse_Capability {
  SecurityCapabilitiesResponse_Capability_SIMPLE_AUTHENTICATION = 0,
  SecurityCapabilitiesResponse_Capability_SECURE_AUTHENTICATION = 1,
  SecurityCapabilitiesResponse_Capability_AUTHORIZATION = 2,
  SecurityCapabilitiesResponse_Capability_CELL_AUTHORIZATION = 3,
  SecurityCapabilitiesResponse_Capability_CELL_VISIBILITY = 4
};
bool SecurityCapabilitiesResponse_Capability_IsValid(int value);
const SecurityCapabilitiesResponse_Capability SecurityCapabilitiesResponse_Capability_Capability_MIN = SecurityCapabilitiesResponse_Capability_SIMPLE_AUTHENTICATION;
const SecurityCapabilitiesResponse_Capability SecurityCapabilitiesResponse_Capability_Capability_MAX = SecurityCapabilitiesResponse_Capability_CELL_VISIBILITY;
const int SecurityCapabilitiesResponse_Capability_Capability_ARRAYSIZE = SecurityCapabilitiesResponse_Capability_Capability_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityCapabilitiesResponse_Capability_descriptor();
inline const ::std::string& SecurityCapabilitiesResponse_Capability_Name(SecurityCapabilitiesResponse_Capability value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityCapabilitiesResponse_Capability_descriptor(), value);
}
inline bool SecurityCapabilitiesResponse_Capability_Parse(
    const ::std::string& name, SecurityCapabilitiesResponse_Capability* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityCapabilitiesResponse_Capability>(
    SecurityCapabilitiesResponse_Capability_descriptor(), name, value);
}
enum MasterSwitchType {
  SPLIT = 0,
  MERGE = 1
};
bool MasterSwitchType_IsValid(int value);
const MasterSwitchType MasterSwitchType_MIN = SPLIT;
const MasterSwitchType MasterSwitchType_MAX = MERGE;
const int MasterSwitchType_ARRAYSIZE = MasterSwitchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MasterSwitchType_descriptor();
inline const ::std::string& MasterSwitchType_Name(MasterSwitchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MasterSwitchType_descriptor(), value);
}
inline bool MasterSwitchType_Parse(
    const ::std::string& name, MasterSwitchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MasterSwitchType>(
    MasterSwitchType_descriptor(), name, value);
}
// ===================================================================

class AddColumnRequest : public ::google::protobuf::Message {
 public:
  AddColumnRequest();
  virtual ~AddColumnRequest();

  AddColumnRequest(const AddColumnRequest& from);

  inline AddColumnRequest& operator=(const AddColumnRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddColumnRequest& default_instance();

  void Swap(AddColumnRequest* other);

  // implements Message ----------------------------------------------

  AddColumnRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddColumnRequest& from);
  void MergeFrom(const AddColumnRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // required .hbase.pb.ColumnFamilySchema column_families = 2;
  inline bool has_column_families() const;
  inline void clear_column_families();
  static const int kColumnFamiliesFieldNumber = 2;
  inline const ::hbase::pb::ColumnFamilySchema& column_families() const;
  inline ::hbase::pb::ColumnFamilySchema* mutable_column_families();
  inline ::hbase::pb::ColumnFamilySchema* release_column_families();
  inline void set_allocated_column_families(::hbase::pb::ColumnFamilySchema* column_families);

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.AddColumnRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_column_families();
  inline void clear_has_column_families();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::hbase::pb::ColumnFamilySchema* column_families_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AddColumnRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddColumnResponse : public ::google::protobuf::Message {
 public:
  AddColumnResponse();
  virtual ~AddColumnResponse();

  AddColumnResponse(const AddColumnResponse& from);

  inline AddColumnResponse& operator=(const AddColumnResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddColumnResponse& default_instance();

  void Swap(AddColumnResponse* other);

  // implements Message ----------------------------------------------

  AddColumnResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddColumnResponse& from);
  void MergeFrom(const AddColumnResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.AddColumnResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AddColumnResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteColumnRequest : public ::google::protobuf::Message {
 public:
  DeleteColumnRequest();
  virtual ~DeleteColumnRequest();

  DeleteColumnRequest(const DeleteColumnRequest& from);

  inline DeleteColumnRequest& operator=(const DeleteColumnRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteColumnRequest& default_instance();

  void Swap(DeleteColumnRequest* other);

  // implements Message ----------------------------------------------

  DeleteColumnRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteColumnRequest& from);
  void MergeFrom(const DeleteColumnRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // required bytes column_name = 2;
  inline bool has_column_name() const;
  inline void clear_column_name();
  static const int kColumnNameFieldNumber = 2;
  inline const ::std::string& column_name() const;
  inline void set_column_name(const ::std::string& value);
  inline void set_column_name(const char* value);
  inline void set_column_name(const void* value, size_t size);
  inline ::std::string* mutable_column_name();
  inline ::std::string* release_column_name();
  inline void set_allocated_column_name(::std::string* column_name);

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteColumnRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_column_name();
  inline void clear_has_column_name();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::std::string* column_name_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteColumnRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteColumnResponse : public ::google::protobuf::Message {
 public:
  DeleteColumnResponse();
  virtual ~DeleteColumnResponse();

  DeleteColumnResponse(const DeleteColumnResponse& from);

  inline DeleteColumnResponse& operator=(const DeleteColumnResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteColumnResponse& default_instance();

  void Swap(DeleteColumnResponse* other);

  // implements Message ----------------------------------------------

  DeleteColumnResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteColumnResponse& from);
  void MergeFrom(const DeleteColumnResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteColumnResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteColumnResponse* default_instance_;
};
// -------------------------------------------------------------------

class ModifyColumnRequest : public ::google::protobuf::Message {
 public:
  ModifyColumnRequest();
  virtual ~ModifyColumnRequest();

  ModifyColumnRequest(const ModifyColumnRequest& from);

  inline ModifyColumnRequest& operator=(const ModifyColumnRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyColumnRequest& default_instance();

  void Swap(ModifyColumnRequest* other);

  // implements Message ----------------------------------------------

  ModifyColumnRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyColumnRequest& from);
  void MergeFrom(const ModifyColumnRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // required .hbase.pb.ColumnFamilySchema column_families = 2;
  inline bool has_column_families() const;
  inline void clear_column_families();
  static const int kColumnFamiliesFieldNumber = 2;
  inline const ::hbase::pb::ColumnFamilySchema& column_families() const;
  inline ::hbase::pb::ColumnFamilySchema* mutable_column_families();
  inline ::hbase::pb::ColumnFamilySchema* release_column_families();
  inline void set_allocated_column_families(::hbase::pb::ColumnFamilySchema* column_families);

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyColumnRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_column_families();
  inline void clear_has_column_families();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::hbase::pb::ColumnFamilySchema* column_families_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyColumnRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModifyColumnResponse : public ::google::protobuf::Message {
 public:
  ModifyColumnResponse();
  virtual ~ModifyColumnResponse();

  ModifyColumnResponse(const ModifyColumnResponse& from);

  inline ModifyColumnResponse& operator=(const ModifyColumnResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyColumnResponse& default_instance();

  void Swap(ModifyColumnResponse* other);

  // implements Message ----------------------------------------------

  ModifyColumnResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyColumnResponse& from);
  void MergeFrom(const ModifyColumnResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyColumnResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyColumnResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoveRegionRequest : public ::google::protobuf::Message {
 public:
  MoveRegionRequest();
  virtual ~MoveRegionRequest();

  MoveRegionRequest(const MoveRegionRequest& from);

  inline MoveRegionRequest& operator=(const MoveRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRegionRequest& default_instance();

  void Swap(MoveRegionRequest* other);

  // implements Message ----------------------------------------------

  MoveRegionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveRegionRequest& from);
  void MergeFrom(const MoveRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region();
  inline ::hbase::pb::RegionSpecifier* release_region();
  inline void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // optional .hbase.pb.ServerName dest_server_name = 2;
  inline bool has_dest_server_name() const;
  inline void clear_dest_server_name();
  static const int kDestServerNameFieldNumber = 2;
  inline const ::hbase::pb::ServerName& dest_server_name() const;
  inline ::hbase::pb::ServerName* mutable_dest_server_name();
  inline ::hbase::pb::ServerName* release_dest_server_name();
  inline void set_allocated_dest_server_name(::hbase::pb::ServerName* dest_server_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveRegionRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_dest_server_name();
  inline void clear_has_dest_server_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_;
  ::hbase::pb::ServerName* dest_server_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static MoveRegionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveRegionResponse : public ::google::protobuf::Message {
 public:
  MoveRegionResponse();
  virtual ~MoveRegionResponse();

  MoveRegionResponse(const MoveRegionResponse& from);

  inline MoveRegionResponse& operator=(const MoveRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRegionResponse& default_instance();

  void Swap(MoveRegionResponse* other);

  // implements Message ----------------------------------------------

  MoveRegionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveRegionResponse& from);
  void MergeFrom(const MoveRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveRegionResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static MoveRegionResponse* default_instance_;
};
// -------------------------------------------------------------------

class DispatchMergingRegionsRequest : public ::google::protobuf::Message {
 public:
  DispatchMergingRegionsRequest();
  virtual ~DispatchMergingRegionsRequest();

  DispatchMergingRegionsRequest(const DispatchMergingRegionsRequest& from);

  inline DispatchMergingRegionsRequest& operator=(const DispatchMergingRegionsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DispatchMergingRegionsRequest& default_instance();

  void Swap(DispatchMergingRegionsRequest* other);

  // implements Message ----------------------------------------------

  DispatchMergingRegionsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DispatchMergingRegionsRequest& from);
  void MergeFrom(const DispatchMergingRegionsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region_a = 1;
  inline bool has_region_a() const;
  inline void clear_region_a();
  static const int kRegionAFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region_a() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region_a();
  inline ::hbase::pb::RegionSpecifier* release_region_a();
  inline void set_allocated_region_a(::hbase::pb::RegionSpecifier* region_a);

  // required .hbase.pb.RegionSpecifier region_b = 2;
  inline bool has_region_b() const;
  inline void clear_region_b();
  static const int kRegionBFieldNumber = 2;
  inline const ::hbase::pb::RegionSpecifier& region_b() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region_b();
  inline ::hbase::pb::RegionSpecifier* release_region_b();
  inline void set_allocated_region_b(::hbase::pb::RegionSpecifier* region_b);

  // optional bool forcible = 3 [default = false];
  inline bool has_forcible() const;
  inline void clear_forcible();
  static const int kForcibleFieldNumber = 3;
  inline bool forcible() const;
  inline void set_forcible(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DispatchMergingRegionsRequest)
 private:
  inline void set_has_region_a();
  inline void clear_has_region_a();
  inline void set_has_region_b();
  inline void clear_has_region_b();
  inline void set_has_forcible();
  inline void clear_has_forcible();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_a_;
  ::hbase::pb::RegionSpecifier* region_b_;
  bool forcible_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DispatchMergingRegionsRequest* default_instance_;
};
// -------------------------------------------------------------------

class DispatchMergingRegionsResponse : public ::google::protobuf::Message {
 public:
  DispatchMergingRegionsResponse();
  virtual ~DispatchMergingRegionsResponse();

  DispatchMergingRegionsResponse(const DispatchMergingRegionsResponse& from);

  inline DispatchMergingRegionsResponse& operator=(const DispatchMergingRegionsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DispatchMergingRegionsResponse& default_instance();

  void Swap(DispatchMergingRegionsResponse* other);

  // implements Message ----------------------------------------------

  DispatchMergingRegionsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DispatchMergingRegionsResponse& from);
  void MergeFrom(const DispatchMergingRegionsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.DispatchMergingRegionsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DispatchMergingRegionsResponse* default_instance_;
};
// -------------------------------------------------------------------

class AssignRegionRequest : public ::google::protobuf::Message {
 public:
  AssignRegionRequest();
  virtual ~AssignRegionRequest();

  AssignRegionRequest(const AssignRegionRequest& from);

  inline AssignRegionRequest& operator=(const AssignRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignRegionRequest& default_instance();

  void Swap(AssignRegionRequest* other);

  // implements Message ----------------------------------------------

  AssignRegionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssignRegionRequest& from);
  void MergeFrom(const AssignRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region();
  inline ::hbase::pb::RegionSpecifier* release_region();
  inline void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // @@protoc_insertion_point(class_scope:hbase.pb.AssignRegionRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AssignRegionRequest* default_instance_;
};
// -------------------------------------------------------------------

class AssignRegionResponse : public ::google::protobuf::Message {
 public:
  AssignRegionResponse();
  virtual ~AssignRegionResponse();

  AssignRegionResponse(const AssignRegionResponse& from);

  inline AssignRegionResponse& operator=(const AssignRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssignRegionResponse& default_instance();

  void Swap(AssignRegionResponse* other);

  // implements Message ----------------------------------------------

  AssignRegionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssignRegionResponse& from);
  void MergeFrom(const AssignRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.AssignRegionResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AssignRegionResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnassignRegionRequest : public ::google::protobuf::Message {
 public:
  UnassignRegionRequest();
  virtual ~UnassignRegionRequest();

  UnassignRegionRequest(const UnassignRegionRequest& from);

  inline UnassignRegionRequest& operator=(const UnassignRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnassignRegionRequest& default_instance();

  void Swap(UnassignRegionRequest* other);

  // implements Message ----------------------------------------------

  UnassignRegionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnassignRegionRequest& from);
  void MergeFrom(const UnassignRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region();
  inline ::hbase::pb::RegionSpecifier* release_region();
  inline void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // optional bool force = 2 [default = false];
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 2;
  inline bool force() const;
  inline void set_force(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.UnassignRegionRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_force();
  inline void clear_has_force();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_;
  bool force_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static UnassignRegionRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnassignRegionResponse : public ::google::protobuf::Message {
 public:
  UnassignRegionResponse();
  virtual ~UnassignRegionResponse();

  UnassignRegionResponse(const UnassignRegionResponse& from);

  inline UnassignRegionResponse& operator=(const UnassignRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnassignRegionResponse& default_instance();

  void Swap(UnassignRegionResponse* other);

  // implements Message ----------------------------------------------

  UnassignRegionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnassignRegionResponse& from);
  void MergeFrom(const UnassignRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.UnassignRegionResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static UnassignRegionResponse* default_instance_;
};
// -------------------------------------------------------------------

class OfflineRegionRequest : public ::google::protobuf::Message {
 public:
  OfflineRegionRequest();
  virtual ~OfflineRegionRequest();

  OfflineRegionRequest(const OfflineRegionRequest& from);

  inline OfflineRegionRequest& operator=(const OfflineRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineRegionRequest& default_instance();

  void Swap(OfflineRegionRequest* other);

  // implements Message ----------------------------------------------

  OfflineRegionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfflineRegionRequest& from);
  void MergeFrom(const OfflineRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region();
  inline ::hbase::pb::RegionSpecifier* release_region();
  inline void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // @@protoc_insertion_point(class_scope:hbase.pb.OfflineRegionRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static OfflineRegionRequest* default_instance_;
};
// -------------------------------------------------------------------

class OfflineRegionResponse : public ::google::protobuf::Message {
 public:
  OfflineRegionResponse();
  virtual ~OfflineRegionResponse();

  OfflineRegionResponse(const OfflineRegionResponse& from);

  inline OfflineRegionResponse& operator=(const OfflineRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineRegionResponse& default_instance();

  void Swap(OfflineRegionResponse* other);

  // implements Message ----------------------------------------------

  OfflineRegionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfflineRegionResponse& from);
  void MergeFrom(const OfflineRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.OfflineRegionResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static OfflineRegionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreateTableRequest : public ::google::protobuf::Message {
 public:
  CreateTableRequest();
  virtual ~CreateTableRequest();

  CreateTableRequest(const CreateTableRequest& from);

  inline CreateTableRequest& operator=(const CreateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRequest& default_instance();

  void Swap(CreateTableRequest* other);

  // implements Message ----------------------------------------------

  CreateTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableRequest& from);
  void MergeFrom(const CreateTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableSchema table_schema = 1;
  inline bool has_table_schema() const;
  inline void clear_table_schema();
  static const int kTableSchemaFieldNumber = 1;
  inline const ::hbase::pb::TableSchema& table_schema() const;
  inline ::hbase::pb::TableSchema* mutable_table_schema();
  inline ::hbase::pb::TableSchema* release_table_schema();
  inline void set_allocated_table_schema(::hbase::pb::TableSchema* table_schema);

  // repeated bytes split_keys = 2;
  inline int split_keys_size() const;
  inline void clear_split_keys();
  static const int kSplitKeysFieldNumber = 2;
  inline const ::std::string& split_keys(int index) const;
  inline ::std::string* mutable_split_keys(int index);
  inline void set_split_keys(int index, const ::std::string& value);
  inline void set_split_keys(int index, const char* value);
  inline void set_split_keys(int index, const void* value, size_t size);
  inline ::std::string* add_split_keys();
  inline void add_split_keys(const ::std::string& value);
  inline void add_split_keys(const char* value);
  inline void add_split_keys(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& split_keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_split_keys();

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.CreateTableRequest)
 private:
  inline void set_has_table_schema();
  inline void clear_has_table_schema();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableSchema* table_schema_;
  ::google::protobuf::RepeatedPtrField< ::std::string> split_keys_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static CreateTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateTableResponse : public ::google::protobuf::Message {
 public:
  CreateTableResponse();
  virtual ~CreateTableResponse();

  CreateTableResponse(const CreateTableResponse& from);

  inline CreateTableResponse& operator=(const CreateTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableResponse& default_instance();

  void Swap(CreateTableResponse* other);

  // implements Message ----------------------------------------------

  CreateTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateTableResponse& from);
  void MergeFrom(const CreateTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.CreateTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static CreateTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteTableRequest : public ::google::protobuf::Message {
 public:
  DeleteTableRequest();
  virtual ~DeleteTableRequest();

  DeleteTableRequest(const DeleteTableRequest& from);

  inline DeleteTableRequest& operator=(const DeleteTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTableRequest& default_instance();

  void Swap(DeleteTableRequest* other);

  // implements Message ----------------------------------------------

  DeleteTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteTableRequest& from);
  void MergeFrom(const DeleteTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteTableResponse : public ::google::protobuf::Message {
 public:
  DeleteTableResponse();
  virtual ~DeleteTableResponse();

  DeleteTableResponse(const DeleteTableResponse& from);

  inline DeleteTableResponse& operator=(const DeleteTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteTableResponse& default_instance();

  void Swap(DeleteTableResponse* other);

  // implements Message ----------------------------------------------

  DeleteTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteTableResponse& from);
  void MergeFrom(const DeleteTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class TruncateTableRequest : public ::google::protobuf::Message {
 public:
  TruncateTableRequest();
  virtual ~TruncateTableRequest();

  TruncateTableRequest(const TruncateTableRequest& from);

  inline TruncateTableRequest& operator=(const TruncateTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruncateTableRequest& default_instance();

  void Swap(TruncateTableRequest* other);

  // implements Message ----------------------------------------------

  TruncateTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruncateTableRequest& from);
  void MergeFrom(const TruncateTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName tableName = 1;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& tablename() const;
  inline ::hbase::pb::TableName* mutable_tablename();
  inline ::hbase::pb::TableName* release_tablename();
  inline void set_allocated_tablename(::hbase::pb::TableName* tablename);

  // optional bool preserveSplits = 2 [default = false];
  inline bool has_preservesplits() const;
  inline void clear_preservesplits();
  static const int kPreserveSplitsFieldNumber = 2;
  inline bool preservesplits() const;
  inline void set_preservesplits(bool value);

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.TruncateTableRequest)
 private:
  inline void set_has_tablename();
  inline void clear_has_tablename();
  inline void set_has_preservesplits();
  inline void clear_has_preservesplits();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* tablename_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;
  bool preservesplits_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static TruncateTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class TruncateTableResponse : public ::google::protobuf::Message {
 public:
  TruncateTableResponse();
  virtual ~TruncateTableResponse();

  TruncateTableResponse(const TruncateTableResponse& from);

  inline TruncateTableResponse& operator=(const TruncateTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TruncateTableResponse& default_instance();

  void Swap(TruncateTableResponse* other);

  // implements Message ----------------------------------------------

  TruncateTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TruncateTableResponse& from);
  void MergeFrom(const TruncateTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.TruncateTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static TruncateTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class EnableTableRequest : public ::google::protobuf::Message {
 public:
  EnableTableRequest();
  virtual ~EnableTableRequest();

  EnableTableRequest(const EnableTableRequest& from);

  inline EnableTableRequest& operator=(const EnableTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableTableRequest& default_instance();

  void Swap(EnableTableRequest* other);

  // implements Message ----------------------------------------------

  EnableTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableTableRequest& from);
  void MergeFrom(const EnableTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.EnableTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static EnableTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnableTableResponse : public ::google::protobuf::Message {
 public:
  EnableTableResponse();
  virtual ~EnableTableResponse();

  EnableTableResponse(const EnableTableResponse& from);

  inline EnableTableResponse& operator=(const EnableTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableTableResponse& default_instance();

  void Swap(EnableTableResponse* other);

  // implements Message ----------------------------------------------

  EnableTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableTableResponse& from);
  void MergeFrom(const EnableTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.EnableTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static EnableTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class DisableTableRequest : public ::google::protobuf::Message {
 public:
  DisableTableRequest();
  virtual ~DisableTableRequest();

  DisableTableRequest(const DisableTableRequest& from);

  inline DisableTableRequest& operator=(const DisableTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisableTableRequest& default_instance();

  void Swap(DisableTableRequest* other);

  // implements Message ----------------------------------------------

  DisableTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisableTableRequest& from);
  void MergeFrom(const DisableTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DisableTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DisableTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class DisableTableResponse : public ::google::protobuf::Message {
 public:
  DisableTableResponse();
  virtual ~DisableTableResponse();

  DisableTableResponse(const DisableTableResponse& from);

  inline DisableTableResponse& operator=(const DisableTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisableTableResponse& default_instance();

  void Swap(DisableTableResponse* other);

  // implements Message ----------------------------------------------

  DisableTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisableTableResponse& from);
  void MergeFrom(const DisableTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DisableTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DisableTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class ModifyTableRequest : public ::google::protobuf::Message {
 public:
  ModifyTableRequest();
  virtual ~ModifyTableRequest();

  ModifyTableRequest(const ModifyTableRequest& from);

  inline ModifyTableRequest& operator=(const ModifyTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyTableRequest& default_instance();

  void Swap(ModifyTableRequest* other);

  // implements Message ----------------------------------------------

  ModifyTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyTableRequest& from);
  void MergeFrom(const ModifyTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // required .hbase.pb.TableSchema table_schema = 2;
  inline bool has_table_schema() const;
  inline void clear_table_schema();
  static const int kTableSchemaFieldNumber = 2;
  inline const ::hbase::pb::TableSchema& table_schema() const;
  inline ::hbase::pb::TableSchema* mutable_table_schema();
  inline ::hbase::pb::TableSchema* release_table_schema();
  inline void set_allocated_table_schema(::hbase::pb::TableSchema* table_schema);

  // optional uint64 nonce_group = 3 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 4 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 4;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_table_schema();
  inline void clear_has_table_schema();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;
  ::hbase::pb::TableSchema* table_schema_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModifyTableResponse : public ::google::protobuf::Message {
 public:
  ModifyTableResponse();
  virtual ~ModifyTableResponse();

  ModifyTableResponse(const ModifyTableResponse& from);

  inline ModifyTableResponse& operator=(const ModifyTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyTableResponse& default_instance();

  void Swap(ModifyTableResponse* other);

  // implements Message ----------------------------------------------

  ModifyTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyTableResponse& from);
  void MergeFrom(const ModifyTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyTableResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreateNamespaceRequest : public ::google::protobuf::Message {
 public:
  CreateNamespaceRequest();
  virtual ~CreateNamespaceRequest();

  CreateNamespaceRequest(const CreateNamespaceRequest& from);

  inline CreateNamespaceRequest& operator=(const CreateNamespaceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNamespaceRequest& default_instance();

  void Swap(CreateNamespaceRequest* other);

  // implements Message ----------------------------------------------

  CreateNamespaceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateNamespaceRequest& from);
  void MergeFrom(const CreateNamespaceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
  inline bool has_namespacedescriptor() const;
  inline void clear_namespacedescriptor();
  static const int kNamespaceDescriptorFieldNumber = 1;
  inline const ::hbase::pb::NamespaceDescriptor& namespacedescriptor() const;
  inline ::hbase::pb::NamespaceDescriptor* mutable_namespacedescriptor();
  inline ::hbase::pb::NamespaceDescriptor* release_namespacedescriptor();
  inline void set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.CreateNamespaceRequest)
 private:
  inline void set_has_namespacedescriptor();
  inline void clear_has_namespacedescriptor();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::NamespaceDescriptor* namespacedescriptor_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static CreateNamespaceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateNamespaceResponse : public ::google::protobuf::Message {
 public:
  CreateNamespaceResponse();
  virtual ~CreateNamespaceResponse();

  CreateNamespaceResponse(const CreateNamespaceResponse& from);

  inline CreateNamespaceResponse& operator=(const CreateNamespaceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNamespaceResponse& default_instance();

  void Swap(CreateNamespaceResponse* other);

  // implements Message ----------------------------------------------

  CreateNamespaceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateNamespaceResponse& from);
  void MergeFrom(const CreateNamespaceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.CreateNamespaceResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static CreateNamespaceResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteNamespaceRequest : public ::google::protobuf::Message {
 public:
  DeleteNamespaceRequest();
  virtual ~DeleteNamespaceRequest();

  DeleteNamespaceRequest(const DeleteNamespaceRequest& from);

  inline DeleteNamespaceRequest& operator=(const DeleteNamespaceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteNamespaceRequest& default_instance();

  void Swap(DeleteNamespaceRequest* other);

  // implements Message ----------------------------------------------

  DeleteNamespaceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteNamespaceRequest& from);
  void MergeFrom(const DeleteNamespaceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string namespaceName = 1;
  inline bool has_namespacename() const;
  inline void clear_namespacename();
  static const int kNamespaceNameFieldNumber = 1;
  inline const ::std::string& namespacename() const;
  inline void set_namespacename(const ::std::string& value);
  inline void set_namespacename(const char* value);
  inline void set_namespacename(const char* value, size_t size);
  inline ::std::string* mutable_namespacename();
  inline ::std::string* release_namespacename();
  inline void set_allocated_namespacename(::std::string* namespacename);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteNamespaceRequest)
 private:
  inline void set_has_namespacename();
  inline void clear_has_namespacename();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* namespacename_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteNamespaceRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteNamespaceResponse : public ::google::protobuf::Message {
 public:
  DeleteNamespaceResponse();
  virtual ~DeleteNamespaceResponse();

  DeleteNamespaceResponse(const DeleteNamespaceResponse& from);

  inline DeleteNamespaceResponse& operator=(const DeleteNamespaceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteNamespaceResponse& default_instance();

  void Swap(DeleteNamespaceResponse* other);

  // implements Message ----------------------------------------------

  DeleteNamespaceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteNamespaceResponse& from);
  void MergeFrom(const DeleteNamespaceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteNamespaceResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteNamespaceResponse* default_instance_;
};
// -------------------------------------------------------------------

class ModifyNamespaceRequest : public ::google::protobuf::Message {
 public:
  ModifyNamespaceRequest();
  virtual ~ModifyNamespaceRequest();

  ModifyNamespaceRequest(const ModifyNamespaceRequest& from);

  inline ModifyNamespaceRequest& operator=(const ModifyNamespaceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyNamespaceRequest& default_instance();

  void Swap(ModifyNamespaceRequest* other);

  // implements Message ----------------------------------------------

  ModifyNamespaceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyNamespaceRequest& from);
  void MergeFrom(const ModifyNamespaceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
  inline bool has_namespacedescriptor() const;
  inline void clear_namespacedescriptor();
  static const int kNamespaceDescriptorFieldNumber = 1;
  inline const ::hbase::pb::NamespaceDescriptor& namespacedescriptor() const;
  inline ::hbase::pb::NamespaceDescriptor* mutable_namespacedescriptor();
  inline ::hbase::pb::NamespaceDescriptor* release_namespacedescriptor();
  inline void set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor);

  // optional uint64 nonce_group = 2 [default = 0];
  inline bool has_nonce_group() const;
  inline void clear_nonce_group();
  static const int kNonceGroupFieldNumber = 2;
  inline ::google::protobuf::uint64 nonce_group() const;
  inline void set_nonce_group(::google::protobuf::uint64 value);

  // optional uint64 nonce = 3 [default = 0];
  inline bool has_nonce() const;
  inline void clear_nonce();
  static const int kNonceFieldNumber = 3;
  inline ::google::protobuf::uint64 nonce() const;
  inline void set_nonce(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyNamespaceRequest)
 private:
  inline void set_has_namespacedescriptor();
  inline void clear_has_namespacedescriptor();
  inline void set_has_nonce_group();
  inline void clear_has_nonce_group();
  inline void set_has_nonce();
  inline void clear_has_nonce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::NamespaceDescriptor* namespacedescriptor_;
  ::google::protobuf::uint64 nonce_group_;
  ::google::protobuf::uint64 nonce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyNamespaceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModifyNamespaceResponse : public ::google::protobuf::Message {
 public:
  ModifyNamespaceResponse();
  virtual ~ModifyNamespaceResponse();

  ModifyNamespaceResponse(const ModifyNamespaceResponse& from);

  inline ModifyNamespaceResponse& operator=(const ModifyNamespaceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyNamespaceResponse& default_instance();

  void Swap(ModifyNamespaceResponse* other);

  // implements Message ----------------------------------------------

  ModifyNamespaceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyNamespaceResponse& from);
  void MergeFrom(const ModifyNamespaceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.ModifyNamespaceResponse)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ModifyNamespaceResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetNamespaceDescriptorRequest : public ::google::protobuf::Message {
 public:
  GetNamespaceDescriptorRequest();
  virtual ~GetNamespaceDescriptorRequest();

  GetNamespaceDescriptorRequest(const GetNamespaceDescriptorRequest& from);

  inline GetNamespaceDescriptorRequest& operator=(const GetNamespaceDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNamespaceDescriptorRequest& default_instance();

  void Swap(GetNamespaceDescriptorRequest* other);

  // implements Message ----------------------------------------------

  GetNamespaceDescriptorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNamespaceDescriptorRequest& from);
  void MergeFrom(const GetNamespaceDescriptorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string namespaceName = 1;
  inline bool has_namespacename() const;
  inline void clear_namespacename();
  static const int kNamespaceNameFieldNumber = 1;
  inline const ::std::string& namespacename() const;
  inline void set_namespacename(const ::std::string& value);
  inline void set_namespacename(const char* value);
  inline void set_namespacename(const char* value, size_t size);
  inline ::std::string* mutable_namespacename();
  inline ::std::string* release_namespacename();
  inline void set_allocated_namespacename(::std::string* namespacename);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetNamespaceDescriptorRequest)
 private:
  inline void set_has_namespacename();
  inline void clear_has_namespacename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* namespacename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetNamespaceDescriptorRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetNamespaceDescriptorResponse : public ::google::protobuf::Message {
 public:
  GetNamespaceDescriptorResponse();
  virtual ~GetNamespaceDescriptorResponse();

  GetNamespaceDescriptorResponse(const GetNamespaceDescriptorResponse& from);

  inline GetNamespaceDescriptorResponse& operator=(const GetNamespaceDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNamespaceDescriptorResponse& default_instance();

  void Swap(GetNamespaceDescriptorResponse* other);

  // implements Message ----------------------------------------------

  GetNamespaceDescriptorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNamespaceDescriptorResponse& from);
  void MergeFrom(const GetNamespaceDescriptorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
  inline bool has_namespacedescriptor() const;
  inline void clear_namespacedescriptor();
  static const int kNamespaceDescriptorFieldNumber = 1;
  inline const ::hbase::pb::NamespaceDescriptor& namespacedescriptor() const;
  inline ::hbase::pb::NamespaceDescriptor* mutable_namespacedescriptor();
  inline ::hbase::pb::NamespaceDescriptor* release_namespacedescriptor();
  inline void set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetNamespaceDescriptorResponse)
 private:
  inline void set_has_namespacedescriptor();
  inline void clear_has_namespacedescriptor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::NamespaceDescriptor* namespacedescriptor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetNamespaceDescriptorResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListNamespaceDescriptorsRequest : public ::google::protobuf::Message {
 public:
  ListNamespaceDescriptorsRequest();
  virtual ~ListNamespaceDescriptorsRequest();

  ListNamespaceDescriptorsRequest(const ListNamespaceDescriptorsRequest& from);

  inline ListNamespaceDescriptorsRequest& operator=(const ListNamespaceDescriptorsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListNamespaceDescriptorsRequest& default_instance();

  void Swap(ListNamespaceDescriptorsRequest* other);

  // implements Message ----------------------------------------------

  ListNamespaceDescriptorsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListNamespaceDescriptorsRequest& from);
  void MergeFrom(const ListNamespaceDescriptorsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.ListNamespaceDescriptorsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListNamespaceDescriptorsRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListNamespaceDescriptorsResponse : public ::google::protobuf::Message {
 public:
  ListNamespaceDescriptorsResponse();
  virtual ~ListNamespaceDescriptorsResponse();

  ListNamespaceDescriptorsResponse(const ListNamespaceDescriptorsResponse& from);

  inline ListNamespaceDescriptorsResponse& operator=(const ListNamespaceDescriptorsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListNamespaceDescriptorsResponse& default_instance();

  void Swap(ListNamespaceDescriptorsResponse* other);

  // implements Message ----------------------------------------------

  ListNamespaceDescriptorsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListNamespaceDescriptorsResponse& from);
  void MergeFrom(const ListNamespaceDescriptorsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
  inline int namespacedescriptor_size() const;
  inline void clear_namespacedescriptor();
  static const int kNamespaceDescriptorFieldNumber = 1;
  inline const ::hbase::pb::NamespaceDescriptor& namespacedescriptor(int index) const;
  inline ::hbase::pb::NamespaceDescriptor* mutable_namespacedescriptor(int index);
  inline ::hbase::pb::NamespaceDescriptor* add_namespacedescriptor();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::NamespaceDescriptor >&
      namespacedescriptor() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::NamespaceDescriptor >*
      mutable_namespacedescriptor();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListNamespaceDescriptorsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::NamespaceDescriptor > namespacedescriptor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListNamespaceDescriptorsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListTableDescriptorsByNamespaceRequest : public ::google::protobuf::Message {
 public:
  ListTableDescriptorsByNamespaceRequest();
  virtual ~ListTableDescriptorsByNamespaceRequest();

  ListTableDescriptorsByNamespaceRequest(const ListTableDescriptorsByNamespaceRequest& from);

  inline ListTableDescriptorsByNamespaceRequest& operator=(const ListTableDescriptorsByNamespaceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableDescriptorsByNamespaceRequest& default_instance();

  void Swap(ListTableDescriptorsByNamespaceRequest* other);

  // implements Message ----------------------------------------------

  ListTableDescriptorsByNamespaceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableDescriptorsByNamespaceRequest& from);
  void MergeFrom(const ListTableDescriptorsByNamespaceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string namespaceName = 1;
  inline bool has_namespacename() const;
  inline void clear_namespacename();
  static const int kNamespaceNameFieldNumber = 1;
  inline const ::std::string& namespacename() const;
  inline void set_namespacename(const ::std::string& value);
  inline void set_namespacename(const char* value);
  inline void set_namespacename(const char* value, size_t size);
  inline ::std::string* mutable_namespacename();
  inline ::std::string* release_namespacename();
  inline void set_allocated_namespacename(::std::string* namespacename);

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTableDescriptorsByNamespaceRequest)
 private:
  inline void set_has_namespacename();
  inline void clear_has_namespacename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* namespacename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListTableDescriptorsByNamespaceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListTableDescriptorsByNamespaceResponse : public ::google::protobuf::Message {
 public:
  ListTableDescriptorsByNamespaceResponse();
  virtual ~ListTableDescriptorsByNamespaceResponse();

  ListTableDescriptorsByNamespaceResponse(const ListTableDescriptorsByNamespaceResponse& from);

  inline ListTableDescriptorsByNamespaceResponse& operator=(const ListTableDescriptorsByNamespaceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableDescriptorsByNamespaceResponse& default_instance();

  void Swap(ListTableDescriptorsByNamespaceResponse* other);

  // implements Message ----------------------------------------------

  ListTableDescriptorsByNamespaceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableDescriptorsByNamespaceResponse& from);
  void MergeFrom(const ListTableDescriptorsByNamespaceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableSchema tableSchema = 1;
  inline int tableschema_size() const;
  inline void clear_tableschema();
  static const int kTableSchemaFieldNumber = 1;
  inline const ::hbase::pb::TableSchema& tableschema(int index) const;
  inline ::hbase::pb::TableSchema* mutable_tableschema(int index);
  inline ::hbase::pb::TableSchema* add_tableschema();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >&
      tableschema() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >*
      mutable_tableschema();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTableDescriptorsByNamespaceResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema > tableschema_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListTableDescriptorsByNamespaceResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListTableNamesByNamespaceRequest : public ::google::protobuf::Message {
 public:
  ListTableNamesByNamespaceRequest();
  virtual ~ListTableNamesByNamespaceRequest();

  ListTableNamesByNamespaceRequest(const ListTableNamesByNamespaceRequest& from);

  inline ListTableNamesByNamespaceRequest& operator=(const ListTableNamesByNamespaceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableNamesByNamespaceRequest& default_instance();

  void Swap(ListTableNamesByNamespaceRequest* other);

  // implements Message ----------------------------------------------

  ListTableNamesByNamespaceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableNamesByNamespaceRequest& from);
  void MergeFrom(const ListTableNamesByNamespaceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string namespaceName = 1;
  inline bool has_namespacename() const;
  inline void clear_namespacename();
  static const int kNamespaceNameFieldNumber = 1;
  inline const ::std::string& namespacename() const;
  inline void set_namespacename(const ::std::string& value);
  inline void set_namespacename(const char* value);
  inline void set_namespacename(const char* value, size_t size);
  inline ::std::string* mutable_namespacename();
  inline ::std::string* release_namespacename();
  inline void set_allocated_namespacename(::std::string* namespacename);

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTableNamesByNamespaceRequest)
 private:
  inline void set_has_namespacename();
  inline void clear_has_namespacename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* namespacename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListTableNamesByNamespaceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListTableNamesByNamespaceResponse : public ::google::protobuf::Message {
 public:
  ListTableNamesByNamespaceResponse();
  virtual ~ListTableNamesByNamespaceResponse();

  ListTableNamesByNamespaceResponse(const ListTableNamesByNamespaceResponse& from);

  inline ListTableNamesByNamespaceResponse& operator=(const ListTableNamesByNamespaceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTableNamesByNamespaceResponse& default_instance();

  void Swap(ListTableNamesByNamespaceResponse* other);

  // implements Message ----------------------------------------------

  ListTableNamesByNamespaceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTableNamesByNamespaceResponse& from);
  void MergeFrom(const ListTableNamesByNamespaceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableName tableName = 1;
  inline int tablename_size() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& tablename(int index) const;
  inline ::hbase::pb::TableName* mutable_tablename(int index);
  inline ::hbase::pb::TableName* add_tablename();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
      tablename() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
      mutable_tablename();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTableNamesByNamespaceResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName > tablename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListTableNamesByNamespaceResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownRequest : public ::google::protobuf::Message {
 public:
  ShutdownRequest();
  virtual ~ShutdownRequest();

  ShutdownRequest(const ShutdownRequest& from);

  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownRequest& default_instance();

  void Swap(ShutdownRequest* other);

  // implements Message ----------------------------------------------

  ShutdownRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownRequest& from);
  void MergeFrom(const ShutdownRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.ShutdownRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ShutdownRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownResponse : public ::google::protobuf::Message {
 public:
  ShutdownResponse();
  virtual ~ShutdownResponse();

  ShutdownResponse(const ShutdownResponse& from);

  inline ShutdownResponse& operator=(const ShutdownResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownResponse& default_instance();

  void Swap(ShutdownResponse* other);

  // implements Message ----------------------------------------------

  ShutdownResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownResponse& from);
  void MergeFrom(const ShutdownResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.ShutdownResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ShutdownResponse* default_instance_;
};
// -------------------------------------------------------------------

class StopMasterRequest : public ::google::protobuf::Message {
 public:
  StopMasterRequest();
  virtual ~StopMasterRequest();

  StopMasterRequest(const StopMasterRequest& from);

  inline StopMasterRequest& operator=(const StopMasterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopMasterRequest& default_instance();

  void Swap(StopMasterRequest* other);

  // implements Message ----------------------------------------------

  StopMasterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopMasterRequest& from);
  void MergeFrom(const StopMasterRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.StopMasterRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static StopMasterRequest* default_instance_;
};
// -------------------------------------------------------------------

class StopMasterResponse : public ::google::protobuf::Message {
 public:
  StopMasterResponse();
  virtual ~StopMasterResponse();

  StopMasterResponse(const StopMasterResponse& from);

  inline StopMasterResponse& operator=(const StopMasterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopMasterResponse& default_instance();

  void Swap(StopMasterResponse* other);

  // implements Message ----------------------------------------------

  StopMasterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopMasterResponse& from);
  void MergeFrom(const StopMasterResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.StopMasterResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static StopMasterResponse* default_instance_;
};
// -------------------------------------------------------------------

class BalanceRequest : public ::google::protobuf::Message {
 public:
  BalanceRequest();
  virtual ~BalanceRequest();

  BalanceRequest(const BalanceRequest& from);

  inline BalanceRequest& operator=(const BalanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceRequest& default_instance();

  void Swap(BalanceRequest* other);

  // implements Message ----------------------------------------------

  BalanceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BalanceRequest& from);
  void MergeFrom(const BalanceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool force = 1;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 1;
  inline bool force() const;
  inline void set_force(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.BalanceRequest)
 private:
  inline void set_has_force();
  inline void clear_has_force();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool force_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static BalanceRequest* default_instance_;
};
// -------------------------------------------------------------------

class BalanceResponse : public ::google::protobuf::Message {
 public:
  BalanceResponse();
  virtual ~BalanceResponse();

  BalanceResponse(const BalanceResponse& from);

  inline BalanceResponse& operator=(const BalanceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceResponse& default_instance();

  void Swap(BalanceResponse* other);

  // implements Message ----------------------------------------------

  BalanceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BalanceResponse& from);
  void MergeFrom(const BalanceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool balancer_ran = 1;
  inline bool has_balancer_ran() const;
  inline void clear_balancer_ran();
  static const int kBalancerRanFieldNumber = 1;
  inline bool balancer_ran() const;
  inline void set_balancer_ran(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.BalanceResponse)
 private:
  inline void set_has_balancer_ran();
  inline void clear_has_balancer_ran();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool balancer_ran_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static BalanceResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetBalancerRunningRequest : public ::google::protobuf::Message {
 public:
  SetBalancerRunningRequest();
  virtual ~SetBalancerRunningRequest();

  SetBalancerRunningRequest(const SetBalancerRunningRequest& from);

  inline SetBalancerRunningRequest& operator=(const SetBalancerRunningRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetBalancerRunningRequest& default_instance();

  void Swap(SetBalancerRunningRequest* other);

  // implements Message ----------------------------------------------

  SetBalancerRunningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetBalancerRunningRequest& from);
  void MergeFrom(const SetBalancerRunningRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool on = 1;
  inline bool has_on() const;
  inline void clear_on();
  static const int kOnFieldNumber = 1;
  inline bool on() const;
  inline void set_on(bool value);

  // optional bool synchronous = 2;
  inline bool has_synchronous() const;
  inline void clear_synchronous();
  static const int kSynchronousFieldNumber = 2;
  inline bool synchronous() const;
  inline void set_synchronous(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.SetBalancerRunningRequest)
 private:
  inline void set_has_on();
  inline void clear_has_on();
  inline void set_has_synchronous();
  inline void clear_has_synchronous();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool on_;
  bool synchronous_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetBalancerRunningRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetBalancerRunningResponse : public ::google::protobuf::Message {
 public:
  SetBalancerRunningResponse();
  virtual ~SetBalancerRunningResponse();

  SetBalancerRunningResponse(const SetBalancerRunningResponse& from);

  inline SetBalancerRunningResponse& operator=(const SetBalancerRunningResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetBalancerRunningResponse& default_instance();

  void Swap(SetBalancerRunningResponse* other);

  // implements Message ----------------------------------------------

  SetBalancerRunningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetBalancerRunningResponse& from);
  void MergeFrom(const SetBalancerRunningResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool prev_balance_value = 1;
  inline bool has_prev_balance_value() const;
  inline void clear_prev_balance_value();
  static const int kPrevBalanceValueFieldNumber = 1;
  inline bool prev_balance_value() const;
  inline void set_prev_balance_value(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.SetBalancerRunningResponse)
 private:
  inline void set_has_prev_balance_value();
  inline void clear_has_prev_balance_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool prev_balance_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetBalancerRunningResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsBalancerEnabledRequest : public ::google::protobuf::Message {
 public:
  IsBalancerEnabledRequest();
  virtual ~IsBalancerEnabledRequest();

  IsBalancerEnabledRequest(const IsBalancerEnabledRequest& from);

  inline IsBalancerEnabledRequest& operator=(const IsBalancerEnabledRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsBalancerEnabledRequest& default_instance();

  void Swap(IsBalancerEnabledRequest* other);

  // implements Message ----------------------------------------------

  IsBalancerEnabledRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsBalancerEnabledRequest& from);
  void MergeFrom(const IsBalancerEnabledRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.IsBalancerEnabledRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsBalancerEnabledRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsBalancerEnabledResponse : public ::google::protobuf::Message {
 public:
  IsBalancerEnabledResponse();
  virtual ~IsBalancerEnabledResponse();

  IsBalancerEnabledResponse(const IsBalancerEnabledResponse& from);

  inline IsBalancerEnabledResponse& operator=(const IsBalancerEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsBalancerEnabledResponse& default_instance();

  void Swap(IsBalancerEnabledResponse* other);

  // implements Message ----------------------------------------------

  IsBalancerEnabledResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsBalancerEnabledResponse& from);
  void MergeFrom(const IsBalancerEnabledResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool enabled = 1;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsBalancerEnabledResponse)
 private:
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool enabled_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsBalancerEnabledResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetSplitOrMergeEnabledRequest : public ::google::protobuf::Message {
 public:
  SetSplitOrMergeEnabledRequest();
  virtual ~SetSplitOrMergeEnabledRequest();

  SetSplitOrMergeEnabledRequest(const SetSplitOrMergeEnabledRequest& from);

  inline SetSplitOrMergeEnabledRequest& operator=(const SetSplitOrMergeEnabledRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSplitOrMergeEnabledRequest& default_instance();

  void Swap(SetSplitOrMergeEnabledRequest* other);

  // implements Message ----------------------------------------------

  SetSplitOrMergeEnabledRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetSplitOrMergeEnabledRequest& from);
  void MergeFrom(const SetSplitOrMergeEnabledRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool enabled = 1;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // optional bool synchronous = 2;
  inline bool has_synchronous() const;
  inline void clear_synchronous();
  static const int kSynchronousFieldNumber = 2;
  inline bool synchronous() const;
  inline void set_synchronous(bool value);

  // repeated .hbase.pb.MasterSwitchType switch_types = 3;
  inline int switch_types_size() const;
  inline void clear_switch_types();
  static const int kSwitchTypesFieldNumber = 3;
  inline ::hbase::pb::MasterSwitchType switch_types(int index) const;
  inline void set_switch_types(int index, ::hbase::pb::MasterSwitchType value);
  inline void add_switch_types(::hbase::pb::MasterSwitchType value);
  inline const ::google::protobuf::RepeatedField<int>& switch_types() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_switch_types();

  // @@protoc_insertion_point(class_scope:hbase.pb.SetSplitOrMergeEnabledRequest)
 private:
  inline void set_has_enabled();
  inline void clear_has_enabled();
  inline void set_has_synchronous();
  inline void clear_has_synchronous();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField<int> switch_types_;
  bool enabled_;
  bool synchronous_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetSplitOrMergeEnabledRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetSplitOrMergeEnabledResponse : public ::google::protobuf::Message {
 public:
  SetSplitOrMergeEnabledResponse();
  virtual ~SetSplitOrMergeEnabledResponse();

  SetSplitOrMergeEnabledResponse(const SetSplitOrMergeEnabledResponse& from);

  inline SetSplitOrMergeEnabledResponse& operator=(const SetSplitOrMergeEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSplitOrMergeEnabledResponse& default_instance();

  void Swap(SetSplitOrMergeEnabledResponse* other);

  // implements Message ----------------------------------------------

  SetSplitOrMergeEnabledResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetSplitOrMergeEnabledResponse& from);
  void MergeFrom(const SetSplitOrMergeEnabledResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool prev_value = 1;
  inline int prev_value_size() const;
  inline void clear_prev_value();
  static const int kPrevValueFieldNumber = 1;
  inline bool prev_value(int index) const;
  inline void set_prev_value(int index, bool value);
  inline void add_prev_value(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      prev_value() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_prev_value();

  // @@protoc_insertion_point(class_scope:hbase.pb.SetSplitOrMergeEnabledResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > prev_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetSplitOrMergeEnabledResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsSplitOrMergeEnabledRequest : public ::google::protobuf::Message {
 public:
  IsSplitOrMergeEnabledRequest();
  virtual ~IsSplitOrMergeEnabledRequest();

  IsSplitOrMergeEnabledRequest(const IsSplitOrMergeEnabledRequest& from);

  inline IsSplitOrMergeEnabledRequest& operator=(const IsSplitOrMergeEnabledRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsSplitOrMergeEnabledRequest& default_instance();

  void Swap(IsSplitOrMergeEnabledRequest* other);

  // implements Message ----------------------------------------------

  IsSplitOrMergeEnabledRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsSplitOrMergeEnabledRequest& from);
  void MergeFrom(const IsSplitOrMergeEnabledRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.MasterSwitchType switch_type = 1;
  inline bool has_switch_type() const;
  inline void clear_switch_type();
  static const int kSwitchTypeFieldNumber = 1;
  inline ::hbase::pb::MasterSwitchType switch_type() const;
  inline void set_switch_type(::hbase::pb::MasterSwitchType value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsSplitOrMergeEnabledRequest)
 private:
  inline void set_has_switch_type();
  inline void clear_has_switch_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int switch_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsSplitOrMergeEnabledRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsSplitOrMergeEnabledResponse : public ::google::protobuf::Message {
 public:
  IsSplitOrMergeEnabledResponse();
  virtual ~IsSplitOrMergeEnabledResponse();

  IsSplitOrMergeEnabledResponse(const IsSplitOrMergeEnabledResponse& from);

  inline IsSplitOrMergeEnabledResponse& operator=(const IsSplitOrMergeEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsSplitOrMergeEnabledResponse& default_instance();

  void Swap(IsSplitOrMergeEnabledResponse* other);

  // implements Message ----------------------------------------------

  IsSplitOrMergeEnabledResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsSplitOrMergeEnabledResponse& from);
  void MergeFrom(const IsSplitOrMergeEnabledResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool enabled = 1;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsSplitOrMergeEnabledResponse)
 private:
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool enabled_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsSplitOrMergeEnabledResponse* default_instance_;
};
// -------------------------------------------------------------------

class NormalizeRequest : public ::google::protobuf::Message {
 public:
  NormalizeRequest();
  virtual ~NormalizeRequest();

  NormalizeRequest(const NormalizeRequest& from);

  inline NormalizeRequest& operator=(const NormalizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalizeRequest& default_instance();

  void Swap(NormalizeRequest* other);

  // implements Message ----------------------------------------------

  NormalizeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NormalizeRequest& from);
  void MergeFrom(const NormalizeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.NormalizeRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static NormalizeRequest* default_instance_;
};
// -------------------------------------------------------------------

class NormalizeResponse : public ::google::protobuf::Message {
 public:
  NormalizeResponse();
  virtual ~NormalizeResponse();

  NormalizeResponse(const NormalizeResponse& from);

  inline NormalizeResponse& operator=(const NormalizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalizeResponse& default_instance();

  void Swap(NormalizeResponse* other);

  // implements Message ----------------------------------------------

  NormalizeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NormalizeResponse& from);
  void MergeFrom(const NormalizeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool normalizer_ran = 1;
  inline bool has_normalizer_ran() const;
  inline void clear_normalizer_ran();
  static const int kNormalizerRanFieldNumber = 1;
  inline bool normalizer_ran() const;
  inline void set_normalizer_ran(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.NormalizeResponse)
 private:
  inline void set_has_normalizer_ran();
  inline void clear_has_normalizer_ran();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool normalizer_ran_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static NormalizeResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetNormalizerRunningRequest : public ::google::protobuf::Message {
 public:
  SetNormalizerRunningRequest();
  virtual ~SetNormalizerRunningRequest();

  SetNormalizerRunningRequest(const SetNormalizerRunningRequest& from);

  inline SetNormalizerRunningRequest& operator=(const SetNormalizerRunningRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNormalizerRunningRequest& default_instance();

  void Swap(SetNormalizerRunningRequest* other);

  // implements Message ----------------------------------------------

  SetNormalizerRunningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetNormalizerRunningRequest& from);
  void MergeFrom(const SetNormalizerRunningRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool on = 1;
  inline bool has_on() const;
  inline void clear_on();
  static const int kOnFieldNumber = 1;
  inline bool on() const;
  inline void set_on(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.SetNormalizerRunningRequest)
 private:
  inline void set_has_on();
  inline void clear_has_on();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool on_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetNormalizerRunningRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetNormalizerRunningResponse : public ::google::protobuf::Message {
 public:
  SetNormalizerRunningResponse();
  virtual ~SetNormalizerRunningResponse();

  SetNormalizerRunningResponse(const SetNormalizerRunningResponse& from);

  inline SetNormalizerRunningResponse& operator=(const SetNormalizerRunningResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNormalizerRunningResponse& default_instance();

  void Swap(SetNormalizerRunningResponse* other);

  // implements Message ----------------------------------------------

  SetNormalizerRunningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetNormalizerRunningResponse& from);
  void MergeFrom(const SetNormalizerRunningResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool prev_normalizer_value = 1;
  inline bool has_prev_normalizer_value() const;
  inline void clear_prev_normalizer_value();
  static const int kPrevNormalizerValueFieldNumber = 1;
  inline bool prev_normalizer_value() const;
  inline void set_prev_normalizer_value(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.SetNormalizerRunningResponse)
 private:
  inline void set_has_prev_normalizer_value();
  inline void clear_has_prev_normalizer_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool prev_normalizer_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetNormalizerRunningResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsNormalizerEnabledRequest : public ::google::protobuf::Message {
 public:
  IsNormalizerEnabledRequest();
  virtual ~IsNormalizerEnabledRequest();

  IsNormalizerEnabledRequest(const IsNormalizerEnabledRequest& from);

  inline IsNormalizerEnabledRequest& operator=(const IsNormalizerEnabledRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsNormalizerEnabledRequest& default_instance();

  void Swap(IsNormalizerEnabledRequest* other);

  // implements Message ----------------------------------------------

  IsNormalizerEnabledRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsNormalizerEnabledRequest& from);
  void MergeFrom(const IsNormalizerEnabledRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.IsNormalizerEnabledRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsNormalizerEnabledRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsNormalizerEnabledResponse : public ::google::protobuf::Message {
 public:
  IsNormalizerEnabledResponse();
  virtual ~IsNormalizerEnabledResponse();

  IsNormalizerEnabledResponse(const IsNormalizerEnabledResponse& from);

  inline IsNormalizerEnabledResponse& operator=(const IsNormalizerEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsNormalizerEnabledResponse& default_instance();

  void Swap(IsNormalizerEnabledResponse* other);

  // implements Message ----------------------------------------------

  IsNormalizerEnabledResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsNormalizerEnabledResponse& from);
  void MergeFrom(const IsNormalizerEnabledResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool enabled = 1;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsNormalizerEnabledResponse)
 private:
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool enabled_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsNormalizerEnabledResponse* default_instance_;
};
// -------------------------------------------------------------------

class RunCatalogScanRequest : public ::google::protobuf::Message {
 public:
  RunCatalogScanRequest();
  virtual ~RunCatalogScanRequest();

  RunCatalogScanRequest(const RunCatalogScanRequest& from);

  inline RunCatalogScanRequest& operator=(const RunCatalogScanRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunCatalogScanRequest& default_instance();

  void Swap(RunCatalogScanRequest* other);

  // implements Message ----------------------------------------------

  RunCatalogScanRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunCatalogScanRequest& from);
  void MergeFrom(const RunCatalogScanRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.RunCatalogScanRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static RunCatalogScanRequest* default_instance_;
};
// -------------------------------------------------------------------

class RunCatalogScanResponse : public ::google::protobuf::Message {
 public:
  RunCatalogScanResponse();
  virtual ~RunCatalogScanResponse();

  RunCatalogScanResponse(const RunCatalogScanResponse& from);

  inline RunCatalogScanResponse& operator=(const RunCatalogScanResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunCatalogScanResponse& default_instance();

  void Swap(RunCatalogScanResponse* other);

  // implements Message ----------------------------------------------

  RunCatalogScanResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunCatalogScanResponse& from);
  void MergeFrom(const RunCatalogScanResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 scan_result = 1;
  inline bool has_scan_result() const;
  inline void clear_scan_result();
  static const int kScanResultFieldNumber = 1;
  inline ::google::protobuf::int32 scan_result() const;
  inline void set_scan_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.RunCatalogScanResponse)
 private:
  inline void set_has_scan_result();
  inline void clear_has_scan_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 scan_result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static RunCatalogScanResponse* default_instance_;
};
// -------------------------------------------------------------------

class EnableCatalogJanitorRequest : public ::google::protobuf::Message {
 public:
  EnableCatalogJanitorRequest();
  virtual ~EnableCatalogJanitorRequest();

  EnableCatalogJanitorRequest(const EnableCatalogJanitorRequest& from);

  inline EnableCatalogJanitorRequest& operator=(const EnableCatalogJanitorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableCatalogJanitorRequest& default_instance();

  void Swap(EnableCatalogJanitorRequest* other);

  // implements Message ----------------------------------------------

  EnableCatalogJanitorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableCatalogJanitorRequest& from);
  void MergeFrom(const EnableCatalogJanitorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool enable = 1;
  inline bool has_enable() const;
  inline void clear_enable();
  static const int kEnableFieldNumber = 1;
  inline bool enable() const;
  inline void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.EnableCatalogJanitorRequest)
 private:
  inline void set_has_enable();
  inline void clear_has_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool enable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static EnableCatalogJanitorRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnableCatalogJanitorResponse : public ::google::protobuf::Message {
 public:
  EnableCatalogJanitorResponse();
  virtual ~EnableCatalogJanitorResponse();

  EnableCatalogJanitorResponse(const EnableCatalogJanitorResponse& from);

  inline EnableCatalogJanitorResponse& operator=(const EnableCatalogJanitorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnableCatalogJanitorResponse& default_instance();

  void Swap(EnableCatalogJanitorResponse* other);

  // implements Message ----------------------------------------------

  EnableCatalogJanitorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnableCatalogJanitorResponse& from);
  void MergeFrom(const EnableCatalogJanitorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool prev_value = 1;
  inline bool has_prev_value() const;
  inline void clear_prev_value();
  static const int kPrevValueFieldNumber = 1;
  inline bool prev_value() const;
  inline void set_prev_value(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.EnableCatalogJanitorResponse)
 private:
  inline void set_has_prev_value();
  inline void clear_has_prev_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool prev_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static EnableCatalogJanitorResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsCatalogJanitorEnabledRequest : public ::google::protobuf::Message {
 public:
  IsCatalogJanitorEnabledRequest();
  virtual ~IsCatalogJanitorEnabledRequest();

  IsCatalogJanitorEnabledRequest(const IsCatalogJanitorEnabledRequest& from);

  inline IsCatalogJanitorEnabledRequest& operator=(const IsCatalogJanitorEnabledRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsCatalogJanitorEnabledRequest& default_instance();

  void Swap(IsCatalogJanitorEnabledRequest* other);

  // implements Message ----------------------------------------------

  IsCatalogJanitorEnabledRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsCatalogJanitorEnabledRequest& from);
  void MergeFrom(const IsCatalogJanitorEnabledRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.IsCatalogJanitorEnabledRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsCatalogJanitorEnabledRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsCatalogJanitorEnabledResponse : public ::google::protobuf::Message {
 public:
  IsCatalogJanitorEnabledResponse();
  virtual ~IsCatalogJanitorEnabledResponse();

  IsCatalogJanitorEnabledResponse(const IsCatalogJanitorEnabledResponse& from);

  inline IsCatalogJanitorEnabledResponse& operator=(const IsCatalogJanitorEnabledResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsCatalogJanitorEnabledResponse& default_instance();

  void Swap(IsCatalogJanitorEnabledResponse* other);

  // implements Message ----------------------------------------------

  IsCatalogJanitorEnabledResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsCatalogJanitorEnabledResponse& from);
  void MergeFrom(const IsCatalogJanitorEnabledResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline bool value() const;
  inline void set_value(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsCatalogJanitorEnabledResponse)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsCatalogJanitorEnabledResponse* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotRequest : public ::google::protobuf::Message {
 public:
  SnapshotRequest();
  virtual ~SnapshotRequest();

  SnapshotRequest(const SnapshotRequest& from);

  inline SnapshotRequest& operator=(const SnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotRequest& default_instance();

  void Swap(SnapshotRequest* other);

  // implements Message ----------------------------------------------

  SnapshotRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotRequest& from);
  void MergeFrom(const SnapshotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.SnapshotDescription snapshot = 1;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.SnapshotRequest)
 private:
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SnapshotRequest* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotResponse : public ::google::protobuf::Message {
 public:
  SnapshotResponse();
  virtual ~SnapshotResponse();

  SnapshotResponse(const SnapshotResponse& from);

  inline SnapshotResponse& operator=(const SnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotResponse& default_instance();

  void Swap(SnapshotResponse* other);

  // implements Message ----------------------------------------------

  SnapshotResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotResponse& from);
  void MergeFrom(const SnapshotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 expected_timeout = 1;
  inline bool has_expected_timeout() const;
  inline void clear_expected_timeout();
  static const int kExpectedTimeoutFieldNumber = 1;
  inline ::google::protobuf::int64 expected_timeout() const;
  inline void set_expected_timeout(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.SnapshotResponse)
 private:
  inline void set_has_expected_timeout();
  inline void clear_has_expected_timeout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 expected_timeout_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SnapshotResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetCompletedSnapshotsRequest : public ::google::protobuf::Message {
 public:
  GetCompletedSnapshotsRequest();
  virtual ~GetCompletedSnapshotsRequest();

  GetCompletedSnapshotsRequest(const GetCompletedSnapshotsRequest& from);

  inline GetCompletedSnapshotsRequest& operator=(const GetCompletedSnapshotsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompletedSnapshotsRequest& default_instance();

  void Swap(GetCompletedSnapshotsRequest* other);

  // implements Message ----------------------------------------------

  GetCompletedSnapshotsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCompletedSnapshotsRequest& from);
  void MergeFrom(const GetCompletedSnapshotsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.GetCompletedSnapshotsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetCompletedSnapshotsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetCompletedSnapshotsResponse : public ::google::protobuf::Message {
 public:
  GetCompletedSnapshotsResponse();
  virtual ~GetCompletedSnapshotsResponse();

  GetCompletedSnapshotsResponse(const GetCompletedSnapshotsResponse& from);

  inline GetCompletedSnapshotsResponse& operator=(const GetCompletedSnapshotsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompletedSnapshotsResponse& default_instance();

  void Swap(GetCompletedSnapshotsResponse* other);

  // implements Message ----------------------------------------------

  GetCompletedSnapshotsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCompletedSnapshotsResponse& from);
  void MergeFrom(const GetCompletedSnapshotsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.SnapshotDescription snapshots = 1;
  inline int snapshots_size() const;
  inline void clear_snapshots();
  static const int kSnapshotsFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshots(int index) const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshots(int index);
  inline ::hbase::pb::SnapshotDescription* add_snapshots();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::SnapshotDescription >&
      snapshots() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::SnapshotDescription >*
      mutable_snapshots();

  // @@protoc_insertion_point(class_scope:hbase.pb.GetCompletedSnapshotsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::SnapshotDescription > snapshots_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetCompletedSnapshotsResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSnapshotRequest : public ::google::protobuf::Message {
 public:
  DeleteSnapshotRequest();
  virtual ~DeleteSnapshotRequest();

  DeleteSnapshotRequest(const DeleteSnapshotRequest& from);

  inline DeleteSnapshotRequest& operator=(const DeleteSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSnapshotRequest& default_instance();

  void Swap(DeleteSnapshotRequest* other);

  // implements Message ----------------------------------------------

  DeleteSnapshotRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteSnapshotRequest& from);
  void MergeFrom(const DeleteSnapshotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.SnapshotDescription snapshot = 1;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteSnapshotRequest)
 private:
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteSnapshotRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSnapshotResponse : public ::google::protobuf::Message {
 public:
  DeleteSnapshotResponse();
  virtual ~DeleteSnapshotResponse();

  DeleteSnapshotResponse(const DeleteSnapshotResponse& from);

  inline DeleteSnapshotResponse& operator=(const DeleteSnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSnapshotResponse& default_instance();

  void Swap(DeleteSnapshotResponse* other);

  // implements Message ----------------------------------------------

  DeleteSnapshotResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteSnapshotResponse& from);
  void MergeFrom(const DeleteSnapshotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.DeleteSnapshotResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static DeleteSnapshotResponse* default_instance_;
};
// -------------------------------------------------------------------

class RestoreSnapshotRequest : public ::google::protobuf::Message {
 public:
  RestoreSnapshotRequest();
  virtual ~RestoreSnapshotRequest();

  RestoreSnapshotRequest(const RestoreSnapshotRequest& from);

  inline RestoreSnapshotRequest& operator=(const RestoreSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreSnapshotRequest& default_instance();

  void Swap(RestoreSnapshotRequest* other);

  // implements Message ----------------------------------------------

  RestoreSnapshotRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RestoreSnapshotRequest& from);
  void MergeFrom(const RestoreSnapshotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.SnapshotDescription snapshot = 1;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.RestoreSnapshotRequest)
 private:
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static RestoreSnapshotRequest* default_instance_;
};
// -------------------------------------------------------------------

class RestoreSnapshotResponse : public ::google::protobuf::Message {
 public:
  RestoreSnapshotResponse();
  virtual ~RestoreSnapshotResponse();

  RestoreSnapshotResponse(const RestoreSnapshotResponse& from);

  inline RestoreSnapshotResponse& operator=(const RestoreSnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreSnapshotResponse& default_instance();

  void Swap(RestoreSnapshotResponse* other);

  // implements Message ----------------------------------------------

  RestoreSnapshotResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RestoreSnapshotResponse& from);
  void MergeFrom(const RestoreSnapshotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.RestoreSnapshotResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static RestoreSnapshotResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsSnapshotDoneRequest : public ::google::protobuf::Message {
 public:
  IsSnapshotDoneRequest();
  virtual ~IsSnapshotDoneRequest();

  IsSnapshotDoneRequest(const IsSnapshotDoneRequest& from);

  inline IsSnapshotDoneRequest& operator=(const IsSnapshotDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsSnapshotDoneRequest& default_instance();

  void Swap(IsSnapshotDoneRequest* other);

  // implements Message ----------------------------------------------

  IsSnapshotDoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsSnapshotDoneRequest& from);
  void MergeFrom(const IsSnapshotDoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.SnapshotDescription snapshot = 1;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsSnapshotDoneRequest)
 private:
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsSnapshotDoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsSnapshotDoneResponse : public ::google::protobuf::Message {
 public:
  IsSnapshotDoneResponse();
  virtual ~IsSnapshotDoneResponse();

  IsSnapshotDoneResponse(const IsSnapshotDoneResponse& from);

  inline IsSnapshotDoneResponse& operator=(const IsSnapshotDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsSnapshotDoneResponse& default_instance();

  void Swap(IsSnapshotDoneResponse* other);

  // implements Message ----------------------------------------------

  IsSnapshotDoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsSnapshotDoneResponse& from);
  void MergeFrom(const IsSnapshotDoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool done = 1 [default = false];
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 1;
  inline bool done() const;
  inline void set_done(bool value);

  // optional .hbase.pb.SnapshotDescription snapshot = 2;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 2;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsSnapshotDoneResponse)
 private:
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;
  bool done_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsSnapshotDoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsRestoreSnapshotDoneRequest : public ::google::protobuf::Message {
 public:
  IsRestoreSnapshotDoneRequest();
  virtual ~IsRestoreSnapshotDoneRequest();

  IsRestoreSnapshotDoneRequest(const IsRestoreSnapshotDoneRequest& from);

  inline IsRestoreSnapshotDoneRequest& operator=(const IsRestoreSnapshotDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsRestoreSnapshotDoneRequest& default_instance();

  void Swap(IsRestoreSnapshotDoneRequest* other);

  // implements Message ----------------------------------------------

  IsRestoreSnapshotDoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsRestoreSnapshotDoneRequest& from);
  void MergeFrom(const IsRestoreSnapshotDoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.SnapshotDescription snapshot = 1;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 1;
  inline const ::hbase::pb::SnapshotDescription& snapshot() const;
  inline ::hbase::pb::SnapshotDescription* mutable_snapshot();
  inline ::hbase::pb::SnapshotDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsRestoreSnapshotDoneRequest)
 private:
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::SnapshotDescription* snapshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsRestoreSnapshotDoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsRestoreSnapshotDoneResponse : public ::google::protobuf::Message {
 public:
  IsRestoreSnapshotDoneResponse();
  virtual ~IsRestoreSnapshotDoneResponse();

  IsRestoreSnapshotDoneResponse(const IsRestoreSnapshotDoneResponse& from);

  inline IsRestoreSnapshotDoneResponse& operator=(const IsRestoreSnapshotDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsRestoreSnapshotDoneResponse& default_instance();

  void Swap(IsRestoreSnapshotDoneResponse* other);

  // implements Message ----------------------------------------------

  IsRestoreSnapshotDoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsRestoreSnapshotDoneResponse& from);
  void MergeFrom(const IsRestoreSnapshotDoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool done = 1 [default = false];
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 1;
  inline bool done() const;
  inline void set_done(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsRestoreSnapshotDoneResponse)
 private:
  inline void set_has_done();
  inline void clear_has_done();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool done_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsRestoreSnapshotDoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetSchemaAlterStatusRequest : public ::google::protobuf::Message {
 public:
  GetSchemaAlterStatusRequest();
  virtual ~GetSchemaAlterStatusRequest();

  GetSchemaAlterStatusRequest(const GetSchemaAlterStatusRequest& from);

  inline GetSchemaAlterStatusRequest& operator=(const GetSchemaAlterStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSchemaAlterStatusRequest& default_instance();

  void Swap(GetSchemaAlterStatusRequest* other);

  // implements Message ----------------------------------------------

  GetSchemaAlterStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSchemaAlterStatusRequest& from);
  void MergeFrom(const GetSchemaAlterStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetSchemaAlterStatusRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetSchemaAlterStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetSchemaAlterStatusResponse : public ::google::protobuf::Message {
 public:
  GetSchemaAlterStatusResponse();
  virtual ~GetSchemaAlterStatusResponse();

  GetSchemaAlterStatusResponse(const GetSchemaAlterStatusResponse& from);

  inline GetSchemaAlterStatusResponse& operator=(const GetSchemaAlterStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSchemaAlterStatusResponse& default_instance();

  void Swap(GetSchemaAlterStatusResponse* other);

  // implements Message ----------------------------------------------

  GetSchemaAlterStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSchemaAlterStatusResponse& from);
  void MergeFrom(const GetSchemaAlterStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 yet_to_update_regions = 1;
  inline bool has_yet_to_update_regions() const;
  inline void clear_yet_to_update_regions();
  static const int kYetToUpdateRegionsFieldNumber = 1;
  inline ::google::protobuf::uint32 yet_to_update_regions() const;
  inline void set_yet_to_update_regions(::google::protobuf::uint32 value);

  // optional uint32 total_regions = 2;
  inline bool has_total_regions() const;
  inline void clear_total_regions();
  static const int kTotalRegionsFieldNumber = 2;
  inline ::google::protobuf::uint32 total_regions() const;
  inline void set_total_regions(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetSchemaAlterStatusResponse)
 private:
  inline void set_has_yet_to_update_regions();
  inline void clear_has_yet_to_update_regions();
  inline void set_has_total_regions();
  inline void clear_has_total_regions();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 yet_to_update_regions_;
  ::google::protobuf::uint32 total_regions_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetSchemaAlterStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetTableDescriptorsRequest : public ::google::protobuf::Message {
 public:
  GetTableDescriptorsRequest();
  virtual ~GetTableDescriptorsRequest();

  GetTableDescriptorsRequest(const GetTableDescriptorsRequest& from);

  inline GetTableDescriptorsRequest& operator=(const GetTableDescriptorsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableDescriptorsRequest& default_instance();

  void Swap(GetTableDescriptorsRequest* other);

  // implements Message ----------------------------------------------

  GetTableDescriptorsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableDescriptorsRequest& from);
  void MergeFrom(const GetTableDescriptorsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableName table_names = 1;
  inline int table_names_size() const;
  inline void clear_table_names();
  static const int kTableNamesFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_names(int index) const;
  inline ::hbase::pb::TableName* mutable_table_names(int index);
  inline ::hbase::pb::TableName* add_table_names();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
      table_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
      mutable_table_names();

  // optional string regex = 2;
  inline bool has_regex() const;
  inline void clear_regex();
  static const int kRegexFieldNumber = 2;
  inline const ::std::string& regex() const;
  inline void set_regex(const ::std::string& value);
  inline void set_regex(const char* value);
  inline void set_regex(const char* value, size_t size);
  inline ::std::string* mutable_regex();
  inline ::std::string* release_regex();
  inline void set_allocated_regex(::std::string* regex);

  // optional bool include_sys_tables = 3 [default = false];
  inline bool has_include_sys_tables() const;
  inline void clear_include_sys_tables();
  static const int kIncludeSysTablesFieldNumber = 3;
  inline bool include_sys_tables() const;
  inline void set_include_sys_tables(bool value);

  // optional string namespace = 4;
  inline bool has_namespace_() const;
  inline void clear_namespace_();
  static const int kNamespaceFieldNumber = 4;
  inline const ::std::string& namespace_() const;
  inline void set_namespace_(const ::std::string& value);
  inline void set_namespace_(const char* value);
  inline void set_namespace_(const char* value, size_t size);
  inline ::std::string* mutable_namespace_();
  inline ::std::string* release_namespace_();
  inline void set_allocated_namespace_(::std::string* namespace_);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableDescriptorsRequest)
 private:
  inline void set_has_regex();
  inline void clear_has_regex();
  inline void set_has_include_sys_tables();
  inline void clear_has_include_sys_tables();
  inline void set_has_namespace_();
  inline void clear_has_namespace_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName > table_names_;
  ::std::string* regex_;
  ::std::string* namespace__;
  bool include_sys_tables_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableDescriptorsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTableDescriptorsResponse : public ::google::protobuf::Message {
 public:
  GetTableDescriptorsResponse();
  virtual ~GetTableDescriptorsResponse();

  GetTableDescriptorsResponse(const GetTableDescriptorsResponse& from);

  inline GetTableDescriptorsResponse& operator=(const GetTableDescriptorsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableDescriptorsResponse& default_instance();

  void Swap(GetTableDescriptorsResponse* other);

  // implements Message ----------------------------------------------

  GetTableDescriptorsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableDescriptorsResponse& from);
  void MergeFrom(const GetTableDescriptorsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableSchema table_schema = 1;
  inline int table_schema_size() const;
  inline void clear_table_schema();
  static const int kTableSchemaFieldNumber = 1;
  inline const ::hbase::pb::TableSchema& table_schema(int index) const;
  inline ::hbase::pb::TableSchema* mutable_table_schema(int index);
  inline ::hbase::pb::TableSchema* add_table_schema();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >&
      table_schema() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >*
      mutable_table_schema();

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableDescriptorsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema > table_schema_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableDescriptorsResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetTableNamesRequest : public ::google::protobuf::Message {
 public:
  GetTableNamesRequest();
  virtual ~GetTableNamesRequest();

  GetTableNamesRequest(const GetTableNamesRequest& from);

  inline GetTableNamesRequest& operator=(const GetTableNamesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableNamesRequest& default_instance();

  void Swap(GetTableNamesRequest* other);

  // implements Message ----------------------------------------------

  GetTableNamesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableNamesRequest& from);
  void MergeFrom(const GetTableNamesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string regex = 1;
  inline bool has_regex() const;
  inline void clear_regex();
  static const int kRegexFieldNumber = 1;
  inline const ::std::string& regex() const;
  inline void set_regex(const ::std::string& value);
  inline void set_regex(const char* value);
  inline void set_regex(const char* value, size_t size);
  inline ::std::string* mutable_regex();
  inline ::std::string* release_regex();
  inline void set_allocated_regex(::std::string* regex);

  // optional bool include_sys_tables = 2 [default = false];
  inline bool has_include_sys_tables() const;
  inline void clear_include_sys_tables();
  static const int kIncludeSysTablesFieldNumber = 2;
  inline bool include_sys_tables() const;
  inline void set_include_sys_tables(bool value);

  // optional string namespace = 3;
  inline bool has_namespace_() const;
  inline void clear_namespace_();
  static const int kNamespaceFieldNumber = 3;
  inline const ::std::string& namespace_() const;
  inline void set_namespace_(const ::std::string& value);
  inline void set_namespace_(const char* value);
  inline void set_namespace_(const char* value, size_t size);
  inline ::std::string* mutable_namespace_();
  inline ::std::string* release_namespace_();
  inline void set_allocated_namespace_(::std::string* namespace_);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableNamesRequest)
 private:
  inline void set_has_regex();
  inline void clear_has_regex();
  inline void set_has_include_sys_tables();
  inline void clear_has_include_sys_tables();
  inline void set_has_namespace_();
  inline void clear_has_namespace_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* regex_;
  ::std::string* namespace__;
  bool include_sys_tables_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableNamesRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTableNamesResponse : public ::google::protobuf::Message {
 public:
  GetTableNamesResponse();
  virtual ~GetTableNamesResponse();

  GetTableNamesResponse(const GetTableNamesResponse& from);

  inline GetTableNamesResponse& operator=(const GetTableNamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableNamesResponse& default_instance();

  void Swap(GetTableNamesResponse* other);

  // implements Message ----------------------------------------------

  GetTableNamesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableNamesResponse& from);
  void MergeFrom(const GetTableNamesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableName table_names = 1;
  inline int table_names_size() const;
  inline void clear_table_names();
  static const int kTableNamesFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_names(int index) const;
  inline ::hbase::pb::TableName* mutable_table_names(int index);
  inline ::hbase::pb::TableName* add_table_names();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
      table_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
      mutable_table_names();

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableNamesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName > table_names_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableNamesResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetTableStateRequest : public ::google::protobuf::Message {
 public:
  GetTableStateRequest();
  virtual ~GetTableStateRequest();

  GetTableStateRequest(const GetTableStateRequest& from);

  inline GetTableStateRequest& operator=(const GetTableStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableStateRequest& default_instance();

  void Swap(GetTableStateRequest* other);

  // implements Message ----------------------------------------------

  GetTableStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableStateRequest& from);
  void MergeFrom(const GetTableStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableStateRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTableStateResponse : public ::google::protobuf::Message {
 public:
  GetTableStateResponse();
  virtual ~GetTableStateResponse();

  GetTableStateResponse(const GetTableStateResponse& from);

  inline GetTableStateResponse& operator=(const GetTableStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTableStateResponse& default_instance();

  void Swap(GetTableStateResponse* other);

  // implements Message ----------------------------------------------

  GetTableStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTableStateResponse& from);
  void MergeFrom(const GetTableStateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableState table_state = 1;
  inline bool has_table_state() const;
  inline void clear_table_state();
  static const int kTableStateFieldNumber = 1;
  inline const ::hbase::pb::TableState& table_state() const;
  inline ::hbase::pb::TableState* mutable_table_state();
  inline ::hbase::pb::TableState* release_table_state();
  inline void set_allocated_table_state(::hbase::pb::TableState* table_state);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetTableStateResponse)
 private:
  inline void set_has_table_state();
  inline void clear_has_table_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableState* table_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetTableStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetClusterStatusRequest : public ::google::protobuf::Message {
 public:
  GetClusterStatusRequest();
  virtual ~GetClusterStatusRequest();

  GetClusterStatusRequest(const GetClusterStatusRequest& from);

  inline GetClusterStatusRequest& operator=(const GetClusterStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterStatusRequest& default_instance();

  void Swap(GetClusterStatusRequest* other);

  // implements Message ----------------------------------------------

  GetClusterStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClusterStatusRequest& from);
  void MergeFrom(const GetClusterStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.GetClusterStatusRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetClusterStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetClusterStatusResponse : public ::google::protobuf::Message {
 public:
  GetClusterStatusResponse();
  virtual ~GetClusterStatusResponse();

  GetClusterStatusResponse(const GetClusterStatusResponse& from);

  inline GetClusterStatusResponse& operator=(const GetClusterStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterStatusResponse& default_instance();

  void Swap(GetClusterStatusResponse* other);

  // implements Message ----------------------------------------------

  GetClusterStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClusterStatusResponse& from);
  void MergeFrom(const GetClusterStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.ClusterStatus cluster_status = 1;
  inline bool has_cluster_status() const;
  inline void clear_cluster_status();
  static const int kClusterStatusFieldNumber = 1;
  inline const ::hbase::pb::ClusterStatus& cluster_status() const;
  inline ::hbase::pb::ClusterStatus* mutable_cluster_status();
  inline ::hbase::pb::ClusterStatus* release_cluster_status();
  inline void set_allocated_cluster_status(::hbase::pb::ClusterStatus* cluster_status);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetClusterStatusResponse)
 private:
  inline void set_has_cluster_status();
  inline void clear_has_cluster_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::ClusterStatus* cluster_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetClusterStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsMasterRunningRequest : public ::google::protobuf::Message {
 public:
  IsMasterRunningRequest();
  virtual ~IsMasterRunningRequest();

  IsMasterRunningRequest(const IsMasterRunningRequest& from);

  inline IsMasterRunningRequest& operator=(const IsMasterRunningRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsMasterRunningRequest& default_instance();

  void Swap(IsMasterRunningRequest* other);

  // implements Message ----------------------------------------------

  IsMasterRunningRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsMasterRunningRequest& from);
  void MergeFrom(const IsMasterRunningRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.IsMasterRunningRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsMasterRunningRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsMasterRunningResponse : public ::google::protobuf::Message {
 public:
  IsMasterRunningResponse();
  virtual ~IsMasterRunningResponse();

  IsMasterRunningResponse(const IsMasterRunningResponse& from);

  inline IsMasterRunningResponse& operator=(const IsMasterRunningResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsMasterRunningResponse& default_instance();

  void Swap(IsMasterRunningResponse* other);

  // implements Message ----------------------------------------------

  IsMasterRunningResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsMasterRunningResponse& from);
  void MergeFrom(const IsMasterRunningResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_master_running = 1;
  inline bool has_is_master_running() const;
  inline void clear_is_master_running();
  static const int kIsMasterRunningFieldNumber = 1;
  inline bool is_master_running() const;
  inline void set_is_master_running(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsMasterRunningResponse)
 private:
  inline void set_has_is_master_running();
  inline void clear_has_is_master_running();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_master_running_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsMasterRunningResponse* default_instance_;
};
// -------------------------------------------------------------------

class ExecProcedureRequest : public ::google::protobuf::Message {
 public:
  ExecProcedureRequest();
  virtual ~ExecProcedureRequest();

  ExecProcedureRequest(const ExecProcedureRequest& from);

  inline ExecProcedureRequest& operator=(const ExecProcedureRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecProcedureRequest& default_instance();

  void Swap(ExecProcedureRequest* other);

  // implements Message ----------------------------------------------

  ExecProcedureRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecProcedureRequest& from);
  void MergeFrom(const ExecProcedureRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.ProcedureDescription procedure = 1;
  inline bool has_procedure() const;
  inline void clear_procedure();
  static const int kProcedureFieldNumber = 1;
  inline const ::hbase::pb::ProcedureDescription& procedure() const;
  inline ::hbase::pb::ProcedureDescription* mutable_procedure();
  inline ::hbase::pb::ProcedureDescription* release_procedure();
  inline void set_allocated_procedure(::hbase::pb::ProcedureDescription* procedure);

  // @@protoc_insertion_point(class_scope:hbase.pb.ExecProcedureRequest)
 private:
  inline void set_has_procedure();
  inline void clear_has_procedure();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::ProcedureDescription* procedure_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ExecProcedureRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExecProcedureResponse : public ::google::protobuf::Message {
 public:
  ExecProcedureResponse();
  virtual ~ExecProcedureResponse();

  ExecProcedureResponse(const ExecProcedureResponse& from);

  inline ExecProcedureResponse& operator=(const ExecProcedureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecProcedureResponse& default_instance();

  void Swap(ExecProcedureResponse* other);

  // implements Message ----------------------------------------------

  ExecProcedureResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecProcedureResponse& from);
  void MergeFrom(const ExecProcedureResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 expected_timeout = 1;
  inline bool has_expected_timeout() const;
  inline void clear_expected_timeout();
  static const int kExpectedTimeoutFieldNumber = 1;
  inline ::google::protobuf::int64 expected_timeout() const;
  inline void set_expected_timeout(::google::protobuf::int64 value);

  // optional bytes return_data = 2;
  inline bool has_return_data() const;
  inline void clear_return_data();
  static const int kReturnDataFieldNumber = 2;
  inline const ::std::string& return_data() const;
  inline void set_return_data(const ::std::string& value);
  inline void set_return_data(const char* value);
  inline void set_return_data(const void* value, size_t size);
  inline ::std::string* mutable_return_data();
  inline ::std::string* release_return_data();
  inline void set_allocated_return_data(::std::string* return_data);

  // @@protoc_insertion_point(class_scope:hbase.pb.ExecProcedureResponse)
 private:
  inline void set_has_expected_timeout();
  inline void clear_has_expected_timeout();
  inline void set_has_return_data();
  inline void clear_has_return_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 expected_timeout_;
  ::std::string* return_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ExecProcedureResponse* default_instance_;
};
// -------------------------------------------------------------------

class IsProcedureDoneRequest : public ::google::protobuf::Message {
 public:
  IsProcedureDoneRequest();
  virtual ~IsProcedureDoneRequest();

  IsProcedureDoneRequest(const IsProcedureDoneRequest& from);

  inline IsProcedureDoneRequest& operator=(const IsProcedureDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsProcedureDoneRequest& default_instance();

  void Swap(IsProcedureDoneRequest* other);

  // implements Message ----------------------------------------------

  IsProcedureDoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsProcedureDoneRequest& from);
  void MergeFrom(const IsProcedureDoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.ProcedureDescription procedure = 1;
  inline bool has_procedure() const;
  inline void clear_procedure();
  static const int kProcedureFieldNumber = 1;
  inline const ::hbase::pb::ProcedureDescription& procedure() const;
  inline ::hbase::pb::ProcedureDescription* mutable_procedure();
  inline ::hbase::pb::ProcedureDescription* release_procedure();
  inline void set_allocated_procedure(::hbase::pb::ProcedureDescription* procedure);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsProcedureDoneRequest)
 private:
  inline void set_has_procedure();
  inline void clear_has_procedure();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::ProcedureDescription* procedure_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsProcedureDoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class IsProcedureDoneResponse : public ::google::protobuf::Message {
 public:
  IsProcedureDoneResponse();
  virtual ~IsProcedureDoneResponse();

  IsProcedureDoneResponse(const IsProcedureDoneResponse& from);

  inline IsProcedureDoneResponse& operator=(const IsProcedureDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsProcedureDoneResponse& default_instance();

  void Swap(IsProcedureDoneResponse* other);

  // implements Message ----------------------------------------------

  IsProcedureDoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsProcedureDoneResponse& from);
  void MergeFrom(const IsProcedureDoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool done = 1 [default = false];
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 1;
  inline bool done() const;
  inline void set_done(bool value);

  // optional .hbase.pb.ProcedureDescription snapshot = 2;
  inline bool has_snapshot() const;
  inline void clear_snapshot();
  static const int kSnapshotFieldNumber = 2;
  inline const ::hbase::pb::ProcedureDescription& snapshot() const;
  inline ::hbase::pb::ProcedureDescription* mutable_snapshot();
  inline ::hbase::pb::ProcedureDescription* release_snapshot();
  inline void set_allocated_snapshot(::hbase::pb::ProcedureDescription* snapshot);

  // @@protoc_insertion_point(class_scope:hbase.pb.IsProcedureDoneResponse)
 private:
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_snapshot();
  inline void clear_has_snapshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::ProcedureDescription* snapshot_;
  bool done_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static IsProcedureDoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetProcedureResultRequest : public ::google::protobuf::Message {
 public:
  GetProcedureResultRequest();
  virtual ~GetProcedureResultRequest();

  GetProcedureResultRequest(const GetProcedureResultRequest& from);

  inline GetProcedureResultRequest& operator=(const GetProcedureResultRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProcedureResultRequest& default_instance();

  void Swap(GetProcedureResultRequest* other);

  // implements Message ----------------------------------------------

  GetProcedureResultRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetProcedureResultRequest& from);
  void MergeFrom(const GetProcedureResultRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetProcedureResultRequest)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetProcedureResultRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetProcedureResultResponse : public ::google::protobuf::Message {
 public:
  GetProcedureResultResponse();
  virtual ~GetProcedureResultResponse();

  GetProcedureResultResponse(const GetProcedureResultResponse& from);

  inline GetProcedureResultResponse& operator=(const GetProcedureResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProcedureResultResponse& default_instance();

  void Swap(GetProcedureResultResponse* other);

  // implements Message ----------------------------------------------

  GetProcedureResultResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetProcedureResultResponse& from);
  void MergeFrom(const GetProcedureResultResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetProcedureResultResponse_State State;
  static const State NOT_FOUND = GetProcedureResultResponse_State_NOT_FOUND;
  static const State RUNNING = GetProcedureResultResponse_State_RUNNING;
  static const State FINISHED = GetProcedureResultResponse_State_FINISHED;
  static inline bool State_IsValid(int value) {
    return GetProcedureResultResponse_State_IsValid(value);
  }
  static const State State_MIN =
    GetProcedureResultResponse_State_State_MIN;
  static const State State_MAX =
    GetProcedureResultResponse_State_State_MAX;
  static const int State_ARRAYSIZE =
    GetProcedureResultResponse_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return GetProcedureResultResponse_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return GetProcedureResultResponse_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return GetProcedureResultResponse_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .hbase.pb.GetProcedureResultResponse.State state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::hbase::pb::GetProcedureResultResponse_State state() const;
  inline void set_state(::hbase::pb::GetProcedureResultResponse_State value);

  // optional uint64 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint64 last_update = 3;
  inline bool has_last_update() const;
  inline void clear_last_update();
  static const int kLastUpdateFieldNumber = 3;
  inline ::google::protobuf::uint64 last_update() const;
  inline void set_last_update(::google::protobuf::uint64 value);

  // optional bytes result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const void* value, size_t size);
  inline ::std::string* mutable_result();
  inline ::std::string* release_result();
  inline void set_allocated_result(::std::string* result);

  // optional .hbase.pb.ForeignExceptionMessage exception = 5;
  inline bool has_exception() const;
  inline void clear_exception();
  static const int kExceptionFieldNumber = 5;
  inline const ::hbase::pb::ForeignExceptionMessage& exception() const;
  inline ::hbase::pb::ForeignExceptionMessage* mutable_exception();
  inline ::hbase::pb::ForeignExceptionMessage* release_exception();
  inline void set_allocated_exception(::hbase::pb::ForeignExceptionMessage* exception);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetProcedureResultResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_last_update();
  inline void clear_has_last_update();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_exception();
  inline void clear_has_exception();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 last_update_;
  ::std::string* result_;
  ::hbase::pb::ForeignExceptionMessage* exception_;
  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static GetProcedureResultResponse* default_instance_;
};
// -------------------------------------------------------------------

class AbortProcedureRequest : public ::google::protobuf::Message {
 public:
  AbortProcedureRequest();
  virtual ~AbortProcedureRequest();

  AbortProcedureRequest(const AbortProcedureRequest& from);

  inline AbortProcedureRequest& operator=(const AbortProcedureRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortProcedureRequest& default_instance();

  void Swap(AbortProcedureRequest* other);

  // implements Message ----------------------------------------------

  AbortProcedureRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbortProcedureRequest& from);
  void MergeFrom(const AbortProcedureRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 proc_id = 1;
  inline bool has_proc_id() const;
  inline void clear_proc_id();
  static const int kProcIdFieldNumber = 1;
  inline ::google::protobuf::uint64 proc_id() const;
  inline void set_proc_id(::google::protobuf::uint64 value);

  // optional bool mayInterruptIfRunning = 2 [default = true];
  inline bool has_mayinterruptifrunning() const;
  inline void clear_mayinterruptifrunning();
  static const int kMayInterruptIfRunningFieldNumber = 2;
  inline bool mayinterruptifrunning() const;
  inline void set_mayinterruptifrunning(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.AbortProcedureRequest)
 private:
  inline void set_has_proc_id();
  inline void clear_has_proc_id();
  inline void set_has_mayinterruptifrunning();
  inline void clear_has_mayinterruptifrunning();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 proc_id_;
  bool mayinterruptifrunning_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AbortProcedureRequest* default_instance_;
};
// -------------------------------------------------------------------

class AbortProcedureResponse : public ::google::protobuf::Message {
 public:
  AbortProcedureResponse();
  virtual ~AbortProcedureResponse();

  AbortProcedureResponse(const AbortProcedureResponse& from);

  inline AbortProcedureResponse& operator=(const AbortProcedureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortProcedureResponse& default_instance();

  void Swap(AbortProcedureResponse* other);

  // implements Message ----------------------------------------------

  AbortProcedureResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbortProcedureResponse& from);
  void MergeFrom(const AbortProcedureResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool is_procedure_aborted = 1;
  inline bool has_is_procedure_aborted() const;
  inline void clear_is_procedure_aborted();
  static const int kIsProcedureAbortedFieldNumber = 1;
  inline bool is_procedure_aborted() const;
  inline void set_is_procedure_aborted(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.AbortProcedureResponse)
 private:
  inline void set_has_is_procedure_aborted();
  inline void clear_has_is_procedure_aborted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_procedure_aborted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static AbortProcedureResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListProceduresRequest : public ::google::protobuf::Message {
 public:
  ListProceduresRequest();
  virtual ~ListProceduresRequest();

  ListProceduresRequest(const ListProceduresRequest& from);

  inline ListProceduresRequest& operator=(const ListProceduresRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProceduresRequest& default_instance();

  void Swap(ListProceduresRequest* other);

  // implements Message ----------------------------------------------

  ListProceduresRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListProceduresRequest& from);
  void MergeFrom(const ListProceduresRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.ListProceduresRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListProceduresRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListProceduresResponse : public ::google::protobuf::Message {
 public:
  ListProceduresResponse();
  virtual ~ListProceduresResponse();

  ListProceduresResponse(const ListProceduresResponse& from);

  inline ListProceduresResponse& operator=(const ListProceduresResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListProceduresResponse& default_instance();

  void Swap(ListProceduresResponse* other);

  // implements Message ----------------------------------------------

  ListProceduresResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListProceduresResponse& from);
  void MergeFrom(const ListProceduresResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.Procedure procedure = 1;
  inline int procedure_size() const;
  inline void clear_procedure();
  static const int kProcedureFieldNumber = 1;
  inline const ::hbase::pb::Procedure& procedure(int index) const;
  inline ::hbase::pb::Procedure* mutable_procedure(int index);
  inline ::hbase::pb::Procedure* add_procedure();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::Procedure >&
      procedure() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::Procedure >*
      mutable_procedure();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListProceduresResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::Procedure > procedure_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static ListProceduresResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetQuotaRequest : public ::google::protobuf::Message {
 public:
  SetQuotaRequest();
  virtual ~SetQuotaRequest();

  SetQuotaRequest(const SetQuotaRequest& from);

  inline SetQuotaRequest& operator=(const SetQuotaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetQuotaRequest& default_instance();

  void Swap(SetQuotaRequest* other);

  // implements Message ----------------------------------------------

  SetQuotaRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetQuotaRequest& from);
  void MergeFrom(const SetQuotaRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional string user_group = 2;
  inline bool has_user_group() const;
  inline void clear_user_group();
  static const int kUserGroupFieldNumber = 2;
  inline const ::std::string& user_group() const;
  inline void set_user_group(const ::std::string& value);
  inline void set_user_group(const char* value);
  inline void set_user_group(const char* value, size_t size);
  inline ::std::string* mutable_user_group();
  inline ::std::string* release_user_group();
  inline void set_allocated_user_group(::std::string* user_group);

  // optional string namespace = 3;
  inline bool has_namespace_() const;
  inline void clear_namespace_();
  static const int kNamespaceFieldNumber = 3;
  inline const ::std::string& namespace_() const;
  inline void set_namespace_(const ::std::string& value);
  inline void set_namespace_(const char* value);
  inline void set_namespace_(const char* value, size_t size);
  inline ::std::string* mutable_namespace_();
  inline ::std::string* release_namespace_();
  inline void set_allocated_namespace_(::std::string* namespace_);

  // optional .hbase.pb.TableName table_name = 4;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 4;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // optional bool remove_all = 5;
  inline bool has_remove_all() const;
  inline void clear_remove_all();
  static const int kRemoveAllFieldNumber = 5;
  inline bool remove_all() const;
  inline void set_remove_all(bool value);

  // optional bool bypass_globals = 6;
  inline bool has_bypass_globals() const;
  inline void clear_bypass_globals();
  static const int kBypassGlobalsFieldNumber = 6;
  inline bool bypass_globals() const;
  inline void set_bypass_globals(bool value);

  // optional .hbase.pb.ThrottleRequest throttle = 7;
  inline bool has_throttle() const;
  inline void clear_throttle();
  static const int kThrottleFieldNumber = 7;
  inline const ::hbase::pb::ThrottleRequest& throttle() const;
  inline ::hbase::pb::ThrottleRequest* mutable_throttle();
  inline ::hbase::pb::ThrottleRequest* release_throttle();
  inline void set_allocated_throttle(::hbase::pb::ThrottleRequest* throttle);

  // @@protoc_insertion_point(class_scope:hbase.pb.SetQuotaRequest)
 private:
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_user_group();
  inline void clear_has_user_group();
  inline void set_has_namespace_();
  inline void clear_has_namespace_();
  inline void set_has_table_name();
  inline void clear_has_table_name();
  inline void set_has_remove_all();
  inline void clear_has_remove_all();
  inline void set_has_bypass_globals();
  inline void clear_has_bypass_globals();
  inline void set_has_throttle();
  inline void clear_has_throttle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_name_;
  ::std::string* user_group_;
  ::std::string* namespace__;
  ::hbase::pb::TableName* table_name_;
  ::hbase::pb::ThrottleRequest* throttle_;
  bool remove_all_;
  bool bypass_globals_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetQuotaRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetQuotaResponse : public ::google::protobuf::Message {
 public:
  SetQuotaResponse();
  virtual ~SetQuotaResponse();

  SetQuotaResponse(const SetQuotaResponse& from);

  inline SetQuotaResponse& operator=(const SetQuotaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetQuotaResponse& default_instance();

  void Swap(SetQuotaResponse* other);

  // implements Message ----------------------------------------------

  SetQuotaResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetQuotaResponse& from);
  void MergeFrom(const SetQuotaResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.SetQuotaResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SetQuotaResponse* default_instance_;
};
// -------------------------------------------------------------------

class MajorCompactionTimestampRequest : public ::google::protobuf::Message {
 public:
  MajorCompactionTimestampRequest();
  virtual ~MajorCompactionTimestampRequest();

  MajorCompactionTimestampRequest(const MajorCompactionTimestampRequest& from);

  inline MajorCompactionTimestampRequest& operator=(const MajorCompactionTimestampRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MajorCompactionTimestampRequest& default_instance();

  void Swap(MajorCompactionTimestampRequest* other);

  // implements Message ----------------------------------------------

  MajorCompactionTimestampRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MajorCompactionTimestampRequest& from);
  void MergeFrom(const MajorCompactionTimestampRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.MajorCompactionTimestampRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static MajorCompactionTimestampRequest* default_instance_;
};
// -------------------------------------------------------------------

class MajorCompactionTimestampForRegionRequest : public ::google::protobuf::Message {
 public:
  MajorCompactionTimestampForRegionRequest();
  virtual ~MajorCompactionTimestampForRegionRequest();

  MajorCompactionTimestampForRegionRequest(const MajorCompactionTimestampForRegionRequest& from);

  inline MajorCompactionTimestampForRegionRequest& operator=(const MajorCompactionTimestampForRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MajorCompactionTimestampForRegionRequest& default_instance();

  void Swap(MajorCompactionTimestampForRegionRequest* other);

  // implements Message ----------------------------------------------

  MajorCompactionTimestampForRegionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MajorCompactionTimestampForRegionRequest& from);
  void MergeFrom(const MajorCompactionTimestampForRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.RegionSpecifier region = 1;
  inline bool has_region() const;
  inline void clear_region();
  static const int kRegionFieldNumber = 1;
  inline const ::hbase::pb::RegionSpecifier& region() const;
  inline ::hbase::pb::RegionSpecifier* mutable_region();
  inline ::hbase::pb::RegionSpecifier* release_region();
  inline void set_allocated_region(::hbase::pb::RegionSpecifier* region);

  // @@protoc_insertion_point(class_scope:hbase.pb.MajorCompactionTimestampForRegionRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RegionSpecifier* region_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static MajorCompactionTimestampForRegionRequest* default_instance_;
};
// -------------------------------------------------------------------

class MajorCompactionTimestampResponse : public ::google::protobuf::Message {
 public:
  MajorCompactionTimestampResponse();
  virtual ~MajorCompactionTimestampResponse();

  MajorCompactionTimestampResponse(const MajorCompactionTimestampResponse& from);

  inline MajorCompactionTimestampResponse& operator=(const MajorCompactionTimestampResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MajorCompactionTimestampResponse& default_instance();

  void Swap(MajorCompactionTimestampResponse* other);

  // implements Message ----------------------------------------------

  MajorCompactionTimestampResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MajorCompactionTimestampResponse& from);
  void MergeFrom(const MajorCompactionTimestampResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 compaction_timestamp = 1;
  inline bool has_compaction_timestamp() const;
  inline void clear_compaction_timestamp();
  static const int kCompactionTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 compaction_timestamp() const;
  inline void set_compaction_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hbase.pb.MajorCompactionTimestampResponse)
 private:
  inline void set_has_compaction_timestamp();
  inline void clear_has_compaction_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 compaction_timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static MajorCompactionTimestampResponse* default_instance_;
};
// -------------------------------------------------------------------

class SecurityCapabilitiesRequest : public ::google::protobuf::Message {
 public:
  SecurityCapabilitiesRequest();
  virtual ~SecurityCapabilitiesRequest();

  SecurityCapabilitiesRequest(const SecurityCapabilitiesRequest& from);

  inline SecurityCapabilitiesRequest& operator=(const SecurityCapabilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityCapabilitiesRequest& default_instance();

  void Swap(SecurityCapabilitiesRequest* other);

  // implements Message ----------------------------------------------

  SecurityCapabilitiesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecurityCapabilitiesRequest& from);
  void MergeFrom(const SecurityCapabilitiesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.SecurityCapabilitiesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SecurityCapabilitiesRequest* default_instance_;
};
// -------------------------------------------------------------------

class SecurityCapabilitiesResponse : public ::google::protobuf::Message {
 public:
  SecurityCapabilitiesResponse();
  virtual ~SecurityCapabilitiesResponse();

  SecurityCapabilitiesResponse(const SecurityCapabilitiesResponse& from);

  inline SecurityCapabilitiesResponse& operator=(const SecurityCapabilitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityCapabilitiesResponse& default_instance();

  void Swap(SecurityCapabilitiesResponse* other);

  // implements Message ----------------------------------------------

  SecurityCapabilitiesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecurityCapabilitiesResponse& from);
  void MergeFrom(const SecurityCapabilitiesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SecurityCapabilitiesResponse_Capability Capability;
  static const Capability SIMPLE_AUTHENTICATION = SecurityCapabilitiesResponse_Capability_SIMPLE_AUTHENTICATION;
  static const Capability SECURE_AUTHENTICATION = SecurityCapabilitiesResponse_Capability_SECURE_AUTHENTICATION;
  static const Capability AUTHORIZATION = SecurityCapabilitiesResponse_Capability_AUTHORIZATION;
  static const Capability CELL_AUTHORIZATION = SecurityCapabilitiesResponse_Capability_CELL_AUTHORIZATION;
  static const Capability CELL_VISIBILITY = SecurityCapabilitiesResponse_Capability_CELL_VISIBILITY;
  static inline bool Capability_IsValid(int value) {
    return SecurityCapabilitiesResponse_Capability_IsValid(value);
  }
  static const Capability Capability_MIN =
    SecurityCapabilitiesResponse_Capability_Capability_MIN;
  static const Capability Capability_MAX =
    SecurityCapabilitiesResponse_Capability_Capability_MAX;
  static const int Capability_ARRAYSIZE =
    SecurityCapabilitiesResponse_Capability_Capability_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Capability_descriptor() {
    return SecurityCapabilitiesResponse_Capability_descriptor();
  }
  static inline const ::std::string& Capability_Name(Capability value) {
    return SecurityCapabilitiesResponse_Capability_Name(value);
  }
  static inline bool Capability_Parse(const ::std::string& name,
      Capability* value) {
    return SecurityCapabilitiesResponse_Capability_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.SecurityCapabilitiesResponse.Capability capabilities = 1;
  inline int capabilities_size() const;
  inline void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 1;
  inline ::hbase::pb::SecurityCapabilitiesResponse_Capability capabilities(int index) const;
  inline void set_capabilities(int index, ::hbase::pb::SecurityCapabilitiesResponse_Capability value);
  inline void add_capabilities(::hbase::pb::SecurityCapabilitiesResponse_Capability value);
  inline const ::google::protobuf::RepeatedField<int>& capabilities() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_capabilities();

  // @@protoc_insertion_point(class_scope:hbase.pb.SecurityCapabilitiesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField<int> capabilities_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Master_2eproto();
  friend void protobuf_AssignDesc_Master_2eproto();
  friend void protobuf_ShutdownFile_Master_2eproto();

  void InitAsDefaultInstance();
  static SecurityCapabilitiesResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// AddColumnRequest

// required .hbase.pb.TableName table_name = 1;
inline bool AddColumnRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddColumnRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddColumnRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddColumnRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& AddColumnRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* AddColumnRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* AddColumnRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void AddColumnRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// required .hbase.pb.ColumnFamilySchema column_families = 2;
inline bool AddColumnRequest::has_column_families() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddColumnRequest::set_has_column_families() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddColumnRequest::clear_has_column_families() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddColumnRequest::clear_column_families() {
  if (column_families_ != NULL) column_families_->::hbase::pb::ColumnFamilySchema::Clear();
  clear_has_column_families();
}
inline const ::hbase::pb::ColumnFamilySchema& AddColumnRequest::column_families() const {
  return column_families_ != NULL ? *column_families_ : *default_instance_->column_families_;
}
inline ::hbase::pb::ColumnFamilySchema* AddColumnRequest::mutable_column_families() {
  set_has_column_families();
  if (column_families_ == NULL) column_families_ = new ::hbase::pb::ColumnFamilySchema;
  return column_families_;
}
inline ::hbase::pb::ColumnFamilySchema* AddColumnRequest::release_column_families() {
  clear_has_column_families();
  ::hbase::pb::ColumnFamilySchema* temp = column_families_;
  column_families_ = NULL;
  return temp;
}
inline void AddColumnRequest::set_allocated_column_families(::hbase::pb::ColumnFamilySchema* column_families) {
  delete column_families_;
  column_families_ = column_families;
  if (column_families) {
    set_has_column_families();
  } else {
    clear_has_column_families();
  }
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool AddColumnRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddColumnRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddColumnRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddColumnRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 AddColumnRequest::nonce_group() const {
  return nonce_group_;
}
inline void AddColumnRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool AddColumnRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddColumnRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddColumnRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddColumnRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 AddColumnRequest::nonce() const {
  return nonce_;
}
inline void AddColumnRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// AddColumnResponse

// optional uint64 proc_id = 1;
inline bool AddColumnResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddColumnResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddColumnResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddColumnResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 AddColumnResponse::proc_id() const {
  return proc_id_;
}
inline void AddColumnResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// DeleteColumnRequest

// required .hbase.pb.TableName table_name = 1;
inline bool DeleteColumnRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteColumnRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteColumnRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteColumnRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& DeleteColumnRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* DeleteColumnRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* DeleteColumnRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void DeleteColumnRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// required bytes column_name = 2;
inline bool DeleteColumnRequest::has_column_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteColumnRequest::set_has_column_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteColumnRequest::clear_has_column_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteColumnRequest::clear_column_name() {
  if (column_name_ != &::google::protobuf::internal::kEmptyString) {
    column_name_->clear();
  }
  clear_has_column_name();
}
inline const ::std::string& DeleteColumnRequest::column_name() const {
  return *column_name_;
}
inline void DeleteColumnRequest::set_column_name(const ::std::string& value) {
  set_has_column_name();
  if (column_name_ == &::google::protobuf::internal::kEmptyString) {
    column_name_ = new ::std::string;
  }
  column_name_->assign(value);
}
inline void DeleteColumnRequest::set_column_name(const char* value) {
  set_has_column_name();
  if (column_name_ == &::google::protobuf::internal::kEmptyString) {
    column_name_ = new ::std::string;
  }
  column_name_->assign(value);
}
inline void DeleteColumnRequest::set_column_name(const void* value, size_t size) {
  set_has_column_name();
  if (column_name_ == &::google::protobuf::internal::kEmptyString) {
    column_name_ = new ::std::string;
  }
  column_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteColumnRequest::mutable_column_name() {
  set_has_column_name();
  if (column_name_ == &::google::protobuf::internal::kEmptyString) {
    column_name_ = new ::std::string;
  }
  return column_name_;
}
inline ::std::string* DeleteColumnRequest::release_column_name() {
  clear_has_column_name();
  if (column_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = column_name_;
    column_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeleteColumnRequest::set_allocated_column_name(::std::string* column_name) {
  if (column_name_ != &::google::protobuf::internal::kEmptyString) {
    delete column_name_;
  }
  if (column_name) {
    set_has_column_name();
    column_name_ = column_name;
  } else {
    clear_has_column_name();
    column_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool DeleteColumnRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteColumnRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteColumnRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteColumnRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 DeleteColumnRequest::nonce_group() const {
  return nonce_group_;
}
inline void DeleteColumnRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool DeleteColumnRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeleteColumnRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeleteColumnRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeleteColumnRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 DeleteColumnRequest::nonce() const {
  return nonce_;
}
inline void DeleteColumnRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// DeleteColumnResponse

// optional uint64 proc_id = 1;
inline bool DeleteColumnResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteColumnResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteColumnResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteColumnResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 DeleteColumnResponse::proc_id() const {
  return proc_id_;
}
inline void DeleteColumnResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// ModifyColumnRequest

// required .hbase.pb.TableName table_name = 1;
inline bool ModifyColumnRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyColumnRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyColumnRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyColumnRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& ModifyColumnRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* ModifyColumnRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* ModifyColumnRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void ModifyColumnRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// required .hbase.pb.ColumnFamilySchema column_families = 2;
inline bool ModifyColumnRequest::has_column_families() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyColumnRequest::set_has_column_families() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyColumnRequest::clear_has_column_families() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyColumnRequest::clear_column_families() {
  if (column_families_ != NULL) column_families_->::hbase::pb::ColumnFamilySchema::Clear();
  clear_has_column_families();
}
inline const ::hbase::pb::ColumnFamilySchema& ModifyColumnRequest::column_families() const {
  return column_families_ != NULL ? *column_families_ : *default_instance_->column_families_;
}
inline ::hbase::pb::ColumnFamilySchema* ModifyColumnRequest::mutable_column_families() {
  set_has_column_families();
  if (column_families_ == NULL) column_families_ = new ::hbase::pb::ColumnFamilySchema;
  return column_families_;
}
inline ::hbase::pb::ColumnFamilySchema* ModifyColumnRequest::release_column_families() {
  clear_has_column_families();
  ::hbase::pb::ColumnFamilySchema* temp = column_families_;
  column_families_ = NULL;
  return temp;
}
inline void ModifyColumnRequest::set_allocated_column_families(::hbase::pb::ColumnFamilySchema* column_families) {
  delete column_families_;
  column_families_ = column_families;
  if (column_families) {
    set_has_column_families();
  } else {
    clear_has_column_families();
  }
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool ModifyColumnRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyColumnRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyColumnRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyColumnRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 ModifyColumnRequest::nonce_group() const {
  return nonce_group_;
}
inline void ModifyColumnRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool ModifyColumnRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModifyColumnRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModifyColumnRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModifyColumnRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 ModifyColumnRequest::nonce() const {
  return nonce_;
}
inline void ModifyColumnRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// ModifyColumnResponse

// optional uint64 proc_id = 1;
inline bool ModifyColumnResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyColumnResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyColumnResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyColumnResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 ModifyColumnResponse::proc_id() const {
  return proc_id_;
}
inline void ModifyColumnResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// MoveRegionRequest

// required .hbase.pb.RegionSpecifier region = 1;
inline bool MoveRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveRegionRequest::clear_region() {
  if (region_ != NULL) region_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region();
}
inline const ::hbase::pb::RegionSpecifier& MoveRegionRequest::region() const {
  return region_ != NULL ? *region_ : *default_instance_->region_;
}
inline ::hbase::pb::RegionSpecifier* MoveRegionRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) region_ = new ::hbase::pb::RegionSpecifier;
  return region_;
}
inline ::hbase::pb::RegionSpecifier* MoveRegionRequest::release_region() {
  clear_has_region();
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = NULL;
  return temp;
}
inline void MoveRegionRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
}

// optional .hbase.pb.ServerName dest_server_name = 2;
inline bool MoveRegionRequest::has_dest_server_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveRegionRequest::set_has_dest_server_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveRegionRequest::clear_has_dest_server_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveRegionRequest::clear_dest_server_name() {
  if (dest_server_name_ != NULL) dest_server_name_->::hbase::pb::ServerName::Clear();
  clear_has_dest_server_name();
}
inline const ::hbase::pb::ServerName& MoveRegionRequest::dest_server_name() const {
  return dest_server_name_ != NULL ? *dest_server_name_ : *default_instance_->dest_server_name_;
}
inline ::hbase::pb::ServerName* MoveRegionRequest::mutable_dest_server_name() {
  set_has_dest_server_name();
  if (dest_server_name_ == NULL) dest_server_name_ = new ::hbase::pb::ServerName;
  return dest_server_name_;
}
inline ::hbase::pb::ServerName* MoveRegionRequest::release_dest_server_name() {
  clear_has_dest_server_name();
  ::hbase::pb::ServerName* temp = dest_server_name_;
  dest_server_name_ = NULL;
  return temp;
}
inline void MoveRegionRequest::set_allocated_dest_server_name(::hbase::pb::ServerName* dest_server_name) {
  delete dest_server_name_;
  dest_server_name_ = dest_server_name;
  if (dest_server_name) {
    set_has_dest_server_name();
  } else {
    clear_has_dest_server_name();
  }
}

// -------------------------------------------------------------------

// MoveRegionResponse

// -------------------------------------------------------------------

// DispatchMergingRegionsRequest

// required .hbase.pb.RegionSpecifier region_a = 1;
inline bool DispatchMergingRegionsRequest::has_region_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DispatchMergingRegionsRequest::set_has_region_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DispatchMergingRegionsRequest::clear_has_region_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DispatchMergingRegionsRequest::clear_region_a() {
  if (region_a_ != NULL) region_a_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region_a();
}
inline const ::hbase::pb::RegionSpecifier& DispatchMergingRegionsRequest::region_a() const {
  return region_a_ != NULL ? *region_a_ : *default_instance_->region_a_;
}
inline ::hbase::pb::RegionSpecifier* DispatchMergingRegionsRequest::mutable_region_a() {
  set_has_region_a();
  if (region_a_ == NULL) region_a_ = new ::hbase::pb::RegionSpecifier;
  return region_a_;
}
inline ::hbase::pb::RegionSpecifier* DispatchMergingRegionsRequest::release_region_a() {
  clear_has_region_a();
  ::hbase::pb::RegionSpecifier* temp = region_a_;
  region_a_ = NULL;
  return temp;
}
inline void DispatchMergingRegionsRequest::set_allocated_region_a(::hbase::pb::RegionSpecifier* region_a) {
  delete region_a_;
  region_a_ = region_a;
  if (region_a) {
    set_has_region_a();
  } else {
    clear_has_region_a();
  }
}

// required .hbase.pb.RegionSpecifier region_b = 2;
inline bool DispatchMergingRegionsRequest::has_region_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DispatchMergingRegionsRequest::set_has_region_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DispatchMergingRegionsRequest::clear_has_region_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DispatchMergingRegionsRequest::clear_region_b() {
  if (region_b_ != NULL) region_b_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region_b();
}
inline const ::hbase::pb::RegionSpecifier& DispatchMergingRegionsRequest::region_b() const {
  return region_b_ != NULL ? *region_b_ : *default_instance_->region_b_;
}
inline ::hbase::pb::RegionSpecifier* DispatchMergingRegionsRequest::mutable_region_b() {
  set_has_region_b();
  if (region_b_ == NULL) region_b_ = new ::hbase::pb::RegionSpecifier;
  return region_b_;
}
inline ::hbase::pb::RegionSpecifier* DispatchMergingRegionsRequest::release_region_b() {
  clear_has_region_b();
  ::hbase::pb::RegionSpecifier* temp = region_b_;
  region_b_ = NULL;
  return temp;
}
inline void DispatchMergingRegionsRequest::set_allocated_region_b(::hbase::pb::RegionSpecifier* region_b) {
  delete region_b_;
  region_b_ = region_b;
  if (region_b) {
    set_has_region_b();
  } else {
    clear_has_region_b();
  }
}

// optional bool forcible = 3 [default = false];
inline bool DispatchMergingRegionsRequest::has_forcible() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DispatchMergingRegionsRequest::set_has_forcible() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DispatchMergingRegionsRequest::clear_has_forcible() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DispatchMergingRegionsRequest::clear_forcible() {
  forcible_ = false;
  clear_has_forcible();
}
inline bool DispatchMergingRegionsRequest::forcible() const {
  return forcible_;
}
inline void DispatchMergingRegionsRequest::set_forcible(bool value) {
  set_has_forcible();
  forcible_ = value;
}

// -------------------------------------------------------------------

// DispatchMergingRegionsResponse

// -------------------------------------------------------------------

// AssignRegionRequest

// required .hbase.pb.RegionSpecifier region = 1;
inline bool AssignRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssignRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssignRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssignRegionRequest::clear_region() {
  if (region_ != NULL) region_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region();
}
inline const ::hbase::pb::RegionSpecifier& AssignRegionRequest::region() const {
  return region_ != NULL ? *region_ : *default_instance_->region_;
}
inline ::hbase::pb::RegionSpecifier* AssignRegionRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) region_ = new ::hbase::pb::RegionSpecifier;
  return region_;
}
inline ::hbase::pb::RegionSpecifier* AssignRegionRequest::release_region() {
  clear_has_region();
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = NULL;
  return temp;
}
inline void AssignRegionRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
}

// -------------------------------------------------------------------

// AssignRegionResponse

// -------------------------------------------------------------------

// UnassignRegionRequest

// required .hbase.pb.RegionSpecifier region = 1;
inline bool UnassignRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnassignRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnassignRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnassignRegionRequest::clear_region() {
  if (region_ != NULL) region_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region();
}
inline const ::hbase::pb::RegionSpecifier& UnassignRegionRequest::region() const {
  return region_ != NULL ? *region_ : *default_instance_->region_;
}
inline ::hbase::pb::RegionSpecifier* UnassignRegionRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) region_ = new ::hbase::pb::RegionSpecifier;
  return region_;
}
inline ::hbase::pb::RegionSpecifier* UnassignRegionRequest::release_region() {
  clear_has_region();
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = NULL;
  return temp;
}
inline void UnassignRegionRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
}

// optional bool force = 2 [default = false];
inline bool UnassignRegionRequest::has_force() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnassignRegionRequest::set_has_force() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnassignRegionRequest::clear_has_force() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnassignRegionRequest::clear_force() {
  force_ = false;
  clear_has_force();
}
inline bool UnassignRegionRequest::force() const {
  return force_;
}
inline void UnassignRegionRequest::set_force(bool value) {
  set_has_force();
  force_ = value;
}

// -------------------------------------------------------------------

// UnassignRegionResponse

// -------------------------------------------------------------------

// OfflineRegionRequest

// required .hbase.pb.RegionSpecifier region = 1;
inline bool OfflineRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OfflineRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OfflineRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OfflineRegionRequest::clear_region() {
  if (region_ != NULL) region_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region();
}
inline const ::hbase::pb::RegionSpecifier& OfflineRegionRequest::region() const {
  return region_ != NULL ? *region_ : *default_instance_->region_;
}
inline ::hbase::pb::RegionSpecifier* OfflineRegionRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) region_ = new ::hbase::pb::RegionSpecifier;
  return region_;
}
inline ::hbase::pb::RegionSpecifier* OfflineRegionRequest::release_region() {
  clear_has_region();
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = NULL;
  return temp;
}
inline void OfflineRegionRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
}

// -------------------------------------------------------------------

// OfflineRegionResponse

// -------------------------------------------------------------------

// CreateTableRequest

// required .hbase.pb.TableSchema table_schema = 1;
inline bool CreateTableRequest::has_table_schema() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTableRequest::set_has_table_schema() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTableRequest::clear_has_table_schema() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTableRequest::clear_table_schema() {
  if (table_schema_ != NULL) table_schema_->::hbase::pb::TableSchema::Clear();
  clear_has_table_schema();
}
inline const ::hbase::pb::TableSchema& CreateTableRequest::table_schema() const {
  return table_schema_ != NULL ? *table_schema_ : *default_instance_->table_schema_;
}
inline ::hbase::pb::TableSchema* CreateTableRequest::mutable_table_schema() {
  set_has_table_schema();
  if (table_schema_ == NULL) table_schema_ = new ::hbase::pb::TableSchema;
  return table_schema_;
}
inline ::hbase::pb::TableSchema* CreateTableRequest::release_table_schema() {
  clear_has_table_schema();
  ::hbase::pb::TableSchema* temp = table_schema_;
  table_schema_ = NULL;
  return temp;
}
inline void CreateTableRequest::set_allocated_table_schema(::hbase::pb::TableSchema* table_schema) {
  delete table_schema_;
  table_schema_ = table_schema;
  if (table_schema) {
    set_has_table_schema();
  } else {
    clear_has_table_schema();
  }
}

// repeated bytes split_keys = 2;
inline int CreateTableRequest::split_keys_size() const {
  return split_keys_.size();
}
inline void CreateTableRequest::clear_split_keys() {
  split_keys_.Clear();
}
inline const ::std::string& CreateTableRequest::split_keys(int index) const {
  return split_keys_.Get(index);
}
inline ::std::string* CreateTableRequest::mutable_split_keys(int index) {
  return split_keys_.Mutable(index);
}
inline void CreateTableRequest::set_split_keys(int index, const ::std::string& value) {
  split_keys_.Mutable(index)->assign(value);
}
inline void CreateTableRequest::set_split_keys(int index, const char* value) {
  split_keys_.Mutable(index)->assign(value);
}
inline void CreateTableRequest::set_split_keys(int index, const void* value, size_t size) {
  split_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateTableRequest::add_split_keys() {
  return split_keys_.Add();
}
inline void CreateTableRequest::add_split_keys(const ::std::string& value) {
  split_keys_.Add()->assign(value);
}
inline void CreateTableRequest::add_split_keys(const char* value) {
  split_keys_.Add()->assign(value);
}
inline void CreateTableRequest::add_split_keys(const void* value, size_t size) {
  split_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateTableRequest::split_keys() const {
  return split_keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateTableRequest::mutable_split_keys() {
  return &split_keys_;
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool CreateTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 CreateTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void CreateTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool CreateTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 CreateTableRequest::nonce() const {
  return nonce_;
}
inline void CreateTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// CreateTableResponse

// optional uint64 proc_id = 1;
inline bool CreateTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 CreateTableResponse::proc_id() const {
  return proc_id_;
}
inline void CreateTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// DeleteTableRequest

// required .hbase.pb.TableName table_name = 1;
inline bool DeleteTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteTableRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& DeleteTableRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* DeleteTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* DeleteTableRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void DeleteTableRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool DeleteTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 DeleteTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void DeleteTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool DeleteTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 DeleteTableRequest::nonce() const {
  return nonce_;
}
inline void DeleteTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// DeleteTableResponse

// optional uint64 proc_id = 1;
inline bool DeleteTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 DeleteTableResponse::proc_id() const {
  return proc_id_;
}
inline void DeleteTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// TruncateTableRequest

// required .hbase.pb.TableName tableName = 1;
inline bool TruncateTableRequest::has_tablename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruncateTableRequest::set_has_tablename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruncateTableRequest::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruncateTableRequest::clear_tablename() {
  if (tablename_ != NULL) tablename_->::hbase::pb::TableName::Clear();
  clear_has_tablename();
}
inline const ::hbase::pb::TableName& TruncateTableRequest::tablename() const {
  return tablename_ != NULL ? *tablename_ : *default_instance_->tablename_;
}
inline ::hbase::pb::TableName* TruncateTableRequest::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == NULL) tablename_ = new ::hbase::pb::TableName;
  return tablename_;
}
inline ::hbase::pb::TableName* TruncateTableRequest::release_tablename() {
  clear_has_tablename();
  ::hbase::pb::TableName* temp = tablename_;
  tablename_ = NULL;
  return temp;
}
inline void TruncateTableRequest::set_allocated_tablename(::hbase::pb::TableName* tablename) {
  delete tablename_;
  tablename_ = tablename;
  if (tablename) {
    set_has_tablename();
  } else {
    clear_has_tablename();
  }
}

// optional bool preserveSplits = 2 [default = false];
inline bool TruncateTableRequest::has_preservesplits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TruncateTableRequest::set_has_preservesplits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TruncateTableRequest::clear_has_preservesplits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TruncateTableRequest::clear_preservesplits() {
  preservesplits_ = false;
  clear_has_preservesplits();
}
inline bool TruncateTableRequest::preservesplits() const {
  return preservesplits_;
}
inline void TruncateTableRequest::set_preservesplits(bool value) {
  set_has_preservesplits();
  preservesplits_ = value;
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool TruncateTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TruncateTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TruncateTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TruncateTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 TruncateTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void TruncateTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool TruncateTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TruncateTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TruncateTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TruncateTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 TruncateTableRequest::nonce() const {
  return nonce_;
}
inline void TruncateTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// TruncateTableResponse

// optional uint64 proc_id = 1;
inline bool TruncateTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruncateTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TruncateTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TruncateTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 TruncateTableResponse::proc_id() const {
  return proc_id_;
}
inline void TruncateTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// EnableTableRequest

// required .hbase.pb.TableName table_name = 1;
inline bool EnableTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableTableRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& EnableTableRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* EnableTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* EnableTableRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void EnableTableRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool EnableTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnableTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnableTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnableTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 EnableTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void EnableTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool EnableTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnableTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnableTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnableTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 EnableTableRequest::nonce() const {
  return nonce_;
}
inline void EnableTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// EnableTableResponse

// optional uint64 proc_id = 1;
inline bool EnableTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 EnableTableResponse::proc_id() const {
  return proc_id_;
}
inline void EnableTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// DisableTableRequest

// required .hbase.pb.TableName table_name = 1;
inline bool DisableTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableTableRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& DisableTableRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* DisableTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* DisableTableRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void DisableTableRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool DisableTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DisableTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DisableTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DisableTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 DisableTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void DisableTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool DisableTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DisableTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DisableTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DisableTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 DisableTableRequest::nonce() const {
  return nonce_;
}
inline void DisableTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// DisableTableResponse

// optional uint64 proc_id = 1;
inline bool DisableTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisableTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisableTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisableTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 DisableTableResponse::proc_id() const {
  return proc_id_;
}
inline void DisableTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// ModifyTableRequest

// required .hbase.pb.TableName table_name = 1;
inline bool ModifyTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyTableRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& ModifyTableRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* ModifyTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* ModifyTableRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void ModifyTableRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// required .hbase.pb.TableSchema table_schema = 2;
inline bool ModifyTableRequest::has_table_schema() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyTableRequest::set_has_table_schema() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyTableRequest::clear_has_table_schema() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyTableRequest::clear_table_schema() {
  if (table_schema_ != NULL) table_schema_->::hbase::pb::TableSchema::Clear();
  clear_has_table_schema();
}
inline const ::hbase::pb::TableSchema& ModifyTableRequest::table_schema() const {
  return table_schema_ != NULL ? *table_schema_ : *default_instance_->table_schema_;
}
inline ::hbase::pb::TableSchema* ModifyTableRequest::mutable_table_schema() {
  set_has_table_schema();
  if (table_schema_ == NULL) table_schema_ = new ::hbase::pb::TableSchema;
  return table_schema_;
}
inline ::hbase::pb::TableSchema* ModifyTableRequest::release_table_schema() {
  clear_has_table_schema();
  ::hbase::pb::TableSchema* temp = table_schema_;
  table_schema_ = NULL;
  return temp;
}
inline void ModifyTableRequest::set_allocated_table_schema(::hbase::pb::TableSchema* table_schema) {
  delete table_schema_;
  table_schema_ = table_schema;
  if (table_schema) {
    set_has_table_schema();
  } else {
    clear_has_table_schema();
  }
}

// optional uint64 nonce_group = 3 [default = 0];
inline bool ModifyTableRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyTableRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyTableRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyTableRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 ModifyTableRequest::nonce_group() const {
  return nonce_group_;
}
inline void ModifyTableRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 4 [default = 0];
inline bool ModifyTableRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModifyTableRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModifyTableRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModifyTableRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 ModifyTableRequest::nonce() const {
  return nonce_;
}
inline void ModifyTableRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// ModifyTableResponse

// optional uint64 proc_id = 1;
inline bool ModifyTableResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyTableResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyTableResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyTableResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 ModifyTableResponse::proc_id() const {
  return proc_id_;
}
inline void ModifyTableResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// CreateNamespaceRequest

// required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
inline bool CreateNamespaceRequest::has_namespacedescriptor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateNamespaceRequest::set_has_namespacedescriptor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateNamespaceRequest::clear_has_namespacedescriptor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateNamespaceRequest::clear_namespacedescriptor() {
  if (namespacedescriptor_ != NULL) namespacedescriptor_->::hbase::pb::NamespaceDescriptor::Clear();
  clear_has_namespacedescriptor();
}
inline const ::hbase::pb::NamespaceDescriptor& CreateNamespaceRequest::namespacedescriptor() const {
  return namespacedescriptor_ != NULL ? *namespacedescriptor_ : *default_instance_->namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* CreateNamespaceRequest::mutable_namespacedescriptor() {
  set_has_namespacedescriptor();
  if (namespacedescriptor_ == NULL) namespacedescriptor_ = new ::hbase::pb::NamespaceDescriptor;
  return namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* CreateNamespaceRequest::release_namespacedescriptor() {
  clear_has_namespacedescriptor();
  ::hbase::pb::NamespaceDescriptor* temp = namespacedescriptor_;
  namespacedescriptor_ = NULL;
  return temp;
}
inline void CreateNamespaceRequest::set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor) {
  delete namespacedescriptor_;
  namespacedescriptor_ = namespacedescriptor;
  if (namespacedescriptor) {
    set_has_namespacedescriptor();
  } else {
    clear_has_namespacedescriptor();
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool CreateNamespaceRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateNamespaceRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateNamespaceRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateNamespaceRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 CreateNamespaceRequest::nonce_group() const {
  return nonce_group_;
}
inline void CreateNamespaceRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool CreateNamespaceRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateNamespaceRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateNamespaceRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateNamespaceRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 CreateNamespaceRequest::nonce() const {
  return nonce_;
}
inline void CreateNamespaceRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// CreateNamespaceResponse

// optional uint64 proc_id = 1;
inline bool CreateNamespaceResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateNamespaceResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateNamespaceResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateNamespaceResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 CreateNamespaceResponse::proc_id() const {
  return proc_id_;
}
inline void CreateNamespaceResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// DeleteNamespaceRequest

// required string namespaceName = 1;
inline bool DeleteNamespaceRequest::has_namespacename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteNamespaceRequest::set_has_namespacename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteNamespaceRequest::clear_has_namespacename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteNamespaceRequest::clear_namespacename() {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    namespacename_->clear();
  }
  clear_has_namespacename();
}
inline const ::std::string& DeleteNamespaceRequest::namespacename() const {
  return *namespacename_;
}
inline void DeleteNamespaceRequest::set_namespacename(const ::std::string& value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void DeleteNamespaceRequest::set_namespacename(const char* value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void DeleteNamespaceRequest::set_namespacename(const char* value, size_t size) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteNamespaceRequest::mutable_namespacename() {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  return namespacename_;
}
inline ::std::string* DeleteNamespaceRequest::release_namespacename() {
  clear_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespacename_;
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeleteNamespaceRequest::set_allocated_namespacename(::std::string* namespacename) {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    delete namespacename_;
  }
  if (namespacename) {
    set_has_namespacename();
    namespacename_ = namespacename;
  } else {
    clear_has_namespacename();
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool DeleteNamespaceRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteNamespaceRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteNamespaceRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteNamespaceRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 DeleteNamespaceRequest::nonce_group() const {
  return nonce_group_;
}
inline void DeleteNamespaceRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool DeleteNamespaceRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteNamespaceRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteNamespaceRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteNamespaceRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 DeleteNamespaceRequest::nonce() const {
  return nonce_;
}
inline void DeleteNamespaceRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// DeleteNamespaceResponse

// optional uint64 proc_id = 1;
inline bool DeleteNamespaceResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteNamespaceResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteNamespaceResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteNamespaceResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 DeleteNamespaceResponse::proc_id() const {
  return proc_id_;
}
inline void DeleteNamespaceResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// ModifyNamespaceRequest

// required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
inline bool ModifyNamespaceRequest::has_namespacedescriptor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyNamespaceRequest::set_has_namespacedescriptor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyNamespaceRequest::clear_has_namespacedescriptor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyNamespaceRequest::clear_namespacedescriptor() {
  if (namespacedescriptor_ != NULL) namespacedescriptor_->::hbase::pb::NamespaceDescriptor::Clear();
  clear_has_namespacedescriptor();
}
inline const ::hbase::pb::NamespaceDescriptor& ModifyNamespaceRequest::namespacedescriptor() const {
  return namespacedescriptor_ != NULL ? *namespacedescriptor_ : *default_instance_->namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* ModifyNamespaceRequest::mutable_namespacedescriptor() {
  set_has_namespacedescriptor();
  if (namespacedescriptor_ == NULL) namespacedescriptor_ = new ::hbase::pb::NamespaceDescriptor;
  return namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* ModifyNamespaceRequest::release_namespacedescriptor() {
  clear_has_namespacedescriptor();
  ::hbase::pb::NamespaceDescriptor* temp = namespacedescriptor_;
  namespacedescriptor_ = NULL;
  return temp;
}
inline void ModifyNamespaceRequest::set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor) {
  delete namespacedescriptor_;
  namespacedescriptor_ = namespacedescriptor;
  if (namespacedescriptor) {
    set_has_namespacedescriptor();
  } else {
    clear_has_namespacedescriptor();
  }
}

// optional uint64 nonce_group = 2 [default = 0];
inline bool ModifyNamespaceRequest::has_nonce_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyNamespaceRequest::set_has_nonce_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyNamespaceRequest::clear_has_nonce_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyNamespaceRequest::clear_nonce_group() {
  nonce_group_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce_group();
}
inline ::google::protobuf::uint64 ModifyNamespaceRequest::nonce_group() const {
  return nonce_group_;
}
inline void ModifyNamespaceRequest::set_nonce_group(::google::protobuf::uint64 value) {
  set_has_nonce_group();
  nonce_group_ = value;
}

// optional uint64 nonce = 3 [default = 0];
inline bool ModifyNamespaceRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyNamespaceRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyNamespaceRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyNamespaceRequest::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
  clear_has_nonce();
}
inline ::google::protobuf::uint64 ModifyNamespaceRequest::nonce() const {
  return nonce_;
}
inline void ModifyNamespaceRequest::set_nonce(::google::protobuf::uint64 value) {
  set_has_nonce();
  nonce_ = value;
}

// -------------------------------------------------------------------

// ModifyNamespaceResponse

// optional uint64 proc_id = 1;
inline bool ModifyNamespaceResponse::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyNamespaceResponse::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyNamespaceResponse::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyNamespaceResponse::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 ModifyNamespaceResponse::proc_id() const {
  return proc_id_;
}
inline void ModifyNamespaceResponse::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// GetNamespaceDescriptorRequest

// required string namespaceName = 1;
inline bool GetNamespaceDescriptorRequest::has_namespacename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNamespaceDescriptorRequest::set_has_namespacename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNamespaceDescriptorRequest::clear_has_namespacename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNamespaceDescriptorRequest::clear_namespacename() {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    namespacename_->clear();
  }
  clear_has_namespacename();
}
inline const ::std::string& GetNamespaceDescriptorRequest::namespacename() const {
  return *namespacename_;
}
inline void GetNamespaceDescriptorRequest::set_namespacename(const ::std::string& value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void GetNamespaceDescriptorRequest::set_namespacename(const char* value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void GetNamespaceDescriptorRequest::set_namespacename(const char* value, size_t size) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetNamespaceDescriptorRequest::mutable_namespacename() {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  return namespacename_;
}
inline ::std::string* GetNamespaceDescriptorRequest::release_namespacename() {
  clear_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespacename_;
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetNamespaceDescriptorRequest::set_allocated_namespacename(::std::string* namespacename) {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    delete namespacename_;
  }
  if (namespacename) {
    set_has_namespacename();
    namespacename_ = namespacename;
  } else {
    clear_has_namespacename();
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetNamespaceDescriptorResponse

// required .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
inline bool GetNamespaceDescriptorResponse::has_namespacedescriptor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNamespaceDescriptorResponse::set_has_namespacedescriptor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNamespaceDescriptorResponse::clear_has_namespacedescriptor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNamespaceDescriptorResponse::clear_namespacedescriptor() {
  if (namespacedescriptor_ != NULL) namespacedescriptor_->::hbase::pb::NamespaceDescriptor::Clear();
  clear_has_namespacedescriptor();
}
inline const ::hbase::pb::NamespaceDescriptor& GetNamespaceDescriptorResponse::namespacedescriptor() const {
  return namespacedescriptor_ != NULL ? *namespacedescriptor_ : *default_instance_->namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* GetNamespaceDescriptorResponse::mutable_namespacedescriptor() {
  set_has_namespacedescriptor();
  if (namespacedescriptor_ == NULL) namespacedescriptor_ = new ::hbase::pb::NamespaceDescriptor;
  return namespacedescriptor_;
}
inline ::hbase::pb::NamespaceDescriptor* GetNamespaceDescriptorResponse::release_namespacedescriptor() {
  clear_has_namespacedescriptor();
  ::hbase::pb::NamespaceDescriptor* temp = namespacedescriptor_;
  namespacedescriptor_ = NULL;
  return temp;
}
inline void GetNamespaceDescriptorResponse::set_allocated_namespacedescriptor(::hbase::pb::NamespaceDescriptor* namespacedescriptor) {
  delete namespacedescriptor_;
  namespacedescriptor_ = namespacedescriptor;
  if (namespacedescriptor) {
    set_has_namespacedescriptor();
  } else {
    clear_has_namespacedescriptor();
  }
}

// -------------------------------------------------------------------

// ListNamespaceDescriptorsRequest

// -------------------------------------------------------------------

// ListNamespaceDescriptorsResponse

// repeated .hbase.pb.NamespaceDescriptor namespaceDescriptor = 1;
inline int ListNamespaceDescriptorsResponse::namespacedescriptor_size() const {
  return namespacedescriptor_.size();
}
inline void ListNamespaceDescriptorsResponse::clear_namespacedescriptor() {
  namespacedescriptor_.Clear();
}
inline const ::hbase::pb::NamespaceDescriptor& ListNamespaceDescriptorsResponse::namespacedescriptor(int index) const {
  return namespacedescriptor_.Get(index);
}
inline ::hbase::pb::NamespaceDescriptor* ListNamespaceDescriptorsResponse::mutable_namespacedescriptor(int index) {
  return namespacedescriptor_.Mutable(index);
}
inline ::hbase::pb::NamespaceDescriptor* ListNamespaceDescriptorsResponse::add_namespacedescriptor() {
  return namespacedescriptor_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::NamespaceDescriptor >&
ListNamespaceDescriptorsResponse::namespacedescriptor() const {
  return namespacedescriptor_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::NamespaceDescriptor >*
ListNamespaceDescriptorsResponse::mutable_namespacedescriptor() {
  return &namespacedescriptor_;
}

// -------------------------------------------------------------------

// ListTableDescriptorsByNamespaceRequest

// required string namespaceName = 1;
inline bool ListTableDescriptorsByNamespaceRequest::has_namespacename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListTableDescriptorsByNamespaceRequest::set_has_namespacename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListTableDescriptorsByNamespaceRequest::clear_has_namespacename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListTableDescriptorsByNamespaceRequest::clear_namespacename() {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    namespacename_->clear();
  }
  clear_has_namespacename();
}
inline const ::std::string& ListTableDescriptorsByNamespaceRequest::namespacename() const {
  return *namespacename_;
}
inline void ListTableDescriptorsByNamespaceRequest::set_namespacename(const ::std::string& value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void ListTableDescriptorsByNamespaceRequest::set_namespacename(const char* value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void ListTableDescriptorsByNamespaceRequest::set_namespacename(const char* value, size_t size) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ListTableDescriptorsByNamespaceRequest::mutable_namespacename() {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  return namespacename_;
}
inline ::std::string* ListTableDescriptorsByNamespaceRequest::release_namespacename() {
  clear_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespacename_;
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ListTableDescriptorsByNamespaceRequest::set_allocated_namespacename(::std::string* namespacename) {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    delete namespacename_;
  }
  if (namespacename) {
    set_has_namespacename();
    namespacename_ = namespacename;
  } else {
    clear_has_namespacename();
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ListTableDescriptorsByNamespaceResponse

// repeated .hbase.pb.TableSchema tableSchema = 1;
inline int ListTableDescriptorsByNamespaceResponse::tableschema_size() const {
  return tableschema_.size();
}
inline void ListTableDescriptorsByNamespaceResponse::clear_tableschema() {
  tableschema_.Clear();
}
inline const ::hbase::pb::TableSchema& ListTableDescriptorsByNamespaceResponse::tableschema(int index) const {
  return tableschema_.Get(index);
}
inline ::hbase::pb::TableSchema* ListTableDescriptorsByNamespaceResponse::mutable_tableschema(int index) {
  return tableschema_.Mutable(index);
}
inline ::hbase::pb::TableSchema* ListTableDescriptorsByNamespaceResponse::add_tableschema() {
  return tableschema_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >&
ListTableDescriptorsByNamespaceResponse::tableschema() const {
  return tableschema_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >*
ListTableDescriptorsByNamespaceResponse::mutable_tableschema() {
  return &tableschema_;
}

// -------------------------------------------------------------------

// ListTableNamesByNamespaceRequest

// required string namespaceName = 1;
inline bool ListTableNamesByNamespaceRequest::has_namespacename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListTableNamesByNamespaceRequest::set_has_namespacename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListTableNamesByNamespaceRequest::clear_has_namespacename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListTableNamesByNamespaceRequest::clear_namespacename() {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    namespacename_->clear();
  }
  clear_has_namespacename();
}
inline const ::std::string& ListTableNamesByNamespaceRequest::namespacename() const {
  return *namespacename_;
}
inline void ListTableNamesByNamespaceRequest::set_namespacename(const ::std::string& value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void ListTableNamesByNamespaceRequest::set_namespacename(const char* value) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(value);
}
inline void ListTableNamesByNamespaceRequest::set_namespacename(const char* value, size_t size) {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  namespacename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ListTableNamesByNamespaceRequest::mutable_namespacename() {
  set_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    namespacename_ = new ::std::string;
  }
  return namespacename_;
}
inline ::std::string* ListTableNamesByNamespaceRequest::release_namespacename() {
  clear_has_namespacename();
  if (namespacename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespacename_;
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ListTableNamesByNamespaceRequest::set_allocated_namespacename(::std::string* namespacename) {
  if (namespacename_ != &::google::protobuf::internal::kEmptyString) {
    delete namespacename_;
  }
  if (namespacename) {
    set_has_namespacename();
    namespacename_ = namespacename;
  } else {
    clear_has_namespacename();
    namespacename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ListTableNamesByNamespaceResponse

// repeated .hbase.pb.TableName tableName = 1;
inline int ListTableNamesByNamespaceResponse::tablename_size() const {
  return tablename_.size();
}
inline void ListTableNamesByNamespaceResponse::clear_tablename() {
  tablename_.Clear();
}
inline const ::hbase::pb::TableName& ListTableNamesByNamespaceResponse::tablename(int index) const {
  return tablename_.Get(index);
}
inline ::hbase::pb::TableName* ListTableNamesByNamespaceResponse::mutable_tablename(int index) {
  return tablename_.Mutable(index);
}
inline ::hbase::pb::TableName* ListTableNamesByNamespaceResponse::add_tablename() {
  return tablename_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
ListTableNamesByNamespaceResponse::tablename() const {
  return tablename_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
ListTableNamesByNamespaceResponse::mutable_tablename() {
  return &tablename_;
}

// -------------------------------------------------------------------

// ShutdownRequest

// -------------------------------------------------------------------

// ShutdownResponse

// -------------------------------------------------------------------

// StopMasterRequest

// -------------------------------------------------------------------

// StopMasterResponse

// -------------------------------------------------------------------

// BalanceRequest

// optional bool force = 1;
inline bool BalanceRequest::has_force() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BalanceRequest::set_has_force() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BalanceRequest::clear_has_force() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BalanceRequest::clear_force() {
  force_ = false;
  clear_has_force();
}
inline bool BalanceRequest::force() const {
  return force_;
}
inline void BalanceRequest::set_force(bool value) {
  set_has_force();
  force_ = value;
}

// -------------------------------------------------------------------

// BalanceResponse

// required bool balancer_ran = 1;
inline bool BalanceResponse::has_balancer_ran() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BalanceResponse::set_has_balancer_ran() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BalanceResponse::clear_has_balancer_ran() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BalanceResponse::clear_balancer_ran() {
  balancer_ran_ = false;
  clear_has_balancer_ran();
}
inline bool BalanceResponse::balancer_ran() const {
  return balancer_ran_;
}
inline void BalanceResponse::set_balancer_ran(bool value) {
  set_has_balancer_ran();
  balancer_ran_ = value;
}

// -------------------------------------------------------------------

// SetBalancerRunningRequest

// required bool on = 1;
inline bool SetBalancerRunningRequest::has_on() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetBalancerRunningRequest::set_has_on() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetBalancerRunningRequest::clear_has_on() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetBalancerRunningRequest::clear_on() {
  on_ = false;
  clear_has_on();
}
inline bool SetBalancerRunningRequest::on() const {
  return on_;
}
inline void SetBalancerRunningRequest::set_on(bool value) {
  set_has_on();
  on_ = value;
}

// optional bool synchronous = 2;
inline bool SetBalancerRunningRequest::has_synchronous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetBalancerRunningRequest::set_has_synchronous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetBalancerRunningRequest::clear_has_synchronous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetBalancerRunningRequest::clear_synchronous() {
  synchronous_ = false;
  clear_has_synchronous();
}
inline bool SetBalancerRunningRequest::synchronous() const {
  return synchronous_;
}
inline void SetBalancerRunningRequest::set_synchronous(bool value) {
  set_has_synchronous();
  synchronous_ = value;
}

// -------------------------------------------------------------------

// SetBalancerRunningResponse

// optional bool prev_balance_value = 1;
inline bool SetBalancerRunningResponse::has_prev_balance_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetBalancerRunningResponse::set_has_prev_balance_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetBalancerRunningResponse::clear_has_prev_balance_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetBalancerRunningResponse::clear_prev_balance_value() {
  prev_balance_value_ = false;
  clear_has_prev_balance_value();
}
inline bool SetBalancerRunningResponse::prev_balance_value() const {
  return prev_balance_value_;
}
inline void SetBalancerRunningResponse::set_prev_balance_value(bool value) {
  set_has_prev_balance_value();
  prev_balance_value_ = value;
}

// -------------------------------------------------------------------

// IsBalancerEnabledRequest

// -------------------------------------------------------------------

// IsBalancerEnabledResponse

// required bool enabled = 1;
inline bool IsBalancerEnabledResponse::has_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsBalancerEnabledResponse::set_has_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsBalancerEnabledResponse::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsBalancerEnabledResponse::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool IsBalancerEnabledResponse::enabled() const {
  return enabled_;
}
inline void IsBalancerEnabledResponse::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
}

// -------------------------------------------------------------------

// SetSplitOrMergeEnabledRequest

// required bool enabled = 1;
inline bool SetSplitOrMergeEnabledRequest::has_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSplitOrMergeEnabledRequest::set_has_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSplitOrMergeEnabledRequest::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSplitOrMergeEnabledRequest::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool SetSplitOrMergeEnabledRequest::enabled() const {
  return enabled_;
}
inline void SetSplitOrMergeEnabledRequest::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
}

// optional bool synchronous = 2;
inline bool SetSplitOrMergeEnabledRequest::has_synchronous() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetSplitOrMergeEnabledRequest::set_has_synchronous() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetSplitOrMergeEnabledRequest::clear_has_synchronous() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetSplitOrMergeEnabledRequest::clear_synchronous() {
  synchronous_ = false;
  clear_has_synchronous();
}
inline bool SetSplitOrMergeEnabledRequest::synchronous() const {
  return synchronous_;
}
inline void SetSplitOrMergeEnabledRequest::set_synchronous(bool value) {
  set_has_synchronous();
  synchronous_ = value;
}

// repeated .hbase.pb.MasterSwitchType switch_types = 3;
inline int SetSplitOrMergeEnabledRequest::switch_types_size() const {
  return switch_types_.size();
}
inline void SetSplitOrMergeEnabledRequest::clear_switch_types() {
  switch_types_.Clear();
}
inline ::hbase::pb::MasterSwitchType SetSplitOrMergeEnabledRequest::switch_types(int index) const {
  return static_cast< ::hbase::pb::MasterSwitchType >(switch_types_.Get(index));
}
inline void SetSplitOrMergeEnabledRequest::set_switch_types(int index, ::hbase::pb::MasterSwitchType value) {
  assert(::hbase::pb::MasterSwitchType_IsValid(value));
  switch_types_.Set(index, value);
}
inline void SetSplitOrMergeEnabledRequest::add_switch_types(::hbase::pb::MasterSwitchType value) {
  assert(::hbase::pb::MasterSwitchType_IsValid(value));
  switch_types_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
SetSplitOrMergeEnabledRequest::switch_types() const {
  return switch_types_;
}
inline ::google::protobuf::RepeatedField<int>*
SetSplitOrMergeEnabledRequest::mutable_switch_types() {
  return &switch_types_;
}

// -------------------------------------------------------------------

// SetSplitOrMergeEnabledResponse

// repeated bool prev_value = 1;
inline int SetSplitOrMergeEnabledResponse::prev_value_size() const {
  return prev_value_.size();
}
inline void SetSplitOrMergeEnabledResponse::clear_prev_value() {
  prev_value_.Clear();
}
inline bool SetSplitOrMergeEnabledResponse::prev_value(int index) const {
  return prev_value_.Get(index);
}
inline void SetSplitOrMergeEnabledResponse::set_prev_value(int index, bool value) {
  prev_value_.Set(index, value);
}
inline void SetSplitOrMergeEnabledResponse::add_prev_value(bool value) {
  prev_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
SetSplitOrMergeEnabledResponse::prev_value() const {
  return prev_value_;
}
inline ::google::protobuf::RepeatedField< bool >*
SetSplitOrMergeEnabledResponse::mutable_prev_value() {
  return &prev_value_;
}

// -------------------------------------------------------------------

// IsSplitOrMergeEnabledRequest

// required .hbase.pb.MasterSwitchType switch_type = 1;
inline bool IsSplitOrMergeEnabledRequest::has_switch_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsSplitOrMergeEnabledRequest::set_has_switch_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsSplitOrMergeEnabledRequest::clear_has_switch_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsSplitOrMergeEnabledRequest::clear_switch_type() {
  switch_type_ = 0;
  clear_has_switch_type();
}
inline ::hbase::pb::MasterSwitchType IsSplitOrMergeEnabledRequest::switch_type() const {
  return static_cast< ::hbase::pb::MasterSwitchType >(switch_type_);
}
inline void IsSplitOrMergeEnabledRequest::set_switch_type(::hbase::pb::MasterSwitchType value) {
  assert(::hbase::pb::MasterSwitchType_IsValid(value));
  set_has_switch_type();
  switch_type_ = value;
}

// -------------------------------------------------------------------

// IsSplitOrMergeEnabledResponse

// required bool enabled = 1;
inline bool IsSplitOrMergeEnabledResponse::has_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsSplitOrMergeEnabledResponse::set_has_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsSplitOrMergeEnabledResponse::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsSplitOrMergeEnabledResponse::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool IsSplitOrMergeEnabledResponse::enabled() const {
  return enabled_;
}
inline void IsSplitOrMergeEnabledResponse::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
}

// -------------------------------------------------------------------

// NormalizeRequest

// -------------------------------------------------------------------

// NormalizeResponse

// required bool normalizer_ran = 1;
inline bool NormalizeResponse::has_normalizer_ran() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalizeResponse::set_has_normalizer_ran() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalizeResponse::clear_has_normalizer_ran() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalizeResponse::clear_normalizer_ran() {
  normalizer_ran_ = false;
  clear_has_normalizer_ran();
}
inline bool NormalizeResponse::normalizer_ran() const {
  return normalizer_ran_;
}
inline void NormalizeResponse::set_normalizer_ran(bool value) {
  set_has_normalizer_ran();
  normalizer_ran_ = value;
}

// -------------------------------------------------------------------

// SetNormalizerRunningRequest

// required bool on = 1;
inline bool SetNormalizerRunningRequest::has_on() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetNormalizerRunningRequest::set_has_on() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetNormalizerRunningRequest::clear_has_on() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetNormalizerRunningRequest::clear_on() {
  on_ = false;
  clear_has_on();
}
inline bool SetNormalizerRunningRequest::on() const {
  return on_;
}
inline void SetNormalizerRunningRequest::set_on(bool value) {
  set_has_on();
  on_ = value;
}

// -------------------------------------------------------------------

// SetNormalizerRunningResponse

// optional bool prev_normalizer_value = 1;
inline bool SetNormalizerRunningResponse::has_prev_normalizer_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetNormalizerRunningResponse::set_has_prev_normalizer_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetNormalizerRunningResponse::clear_has_prev_normalizer_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetNormalizerRunningResponse::clear_prev_normalizer_value() {
  prev_normalizer_value_ = false;
  clear_has_prev_normalizer_value();
}
inline bool SetNormalizerRunningResponse::prev_normalizer_value() const {
  return prev_normalizer_value_;
}
inline void SetNormalizerRunningResponse::set_prev_normalizer_value(bool value) {
  set_has_prev_normalizer_value();
  prev_normalizer_value_ = value;
}

// -------------------------------------------------------------------

// IsNormalizerEnabledRequest

// -------------------------------------------------------------------

// IsNormalizerEnabledResponse

// required bool enabled = 1;
inline bool IsNormalizerEnabledResponse::has_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsNormalizerEnabledResponse::set_has_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsNormalizerEnabledResponse::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsNormalizerEnabledResponse::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool IsNormalizerEnabledResponse::enabled() const {
  return enabled_;
}
inline void IsNormalizerEnabledResponse::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
}

// -------------------------------------------------------------------

// RunCatalogScanRequest

// -------------------------------------------------------------------

// RunCatalogScanResponse

// optional int32 scan_result = 1;
inline bool RunCatalogScanResponse::has_scan_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunCatalogScanResponse::set_has_scan_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunCatalogScanResponse::clear_has_scan_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunCatalogScanResponse::clear_scan_result() {
  scan_result_ = 0;
  clear_has_scan_result();
}
inline ::google::protobuf::int32 RunCatalogScanResponse::scan_result() const {
  return scan_result_;
}
inline void RunCatalogScanResponse::set_scan_result(::google::protobuf::int32 value) {
  set_has_scan_result();
  scan_result_ = value;
}

// -------------------------------------------------------------------

// EnableCatalogJanitorRequest

// required bool enable = 1;
inline bool EnableCatalogJanitorRequest::has_enable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableCatalogJanitorRequest::set_has_enable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableCatalogJanitorRequest::clear_has_enable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableCatalogJanitorRequest::clear_enable() {
  enable_ = false;
  clear_has_enable();
}
inline bool EnableCatalogJanitorRequest::enable() const {
  return enable_;
}
inline void EnableCatalogJanitorRequest::set_enable(bool value) {
  set_has_enable();
  enable_ = value;
}

// -------------------------------------------------------------------

// EnableCatalogJanitorResponse

// optional bool prev_value = 1;
inline bool EnableCatalogJanitorResponse::has_prev_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnableCatalogJanitorResponse::set_has_prev_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnableCatalogJanitorResponse::clear_has_prev_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnableCatalogJanitorResponse::clear_prev_value() {
  prev_value_ = false;
  clear_has_prev_value();
}
inline bool EnableCatalogJanitorResponse::prev_value() const {
  return prev_value_;
}
inline void EnableCatalogJanitorResponse::set_prev_value(bool value) {
  set_has_prev_value();
  prev_value_ = value;
}

// -------------------------------------------------------------------

// IsCatalogJanitorEnabledRequest

// -------------------------------------------------------------------

// IsCatalogJanitorEnabledResponse

// required bool value = 1;
inline bool IsCatalogJanitorEnabledResponse::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsCatalogJanitorEnabledResponse::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsCatalogJanitorEnabledResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsCatalogJanitorEnabledResponse::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool IsCatalogJanitorEnabledResponse::value() const {
  return value_;
}
inline void IsCatalogJanitorEnabledResponse::set_value(bool value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// SnapshotRequest

// required .hbase.pb.SnapshotDescription snapshot = 1;
inline bool SnapshotRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& SnapshotRequest::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* SnapshotRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* SnapshotRequest::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void SnapshotRequest::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// SnapshotResponse

// required int64 expected_timeout = 1;
inline bool SnapshotResponse::has_expected_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotResponse::set_has_expected_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotResponse::clear_has_expected_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotResponse::clear_expected_timeout() {
  expected_timeout_ = GOOGLE_LONGLONG(0);
  clear_has_expected_timeout();
}
inline ::google::protobuf::int64 SnapshotResponse::expected_timeout() const {
  return expected_timeout_;
}
inline void SnapshotResponse::set_expected_timeout(::google::protobuf::int64 value) {
  set_has_expected_timeout();
  expected_timeout_ = value;
}

// -------------------------------------------------------------------

// GetCompletedSnapshotsRequest

// -------------------------------------------------------------------

// GetCompletedSnapshotsResponse

// repeated .hbase.pb.SnapshotDescription snapshots = 1;
inline int GetCompletedSnapshotsResponse::snapshots_size() const {
  return snapshots_.size();
}
inline void GetCompletedSnapshotsResponse::clear_snapshots() {
  snapshots_.Clear();
}
inline const ::hbase::pb::SnapshotDescription& GetCompletedSnapshotsResponse::snapshots(int index) const {
  return snapshots_.Get(index);
}
inline ::hbase::pb::SnapshotDescription* GetCompletedSnapshotsResponse::mutable_snapshots(int index) {
  return snapshots_.Mutable(index);
}
inline ::hbase::pb::SnapshotDescription* GetCompletedSnapshotsResponse::add_snapshots() {
  return snapshots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::SnapshotDescription >&
GetCompletedSnapshotsResponse::snapshots() const {
  return snapshots_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::SnapshotDescription >*
GetCompletedSnapshotsResponse::mutable_snapshots() {
  return &snapshots_;
}

// -------------------------------------------------------------------

// DeleteSnapshotRequest

// required .hbase.pb.SnapshotDescription snapshot = 1;
inline bool DeleteSnapshotRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteSnapshotRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteSnapshotRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteSnapshotRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& DeleteSnapshotRequest::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* DeleteSnapshotRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* DeleteSnapshotRequest::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void DeleteSnapshotRequest::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// DeleteSnapshotResponse

// -------------------------------------------------------------------

// RestoreSnapshotRequest

// required .hbase.pb.SnapshotDescription snapshot = 1;
inline bool RestoreSnapshotRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RestoreSnapshotRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RestoreSnapshotRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RestoreSnapshotRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& RestoreSnapshotRequest::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* RestoreSnapshotRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* RestoreSnapshotRequest::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void RestoreSnapshotRequest::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// RestoreSnapshotResponse

// -------------------------------------------------------------------

// IsSnapshotDoneRequest

// optional .hbase.pb.SnapshotDescription snapshot = 1;
inline bool IsSnapshotDoneRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsSnapshotDoneRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsSnapshotDoneRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsSnapshotDoneRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& IsSnapshotDoneRequest::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsSnapshotDoneRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsSnapshotDoneRequest::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void IsSnapshotDoneRequest::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// IsSnapshotDoneResponse

// optional bool done = 1 [default = false];
inline bool IsSnapshotDoneResponse::has_done() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsSnapshotDoneResponse::set_has_done() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsSnapshotDoneResponse::clear_has_done() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsSnapshotDoneResponse::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool IsSnapshotDoneResponse::done() const {
  return done_;
}
inline void IsSnapshotDoneResponse::set_done(bool value) {
  set_has_done();
  done_ = value;
}

// optional .hbase.pb.SnapshotDescription snapshot = 2;
inline bool IsSnapshotDoneResponse::has_snapshot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IsSnapshotDoneResponse::set_has_snapshot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IsSnapshotDoneResponse::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IsSnapshotDoneResponse::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& IsSnapshotDoneResponse::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsSnapshotDoneResponse::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsSnapshotDoneResponse::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void IsSnapshotDoneResponse::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// IsRestoreSnapshotDoneRequest

// optional .hbase.pb.SnapshotDescription snapshot = 1;
inline bool IsRestoreSnapshotDoneRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsRestoreSnapshotDoneRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsRestoreSnapshotDoneRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsRestoreSnapshotDoneRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::SnapshotDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::SnapshotDescription& IsRestoreSnapshotDoneRequest::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsRestoreSnapshotDoneRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::SnapshotDescription;
  return snapshot_;
}
inline ::hbase::pb::SnapshotDescription* IsRestoreSnapshotDoneRequest::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::SnapshotDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void IsRestoreSnapshotDoneRequest::set_allocated_snapshot(::hbase::pb::SnapshotDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// IsRestoreSnapshotDoneResponse

// optional bool done = 1 [default = false];
inline bool IsRestoreSnapshotDoneResponse::has_done() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsRestoreSnapshotDoneResponse::set_has_done() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsRestoreSnapshotDoneResponse::clear_has_done() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsRestoreSnapshotDoneResponse::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool IsRestoreSnapshotDoneResponse::done() const {
  return done_;
}
inline void IsRestoreSnapshotDoneResponse::set_done(bool value) {
  set_has_done();
  done_ = value;
}

// -------------------------------------------------------------------

// GetSchemaAlterStatusRequest

// required .hbase.pb.TableName table_name = 1;
inline bool GetSchemaAlterStatusRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSchemaAlterStatusRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSchemaAlterStatusRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSchemaAlterStatusRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& GetSchemaAlterStatusRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* GetSchemaAlterStatusRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* GetSchemaAlterStatusRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void GetSchemaAlterStatusRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// -------------------------------------------------------------------

// GetSchemaAlterStatusResponse

// optional uint32 yet_to_update_regions = 1;
inline bool GetSchemaAlterStatusResponse::has_yet_to_update_regions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSchemaAlterStatusResponse::set_has_yet_to_update_regions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSchemaAlterStatusResponse::clear_has_yet_to_update_regions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSchemaAlterStatusResponse::clear_yet_to_update_regions() {
  yet_to_update_regions_ = 0u;
  clear_has_yet_to_update_regions();
}
inline ::google::protobuf::uint32 GetSchemaAlterStatusResponse::yet_to_update_regions() const {
  return yet_to_update_regions_;
}
inline void GetSchemaAlterStatusResponse::set_yet_to_update_regions(::google::protobuf::uint32 value) {
  set_has_yet_to_update_regions();
  yet_to_update_regions_ = value;
}

// optional uint32 total_regions = 2;
inline bool GetSchemaAlterStatusResponse::has_total_regions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSchemaAlterStatusResponse::set_has_total_regions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSchemaAlterStatusResponse::clear_has_total_regions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSchemaAlterStatusResponse::clear_total_regions() {
  total_regions_ = 0u;
  clear_has_total_regions();
}
inline ::google::protobuf::uint32 GetSchemaAlterStatusResponse::total_regions() const {
  return total_regions_;
}
inline void GetSchemaAlterStatusResponse::set_total_regions(::google::protobuf::uint32 value) {
  set_has_total_regions();
  total_regions_ = value;
}

// -------------------------------------------------------------------

// GetTableDescriptorsRequest

// repeated .hbase.pb.TableName table_names = 1;
inline int GetTableDescriptorsRequest::table_names_size() const {
  return table_names_.size();
}
inline void GetTableDescriptorsRequest::clear_table_names() {
  table_names_.Clear();
}
inline const ::hbase::pb::TableName& GetTableDescriptorsRequest::table_names(int index) const {
  return table_names_.Get(index);
}
inline ::hbase::pb::TableName* GetTableDescriptorsRequest::mutable_table_names(int index) {
  return table_names_.Mutable(index);
}
inline ::hbase::pb::TableName* GetTableDescriptorsRequest::add_table_names() {
  return table_names_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
GetTableDescriptorsRequest::table_names() const {
  return table_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
GetTableDescriptorsRequest::mutable_table_names() {
  return &table_names_;
}

// optional string regex = 2;
inline bool GetTableDescriptorsRequest::has_regex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableDescriptorsRequest::set_has_regex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableDescriptorsRequest::clear_has_regex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableDescriptorsRequest::clear_regex() {
  if (regex_ != &::google::protobuf::internal::kEmptyString) {
    regex_->clear();
  }
  clear_has_regex();
}
inline const ::std::string& GetTableDescriptorsRequest::regex() const {
  return *regex_;
}
inline void GetTableDescriptorsRequest::set_regex(const ::std::string& value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
}
inline void GetTableDescriptorsRequest::set_regex(const char* value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
}
inline void GetTableDescriptorsRequest::set_regex(const char* value, size_t size) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetTableDescriptorsRequest::mutable_regex() {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  return regex_;
}
inline ::std::string* GetTableDescriptorsRequest::release_regex() {
  clear_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = regex_;
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetTableDescriptorsRequest::set_allocated_regex(::std::string* regex) {
  if (regex_ != &::google::protobuf::internal::kEmptyString) {
    delete regex_;
  }
  if (regex) {
    set_has_regex();
    regex_ = regex;
  } else {
    clear_has_regex();
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool include_sys_tables = 3 [default = false];
inline bool GetTableDescriptorsRequest::has_include_sys_tables() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTableDescriptorsRequest::set_has_include_sys_tables() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTableDescriptorsRequest::clear_has_include_sys_tables() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTableDescriptorsRequest::clear_include_sys_tables() {
  include_sys_tables_ = false;
  clear_has_include_sys_tables();
}
inline bool GetTableDescriptorsRequest::include_sys_tables() const {
  return include_sys_tables_;
}
inline void GetTableDescriptorsRequest::set_include_sys_tables(bool value) {
  set_has_include_sys_tables();
  include_sys_tables_ = value;
}

// optional string namespace = 4;
inline bool GetTableDescriptorsRequest::has_namespace_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetTableDescriptorsRequest::set_has_namespace_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetTableDescriptorsRequest::clear_has_namespace_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetTableDescriptorsRequest::clear_namespace_() {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    namespace__->clear();
  }
  clear_has_namespace_();
}
inline const ::std::string& GetTableDescriptorsRequest::namespace_() const {
  return *namespace__;
}
inline void GetTableDescriptorsRequest::set_namespace_(const ::std::string& value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void GetTableDescriptorsRequest::set_namespace_(const char* value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void GetTableDescriptorsRequest::set_namespace_(const char* value, size_t size) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetTableDescriptorsRequest::mutable_namespace_() {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  return namespace__;
}
inline ::std::string* GetTableDescriptorsRequest::release_namespace_() {
  clear_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespace__;
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetTableDescriptorsRequest::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    delete namespace__;
  }
  if (namespace_) {
    set_has_namespace_();
    namespace__ = namespace_;
  } else {
    clear_has_namespace_();
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetTableDescriptorsResponse

// repeated .hbase.pb.TableSchema table_schema = 1;
inline int GetTableDescriptorsResponse::table_schema_size() const {
  return table_schema_.size();
}
inline void GetTableDescriptorsResponse::clear_table_schema() {
  table_schema_.Clear();
}
inline const ::hbase::pb::TableSchema& GetTableDescriptorsResponse::table_schema(int index) const {
  return table_schema_.Get(index);
}
inline ::hbase::pb::TableSchema* GetTableDescriptorsResponse::mutable_table_schema(int index) {
  return table_schema_.Mutable(index);
}
inline ::hbase::pb::TableSchema* GetTableDescriptorsResponse::add_table_schema() {
  return table_schema_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >&
GetTableDescriptorsResponse::table_schema() const {
  return table_schema_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableSchema >*
GetTableDescriptorsResponse::mutable_table_schema() {
  return &table_schema_;
}

// -------------------------------------------------------------------

// GetTableNamesRequest

// optional string regex = 1;
inline bool GetTableNamesRequest::has_regex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableNamesRequest::set_has_regex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableNamesRequest::clear_has_regex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableNamesRequest::clear_regex() {
  if (regex_ != &::google::protobuf::internal::kEmptyString) {
    regex_->clear();
  }
  clear_has_regex();
}
inline const ::std::string& GetTableNamesRequest::regex() const {
  return *regex_;
}
inline void GetTableNamesRequest::set_regex(const ::std::string& value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
}
inline void GetTableNamesRequest::set_regex(const char* value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
}
inline void GetTableNamesRequest::set_regex(const char* value, size_t size) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  regex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetTableNamesRequest::mutable_regex() {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    regex_ = new ::std::string;
  }
  return regex_;
}
inline ::std::string* GetTableNamesRequest::release_regex() {
  clear_has_regex();
  if (regex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = regex_;
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetTableNamesRequest::set_allocated_regex(::std::string* regex) {
  if (regex_ != &::google::protobuf::internal::kEmptyString) {
    delete regex_;
  }
  if (regex) {
    set_has_regex();
    regex_ = regex;
  } else {
    clear_has_regex();
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool include_sys_tables = 2 [default = false];
inline bool GetTableNamesRequest::has_include_sys_tables() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTableNamesRequest::set_has_include_sys_tables() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTableNamesRequest::clear_has_include_sys_tables() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTableNamesRequest::clear_include_sys_tables() {
  include_sys_tables_ = false;
  clear_has_include_sys_tables();
}
inline bool GetTableNamesRequest::include_sys_tables() const {
  return include_sys_tables_;
}
inline void GetTableNamesRequest::set_include_sys_tables(bool value) {
  set_has_include_sys_tables();
  include_sys_tables_ = value;
}

// optional string namespace = 3;
inline bool GetTableNamesRequest::has_namespace_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTableNamesRequest::set_has_namespace_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTableNamesRequest::clear_has_namespace_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTableNamesRequest::clear_namespace_() {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    namespace__->clear();
  }
  clear_has_namespace_();
}
inline const ::std::string& GetTableNamesRequest::namespace_() const {
  return *namespace__;
}
inline void GetTableNamesRequest::set_namespace_(const ::std::string& value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void GetTableNamesRequest::set_namespace_(const char* value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void GetTableNamesRequest::set_namespace_(const char* value, size_t size) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetTableNamesRequest::mutable_namespace_() {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  return namespace__;
}
inline ::std::string* GetTableNamesRequest::release_namespace_() {
  clear_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespace__;
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetTableNamesRequest::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    delete namespace__;
  }
  if (namespace_) {
    set_has_namespace_();
    namespace__ = namespace_;
  } else {
    clear_has_namespace_();
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetTableNamesResponse

// repeated .hbase.pb.TableName table_names = 1;
inline int GetTableNamesResponse::table_names_size() const {
  return table_names_.size();
}
inline void GetTableNamesResponse::clear_table_names() {
  table_names_.Clear();
}
inline const ::hbase::pb::TableName& GetTableNamesResponse::table_names(int index) const {
  return table_names_.Get(index);
}
inline ::hbase::pb::TableName* GetTableNamesResponse::mutable_table_names(int index) {
  return table_names_.Mutable(index);
}
inline ::hbase::pb::TableName* GetTableNamesResponse::add_table_names() {
  return table_names_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
GetTableNamesResponse::table_names() const {
  return table_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
GetTableNamesResponse::mutable_table_names() {
  return &table_names_;
}

// -------------------------------------------------------------------

// GetTableStateRequest

// required .hbase.pb.TableName table_name = 1;
inline bool GetTableStateRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableStateRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableStateRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableStateRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& GetTableStateRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* GetTableStateRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* GetTableStateRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void GetTableStateRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// -------------------------------------------------------------------

// GetTableStateResponse

// required .hbase.pb.TableState table_state = 1;
inline bool GetTableStateResponse::has_table_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTableStateResponse::set_has_table_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTableStateResponse::clear_has_table_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTableStateResponse::clear_table_state() {
  if (table_state_ != NULL) table_state_->::hbase::pb::TableState::Clear();
  clear_has_table_state();
}
inline const ::hbase::pb::TableState& GetTableStateResponse::table_state() const {
  return table_state_ != NULL ? *table_state_ : *default_instance_->table_state_;
}
inline ::hbase::pb::TableState* GetTableStateResponse::mutable_table_state() {
  set_has_table_state();
  if (table_state_ == NULL) table_state_ = new ::hbase::pb::TableState;
  return table_state_;
}
inline ::hbase::pb::TableState* GetTableStateResponse::release_table_state() {
  clear_has_table_state();
  ::hbase::pb::TableState* temp = table_state_;
  table_state_ = NULL;
  return temp;
}
inline void GetTableStateResponse::set_allocated_table_state(::hbase::pb::TableState* table_state) {
  delete table_state_;
  table_state_ = table_state;
  if (table_state) {
    set_has_table_state();
  } else {
    clear_has_table_state();
  }
}

// -------------------------------------------------------------------

// GetClusterStatusRequest

// -------------------------------------------------------------------

// GetClusterStatusResponse

// required .hbase.pb.ClusterStatus cluster_status = 1;
inline bool GetClusterStatusResponse::has_cluster_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClusterStatusResponse::set_has_cluster_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClusterStatusResponse::clear_has_cluster_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClusterStatusResponse::clear_cluster_status() {
  if (cluster_status_ != NULL) cluster_status_->::hbase::pb::ClusterStatus::Clear();
  clear_has_cluster_status();
}
inline const ::hbase::pb::ClusterStatus& GetClusterStatusResponse::cluster_status() const {
  return cluster_status_ != NULL ? *cluster_status_ : *default_instance_->cluster_status_;
}
inline ::hbase::pb::ClusterStatus* GetClusterStatusResponse::mutable_cluster_status() {
  set_has_cluster_status();
  if (cluster_status_ == NULL) cluster_status_ = new ::hbase::pb::ClusterStatus;
  return cluster_status_;
}
inline ::hbase::pb::ClusterStatus* GetClusterStatusResponse::release_cluster_status() {
  clear_has_cluster_status();
  ::hbase::pb::ClusterStatus* temp = cluster_status_;
  cluster_status_ = NULL;
  return temp;
}
inline void GetClusterStatusResponse::set_allocated_cluster_status(::hbase::pb::ClusterStatus* cluster_status) {
  delete cluster_status_;
  cluster_status_ = cluster_status;
  if (cluster_status) {
    set_has_cluster_status();
  } else {
    clear_has_cluster_status();
  }
}

// -------------------------------------------------------------------

// IsMasterRunningRequest

// -------------------------------------------------------------------

// IsMasterRunningResponse

// required bool is_master_running = 1;
inline bool IsMasterRunningResponse::has_is_master_running() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsMasterRunningResponse::set_has_is_master_running() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsMasterRunningResponse::clear_has_is_master_running() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsMasterRunningResponse::clear_is_master_running() {
  is_master_running_ = false;
  clear_has_is_master_running();
}
inline bool IsMasterRunningResponse::is_master_running() const {
  return is_master_running_;
}
inline void IsMasterRunningResponse::set_is_master_running(bool value) {
  set_has_is_master_running();
  is_master_running_ = value;
}

// -------------------------------------------------------------------

// ExecProcedureRequest

// required .hbase.pb.ProcedureDescription procedure = 1;
inline bool ExecProcedureRequest::has_procedure() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecProcedureRequest::set_has_procedure() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecProcedureRequest::clear_has_procedure() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecProcedureRequest::clear_procedure() {
  if (procedure_ != NULL) procedure_->::hbase::pb::ProcedureDescription::Clear();
  clear_has_procedure();
}
inline const ::hbase::pb::ProcedureDescription& ExecProcedureRequest::procedure() const {
  return procedure_ != NULL ? *procedure_ : *default_instance_->procedure_;
}
inline ::hbase::pb::ProcedureDescription* ExecProcedureRequest::mutable_procedure() {
  set_has_procedure();
  if (procedure_ == NULL) procedure_ = new ::hbase::pb::ProcedureDescription;
  return procedure_;
}
inline ::hbase::pb::ProcedureDescription* ExecProcedureRequest::release_procedure() {
  clear_has_procedure();
  ::hbase::pb::ProcedureDescription* temp = procedure_;
  procedure_ = NULL;
  return temp;
}
inline void ExecProcedureRequest::set_allocated_procedure(::hbase::pb::ProcedureDescription* procedure) {
  delete procedure_;
  procedure_ = procedure;
  if (procedure) {
    set_has_procedure();
  } else {
    clear_has_procedure();
  }
}

// -------------------------------------------------------------------

// ExecProcedureResponse

// optional int64 expected_timeout = 1;
inline bool ExecProcedureResponse::has_expected_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecProcedureResponse::set_has_expected_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecProcedureResponse::clear_has_expected_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecProcedureResponse::clear_expected_timeout() {
  expected_timeout_ = GOOGLE_LONGLONG(0);
  clear_has_expected_timeout();
}
inline ::google::protobuf::int64 ExecProcedureResponse::expected_timeout() const {
  return expected_timeout_;
}
inline void ExecProcedureResponse::set_expected_timeout(::google::protobuf::int64 value) {
  set_has_expected_timeout();
  expected_timeout_ = value;
}

// optional bytes return_data = 2;
inline bool ExecProcedureResponse::has_return_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecProcedureResponse::set_has_return_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecProcedureResponse::clear_has_return_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecProcedureResponse::clear_return_data() {
  if (return_data_ != &::google::protobuf::internal::kEmptyString) {
    return_data_->clear();
  }
  clear_has_return_data();
}
inline const ::std::string& ExecProcedureResponse::return_data() const {
  return *return_data_;
}
inline void ExecProcedureResponse::set_return_data(const ::std::string& value) {
  set_has_return_data();
  if (return_data_ == &::google::protobuf::internal::kEmptyString) {
    return_data_ = new ::std::string;
  }
  return_data_->assign(value);
}
inline void ExecProcedureResponse::set_return_data(const char* value) {
  set_has_return_data();
  if (return_data_ == &::google::protobuf::internal::kEmptyString) {
    return_data_ = new ::std::string;
  }
  return_data_->assign(value);
}
inline void ExecProcedureResponse::set_return_data(const void* value, size_t size) {
  set_has_return_data();
  if (return_data_ == &::google::protobuf::internal::kEmptyString) {
    return_data_ = new ::std::string;
  }
  return_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExecProcedureResponse::mutable_return_data() {
  set_has_return_data();
  if (return_data_ == &::google::protobuf::internal::kEmptyString) {
    return_data_ = new ::std::string;
  }
  return return_data_;
}
inline ::std::string* ExecProcedureResponse::release_return_data() {
  clear_has_return_data();
  if (return_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = return_data_;
    return_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExecProcedureResponse::set_allocated_return_data(::std::string* return_data) {
  if (return_data_ != &::google::protobuf::internal::kEmptyString) {
    delete return_data_;
  }
  if (return_data) {
    set_has_return_data();
    return_data_ = return_data;
  } else {
    clear_has_return_data();
    return_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// IsProcedureDoneRequest

// optional .hbase.pb.ProcedureDescription procedure = 1;
inline bool IsProcedureDoneRequest::has_procedure() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsProcedureDoneRequest::set_has_procedure() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsProcedureDoneRequest::clear_has_procedure() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsProcedureDoneRequest::clear_procedure() {
  if (procedure_ != NULL) procedure_->::hbase::pb::ProcedureDescription::Clear();
  clear_has_procedure();
}
inline const ::hbase::pb::ProcedureDescription& IsProcedureDoneRequest::procedure() const {
  return procedure_ != NULL ? *procedure_ : *default_instance_->procedure_;
}
inline ::hbase::pb::ProcedureDescription* IsProcedureDoneRequest::mutable_procedure() {
  set_has_procedure();
  if (procedure_ == NULL) procedure_ = new ::hbase::pb::ProcedureDescription;
  return procedure_;
}
inline ::hbase::pb::ProcedureDescription* IsProcedureDoneRequest::release_procedure() {
  clear_has_procedure();
  ::hbase::pb::ProcedureDescription* temp = procedure_;
  procedure_ = NULL;
  return temp;
}
inline void IsProcedureDoneRequest::set_allocated_procedure(::hbase::pb::ProcedureDescription* procedure) {
  delete procedure_;
  procedure_ = procedure;
  if (procedure) {
    set_has_procedure();
  } else {
    clear_has_procedure();
  }
}

// -------------------------------------------------------------------

// IsProcedureDoneResponse

// optional bool done = 1 [default = false];
inline bool IsProcedureDoneResponse::has_done() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsProcedureDoneResponse::set_has_done() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsProcedureDoneResponse::clear_has_done() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsProcedureDoneResponse::clear_done() {
  done_ = false;
  clear_has_done();
}
inline bool IsProcedureDoneResponse::done() const {
  return done_;
}
inline void IsProcedureDoneResponse::set_done(bool value) {
  set_has_done();
  done_ = value;
}

// optional .hbase.pb.ProcedureDescription snapshot = 2;
inline bool IsProcedureDoneResponse::has_snapshot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IsProcedureDoneResponse::set_has_snapshot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IsProcedureDoneResponse::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IsProcedureDoneResponse::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::hbase::pb::ProcedureDescription::Clear();
  clear_has_snapshot();
}
inline const ::hbase::pb::ProcedureDescription& IsProcedureDoneResponse::snapshot() const {
  return snapshot_ != NULL ? *snapshot_ : *default_instance_->snapshot_;
}
inline ::hbase::pb::ProcedureDescription* IsProcedureDoneResponse::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) snapshot_ = new ::hbase::pb::ProcedureDescription;
  return snapshot_;
}
inline ::hbase::pb::ProcedureDescription* IsProcedureDoneResponse::release_snapshot() {
  clear_has_snapshot();
  ::hbase::pb::ProcedureDescription* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void IsProcedureDoneResponse::set_allocated_snapshot(::hbase::pb::ProcedureDescription* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
}

// -------------------------------------------------------------------

// GetProcedureResultRequest

// required uint64 proc_id = 1;
inline bool GetProcedureResultRequest::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProcedureResultRequest::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProcedureResultRequest::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProcedureResultRequest::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 GetProcedureResultRequest::proc_id() const {
  return proc_id_;
}
inline void GetProcedureResultRequest::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// -------------------------------------------------------------------

// GetProcedureResultResponse

// required .hbase.pb.GetProcedureResultResponse.State state = 1;
inline bool GetProcedureResultResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProcedureResultResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProcedureResultResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProcedureResultResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::hbase::pb::GetProcedureResultResponse_State GetProcedureResultResponse::state() const {
  return static_cast< ::hbase::pb::GetProcedureResultResponse_State >(state_);
}
inline void GetProcedureResultResponse::set_state(::hbase::pb::GetProcedureResultResponse_State value) {
  assert(::hbase::pb::GetProcedureResultResponse_State_IsValid(value));
  set_has_state();
  state_ = value;
}

// optional uint64 start_time = 2;
inline bool GetProcedureResultResponse::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProcedureResultResponse::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProcedureResultResponse::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProcedureResultResponse::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 GetProcedureResultResponse::start_time() const {
  return start_time_;
}
inline void GetProcedureResultResponse::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint64 last_update = 3;
inline bool GetProcedureResultResponse::has_last_update() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProcedureResultResponse::set_has_last_update() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProcedureResultResponse::clear_has_last_update() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProcedureResultResponse::clear_last_update() {
  last_update_ = GOOGLE_ULONGLONG(0);
  clear_has_last_update();
}
inline ::google::protobuf::uint64 GetProcedureResultResponse::last_update() const {
  return last_update_;
}
inline void GetProcedureResultResponse::set_last_update(::google::protobuf::uint64 value) {
  set_has_last_update();
  last_update_ = value;
}

// optional bytes result = 4;
inline bool GetProcedureResultResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProcedureResultResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProcedureResultResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProcedureResultResponse::clear_result() {
  if (result_ != &::google::protobuf::internal::kEmptyString) {
    result_->clear();
  }
  clear_has_result();
}
inline const ::std::string& GetProcedureResultResponse::result() const {
  return *result_;
}
inline void GetProcedureResultResponse::set_result(const ::std::string& value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::kEmptyString) {
    result_ = new ::std::string;
  }
  result_->assign(value);
}
inline void GetProcedureResultResponse::set_result(const char* value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::kEmptyString) {
    result_ = new ::std::string;
  }
  result_->assign(value);
}
inline void GetProcedureResultResponse::set_result(const void* value, size_t size) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::kEmptyString) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetProcedureResultResponse::mutable_result() {
  set_has_result();
  if (result_ == &::google::protobuf::internal::kEmptyString) {
    result_ = new ::std::string;
  }
  return result_;
}
inline ::std::string* GetProcedureResultResponse::release_result() {
  clear_has_result();
  if (result_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = result_;
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetProcedureResultResponse::set_allocated_result(::std::string* result) {
  if (result_ != &::google::protobuf::internal::kEmptyString) {
    delete result_;
  }
  if (result) {
    set_has_result();
    result_ = result;
  } else {
    clear_has_result();
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .hbase.pb.ForeignExceptionMessage exception = 5;
inline bool GetProcedureResultResponse::has_exception() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetProcedureResultResponse::set_has_exception() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetProcedureResultResponse::clear_has_exception() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetProcedureResultResponse::clear_exception() {
  if (exception_ != NULL) exception_->::hbase::pb::ForeignExceptionMessage::Clear();
  clear_has_exception();
}
inline const ::hbase::pb::ForeignExceptionMessage& GetProcedureResultResponse::exception() const {
  return exception_ != NULL ? *exception_ : *default_instance_->exception_;
}
inline ::hbase::pb::ForeignExceptionMessage* GetProcedureResultResponse::mutable_exception() {
  set_has_exception();
  if (exception_ == NULL) exception_ = new ::hbase::pb::ForeignExceptionMessage;
  return exception_;
}
inline ::hbase::pb::ForeignExceptionMessage* GetProcedureResultResponse::release_exception() {
  clear_has_exception();
  ::hbase::pb::ForeignExceptionMessage* temp = exception_;
  exception_ = NULL;
  return temp;
}
inline void GetProcedureResultResponse::set_allocated_exception(::hbase::pb::ForeignExceptionMessage* exception) {
  delete exception_;
  exception_ = exception;
  if (exception) {
    set_has_exception();
  } else {
    clear_has_exception();
  }
}

// -------------------------------------------------------------------

// AbortProcedureRequest

// required uint64 proc_id = 1;
inline bool AbortProcedureRequest::has_proc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AbortProcedureRequest::set_has_proc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AbortProcedureRequest::clear_has_proc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AbortProcedureRequest::clear_proc_id() {
  proc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_proc_id();
}
inline ::google::protobuf::uint64 AbortProcedureRequest::proc_id() const {
  return proc_id_;
}
inline void AbortProcedureRequest::set_proc_id(::google::protobuf::uint64 value) {
  set_has_proc_id();
  proc_id_ = value;
}

// optional bool mayInterruptIfRunning = 2 [default = true];
inline bool AbortProcedureRequest::has_mayinterruptifrunning() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AbortProcedureRequest::set_has_mayinterruptifrunning() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AbortProcedureRequest::clear_has_mayinterruptifrunning() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AbortProcedureRequest::clear_mayinterruptifrunning() {
  mayinterruptifrunning_ = true;
  clear_has_mayinterruptifrunning();
}
inline bool AbortProcedureRequest::mayinterruptifrunning() const {
  return mayinterruptifrunning_;
}
inline void AbortProcedureRequest::set_mayinterruptifrunning(bool value) {
  set_has_mayinterruptifrunning();
  mayinterruptifrunning_ = value;
}

// -------------------------------------------------------------------

// AbortProcedureResponse

// required bool is_procedure_aborted = 1;
inline bool AbortProcedureResponse::has_is_procedure_aborted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AbortProcedureResponse::set_has_is_procedure_aborted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AbortProcedureResponse::clear_has_is_procedure_aborted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AbortProcedureResponse::clear_is_procedure_aborted() {
  is_procedure_aborted_ = false;
  clear_has_is_procedure_aborted();
}
inline bool AbortProcedureResponse::is_procedure_aborted() const {
  return is_procedure_aborted_;
}
inline void AbortProcedureResponse::set_is_procedure_aborted(bool value) {
  set_has_is_procedure_aborted();
  is_procedure_aborted_ = value;
}

// -------------------------------------------------------------------

// ListProceduresRequest

// -------------------------------------------------------------------

// ListProceduresResponse

// repeated .hbase.pb.Procedure procedure = 1;
inline int ListProceduresResponse::procedure_size() const {
  return procedure_.size();
}
inline void ListProceduresResponse::clear_procedure() {
  procedure_.Clear();
}
inline const ::hbase::pb::Procedure& ListProceduresResponse::procedure(int index) const {
  return procedure_.Get(index);
}
inline ::hbase::pb::Procedure* ListProceduresResponse::mutable_procedure(int index) {
  return procedure_.Mutable(index);
}
inline ::hbase::pb::Procedure* ListProceduresResponse::add_procedure() {
  return procedure_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::Procedure >&
ListProceduresResponse::procedure() const {
  return procedure_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::Procedure >*
ListProceduresResponse::mutable_procedure() {
  return &procedure_;
}

// -------------------------------------------------------------------

// SetQuotaRequest

// optional string user_name = 1;
inline bool SetQuotaRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetQuotaRequest::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetQuotaRequest::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetQuotaRequest::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& SetQuotaRequest::user_name() const {
  return *user_name_;
}
inline void SetQuotaRequest::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void SetQuotaRequest::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void SetQuotaRequest::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetQuotaRequest::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* SetQuotaRequest::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetQuotaRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string user_group = 2;
inline bool SetQuotaRequest::has_user_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetQuotaRequest::set_has_user_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetQuotaRequest::clear_has_user_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetQuotaRequest::clear_user_group() {
  if (user_group_ != &::google::protobuf::internal::kEmptyString) {
    user_group_->clear();
  }
  clear_has_user_group();
}
inline const ::std::string& SetQuotaRequest::user_group() const {
  return *user_group_;
}
inline void SetQuotaRequest::set_user_group(const ::std::string& value) {
  set_has_user_group();
  if (user_group_ == &::google::protobuf::internal::kEmptyString) {
    user_group_ = new ::std::string;
  }
  user_group_->assign(value);
}
inline void SetQuotaRequest::set_user_group(const char* value) {
  set_has_user_group();
  if (user_group_ == &::google::protobuf::internal::kEmptyString) {
    user_group_ = new ::std::string;
  }
  user_group_->assign(value);
}
inline void SetQuotaRequest::set_user_group(const char* value, size_t size) {
  set_has_user_group();
  if (user_group_ == &::google::protobuf::internal::kEmptyString) {
    user_group_ = new ::std::string;
  }
  user_group_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetQuotaRequest::mutable_user_group() {
  set_has_user_group();
  if (user_group_ == &::google::protobuf::internal::kEmptyString) {
    user_group_ = new ::std::string;
  }
  return user_group_;
}
inline ::std::string* SetQuotaRequest::release_user_group() {
  clear_has_user_group();
  if (user_group_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_group_;
    user_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetQuotaRequest::set_allocated_user_group(::std::string* user_group) {
  if (user_group_ != &::google::protobuf::internal::kEmptyString) {
    delete user_group_;
  }
  if (user_group) {
    set_has_user_group();
    user_group_ = user_group;
  } else {
    clear_has_user_group();
    user_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string namespace = 3;
inline bool SetQuotaRequest::has_namespace_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetQuotaRequest::set_has_namespace_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetQuotaRequest::clear_has_namespace_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetQuotaRequest::clear_namespace_() {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    namespace__->clear();
  }
  clear_has_namespace_();
}
inline const ::std::string& SetQuotaRequest::namespace_() const {
  return *namespace__;
}
inline void SetQuotaRequest::set_namespace_(const ::std::string& value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void SetQuotaRequest::set_namespace_(const char* value) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(value);
}
inline void SetQuotaRequest::set_namespace_(const char* value, size_t size) {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  namespace__->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetQuotaRequest::mutable_namespace_() {
  set_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    namespace__ = new ::std::string;
  }
  return namespace__;
}
inline ::std::string* SetQuotaRequest::release_namespace_() {
  clear_has_namespace_();
  if (namespace__ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = namespace__;
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetQuotaRequest::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace__ != &::google::protobuf::internal::kEmptyString) {
    delete namespace__;
  }
  if (namespace_) {
    set_has_namespace_();
    namespace__ = namespace_;
  } else {
    clear_has_namespace_();
    namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .hbase.pb.TableName table_name = 4;
inline bool SetQuotaRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetQuotaRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetQuotaRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetQuotaRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& SetQuotaRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* SetQuotaRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* SetQuotaRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void SetQuotaRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// optional bool remove_all = 5;
inline bool SetQuotaRequest::has_remove_all() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SetQuotaRequest::set_has_remove_all() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SetQuotaRequest::clear_has_remove_all() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SetQuotaRequest::clear_remove_all() {
  remove_all_ = false;
  clear_has_remove_all();
}
inline bool SetQuotaRequest::remove_all() const {
  return remove_all_;
}
inline void SetQuotaRequest::set_remove_all(bool value) {
  set_has_remove_all();
  remove_all_ = value;
}

// optional bool bypass_globals = 6;
inline bool SetQuotaRequest::has_bypass_globals() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SetQuotaRequest::set_has_bypass_globals() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SetQuotaRequest::clear_has_bypass_globals() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SetQuotaRequest::clear_bypass_globals() {
  bypass_globals_ = false;
  clear_has_bypass_globals();
}
inline bool SetQuotaRequest::bypass_globals() const {
  return bypass_globals_;
}
inline void SetQuotaRequest::set_bypass_globals(bool value) {
  set_has_bypass_globals();
  bypass_globals_ = value;
}

// optional .hbase.pb.ThrottleRequest throttle = 7;
inline bool SetQuotaRequest::has_throttle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SetQuotaRequest::set_has_throttle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SetQuotaRequest::clear_has_throttle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SetQuotaRequest::clear_throttle() {
  if (throttle_ != NULL) throttle_->::hbase::pb::ThrottleRequest::Clear();
  clear_has_throttle();
}
inline const ::hbase::pb::ThrottleRequest& SetQuotaRequest::throttle() const {
  return throttle_ != NULL ? *throttle_ : *default_instance_->throttle_;
}
inline ::hbase::pb::ThrottleRequest* SetQuotaRequest::mutable_throttle() {
  set_has_throttle();
  if (throttle_ == NULL) throttle_ = new ::hbase::pb::ThrottleRequest;
  return throttle_;
}
inline ::hbase::pb::ThrottleRequest* SetQuotaRequest::release_throttle() {
  clear_has_throttle();
  ::hbase::pb::ThrottleRequest* temp = throttle_;
  throttle_ = NULL;
  return temp;
}
inline void SetQuotaRequest::set_allocated_throttle(::hbase::pb::ThrottleRequest* throttle) {
  delete throttle_;
  throttle_ = throttle;
  if (throttle) {
    set_has_throttle();
  } else {
    clear_has_throttle();
  }
}

// -------------------------------------------------------------------

// SetQuotaResponse

// -------------------------------------------------------------------

// MajorCompactionTimestampRequest

// required .hbase.pb.TableName table_name = 1;
inline bool MajorCompactionTimestampRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MajorCompactionTimestampRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MajorCompactionTimestampRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MajorCompactionTimestampRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& MajorCompactionTimestampRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* MajorCompactionTimestampRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* MajorCompactionTimestampRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void MajorCompactionTimestampRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// -------------------------------------------------------------------

// MajorCompactionTimestampForRegionRequest

// required .hbase.pb.RegionSpecifier region = 1;
inline bool MajorCompactionTimestampForRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MajorCompactionTimestampForRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MajorCompactionTimestampForRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MajorCompactionTimestampForRegionRequest::clear_region() {
  if (region_ != NULL) region_->::hbase::pb::RegionSpecifier::Clear();
  clear_has_region();
}
inline const ::hbase::pb::RegionSpecifier& MajorCompactionTimestampForRegionRequest::region() const {
  return region_ != NULL ? *region_ : *default_instance_->region_;
}
inline ::hbase::pb::RegionSpecifier* MajorCompactionTimestampForRegionRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) region_ = new ::hbase::pb::RegionSpecifier;
  return region_;
}
inline ::hbase::pb::RegionSpecifier* MajorCompactionTimestampForRegionRequest::release_region() {
  clear_has_region();
  ::hbase::pb::RegionSpecifier* temp = region_;
  region_ = NULL;
  return temp;
}
inline void MajorCompactionTimestampForRegionRequest::set_allocated_region(::hbase::pb::RegionSpecifier* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
}

// -------------------------------------------------------------------

// MajorCompactionTimestampResponse

// required int64 compaction_timestamp = 1;
inline bool MajorCompactionTimestampResponse::has_compaction_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MajorCompactionTimestampResponse::set_has_compaction_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MajorCompactionTimestampResponse::clear_has_compaction_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MajorCompactionTimestampResponse::clear_compaction_timestamp() {
  compaction_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_compaction_timestamp();
}
inline ::google::protobuf::int64 MajorCompactionTimestampResponse::compaction_timestamp() const {
  return compaction_timestamp_;
}
inline void MajorCompactionTimestampResponse::set_compaction_timestamp(::google::protobuf::int64 value) {
  set_has_compaction_timestamp();
  compaction_timestamp_ = value;
}

// -------------------------------------------------------------------

// SecurityCapabilitiesRequest

// -------------------------------------------------------------------

// SecurityCapabilitiesResponse

// repeated .hbase.pb.SecurityCapabilitiesResponse.Capability capabilities = 1;
inline int SecurityCapabilitiesResponse::capabilities_size() const {
  return capabilities_.size();
}
inline void SecurityCapabilitiesResponse::clear_capabilities() {
  capabilities_.Clear();
}
inline ::hbase::pb::SecurityCapabilitiesResponse_Capability SecurityCapabilitiesResponse::capabilities(int index) const {
  return static_cast< ::hbase::pb::SecurityCapabilitiesResponse_Capability >(capabilities_.Get(index));
}
inline void SecurityCapabilitiesResponse::set_capabilities(int index, ::hbase::pb::SecurityCapabilitiesResponse_Capability value) {
  assert(::hbase::pb::SecurityCapabilitiesResponse_Capability_IsValid(value));
  capabilities_.Set(index, value);
}
inline void SecurityCapabilitiesResponse::add_capabilities(::hbase::pb::SecurityCapabilitiesResponse_Capability value) {
  assert(::hbase::pb::SecurityCapabilitiesResponse_Capability_IsValid(value));
  capabilities_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
SecurityCapabilitiesResponse::capabilities() const {
  return capabilities_;
}
inline ::google::protobuf::RepeatedField<int>*
SecurityCapabilitiesResponse::mutable_capabilities() {
  return &capabilities_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace hbase

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hbase::pb::GetProcedureResultResponse_State>() {
  return ::hbase::pb::GetProcedureResultResponse_State_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hbase::pb::SecurityCapabilitiesResponse_Capability>() {
  return ::hbase::pb::SecurityCapabilitiesResponse_Capability_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hbase::pb::MasterSwitchType>() {
  return ::hbase::pb::MasterSwitchType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Master_2eproto__INCLUDED
