// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RSGroupAdmin.proto

#ifndef PROTOBUF_RSGroupAdmin_2eproto__INCLUDED
#define PROTOBUF_RSGroupAdmin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "HBase.pb.h"
#include "RSGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace hbase {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RSGroupAdmin_2eproto();
void protobuf_AssignDesc_RSGroupAdmin_2eproto();
void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

class ListTablesOfRSGroupRequest;
class ListTablesOfRSGroupResponse;
class GetRSGroupInfoRequest;
class GetRSGroupInfoResponse;
class GetRSGroupInfoOfTableRequest;
class GetRSGroupInfoOfTableResponse;
class MoveServersRequest;
class MoveServersResponse;
class MoveTablesRequest;
class MoveTablesResponse;
class AddRSGroupRequest;
class AddRSGroupResponse;
class RemoveRSGroupRequest;
class RemoveRSGroupResponse;
class BalanceRSGroupRequest;
class BalanceRSGroupResponse;
class ListRSGroupInfosRequest;
class ListRSGroupInfosResponse;
class GetRSGroupInfoOfServerRequest;
class GetRSGroupInfoOfServerResponse;

// ===================================================================

class ListTablesOfRSGroupRequest : public ::google::protobuf::Message {
 public:
  ListTablesOfRSGroupRequest();
  virtual ~ListTablesOfRSGroupRequest();

  ListTablesOfRSGroupRequest(const ListTablesOfRSGroupRequest& from);

  inline ListTablesOfRSGroupRequest& operator=(const ListTablesOfRSGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTablesOfRSGroupRequest& default_instance();

  void Swap(ListTablesOfRSGroupRequest* other);

  // implements Message ----------------------------------------------

  ListTablesOfRSGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTablesOfRSGroupRequest& from);
  void MergeFrom(const ListTablesOfRSGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string r_s_group_name = 1;
  inline bool has_r_s_group_name() const;
  inline void clear_r_s_group_name();
  static const int kRSGroupNameFieldNumber = 1;
  inline const ::std::string& r_s_group_name() const;
  inline void set_r_s_group_name(const ::std::string& value);
  inline void set_r_s_group_name(const char* value);
  inline void set_r_s_group_name(const char* value, size_t size);
  inline ::std::string* mutable_r_s_group_name();
  inline ::std::string* release_r_s_group_name();
  inline void set_allocated_r_s_group_name(::std::string* r_s_group_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTablesOfRSGroupRequest)
 private:
  inline void set_has_r_s_group_name();
  inline void clear_has_r_s_group_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* r_s_group_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static ListTablesOfRSGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListTablesOfRSGroupResponse : public ::google::protobuf::Message {
 public:
  ListTablesOfRSGroupResponse();
  virtual ~ListTablesOfRSGroupResponse();

  ListTablesOfRSGroupResponse(const ListTablesOfRSGroupResponse& from);

  inline ListTablesOfRSGroupResponse& operator=(const ListTablesOfRSGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTablesOfRSGroupResponse& default_instance();

  void Swap(ListTablesOfRSGroupResponse* other);

  // implements Message ----------------------------------------------

  ListTablesOfRSGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTablesOfRSGroupResponse& from);
  void MergeFrom(const ListTablesOfRSGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.TableName table_name = 1;
  inline int table_name_size() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name(int index) const;
  inline ::hbase::pb::TableName* mutable_table_name(int index);
  inline ::hbase::pb::TableName* add_table_name();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
      table_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
      mutable_table_name();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListTablesOfRSGroupResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName > table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static ListTablesOfRSGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoRequest : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoRequest();
  virtual ~GetRSGroupInfoRequest();

  GetRSGroupInfoRequest(const GetRSGroupInfoRequest& from);

  inline GetRSGroupInfoRequest& operator=(const GetRSGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoRequest& default_instance();

  void Swap(GetRSGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoRequest& from);
  void MergeFrom(const GetRSGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string r_s_group_name = 1;
  inline bool has_r_s_group_name() const;
  inline void clear_r_s_group_name();
  static const int kRSGroupNameFieldNumber = 1;
  inline const ::std::string& r_s_group_name() const;
  inline void set_r_s_group_name(const ::std::string& value);
  inline void set_r_s_group_name(const char* value);
  inline void set_r_s_group_name(const char* value, size_t size);
  inline ::std::string* mutable_r_s_group_name();
  inline ::std::string* release_r_s_group_name();
  inline void set_allocated_r_s_group_name(::std::string* r_s_group_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoRequest)
 private:
  inline void set_has_r_s_group_name();
  inline void clear_has_r_s_group_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* r_s_group_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoResponse : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoResponse();
  virtual ~GetRSGroupInfoResponse();

  GetRSGroupInfoResponse(const GetRSGroupInfoResponse& from);

  inline GetRSGroupInfoResponse& operator=(const GetRSGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoResponse& default_instance();

  void Swap(GetRSGroupInfoResponse* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoResponse& from);
  void MergeFrom(const GetRSGroupInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
  inline bool has_r_s_group_info() const;
  inline void clear_r_s_group_info();
  static const int kRSGroupInfoFieldNumber = 1;
  inline const ::hbase::pb::RSGroupInfo& r_s_group_info() const;
  inline ::hbase::pb::RSGroupInfo* mutable_r_s_group_info();
  inline ::hbase::pb::RSGroupInfo* release_r_s_group_info();
  inline void set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoResponse)
 private:
  inline void set_has_r_s_group_info();
  inline void clear_has_r_s_group_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RSGroupInfo* r_s_group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoOfTableRequest : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoOfTableRequest();
  virtual ~GetRSGroupInfoOfTableRequest();

  GetRSGroupInfoOfTableRequest(const GetRSGroupInfoOfTableRequest& from);

  inline GetRSGroupInfoOfTableRequest& operator=(const GetRSGroupInfoOfTableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoOfTableRequest& default_instance();

  void Swap(GetRSGroupInfoOfTableRequest* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoOfTableRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoOfTableRequest& from);
  void MergeFrom(const GetRSGroupInfoOfTableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.TableName table_name = 1;
  inline bool has_table_name() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  inline const ::hbase::pb::TableName& table_name() const;
  inline ::hbase::pb::TableName* mutable_table_name();
  inline ::hbase::pb::TableName* release_table_name();
  inline void set_allocated_table_name(::hbase::pb::TableName* table_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoOfTableRequest)
 private:
  inline void set_has_table_name();
  inline void clear_has_table_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::TableName* table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoOfTableRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoOfTableResponse : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoOfTableResponse();
  virtual ~GetRSGroupInfoOfTableResponse();

  GetRSGroupInfoOfTableResponse(const GetRSGroupInfoOfTableResponse& from);

  inline GetRSGroupInfoOfTableResponse& operator=(const GetRSGroupInfoOfTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoOfTableResponse& default_instance();

  void Swap(GetRSGroupInfoOfTableResponse* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoOfTableResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoOfTableResponse& from);
  void MergeFrom(const GetRSGroupInfoOfTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
  inline bool has_r_s_group_info() const;
  inline void clear_r_s_group_info();
  static const int kRSGroupInfoFieldNumber = 1;
  inline const ::hbase::pb::RSGroupInfo& r_s_group_info() const;
  inline ::hbase::pb::RSGroupInfo* mutable_r_s_group_info();
  inline ::hbase::pb::RSGroupInfo* release_r_s_group_info();
  inline void set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoOfTableResponse)
 private:
  inline void set_has_r_s_group_info();
  inline void clear_has_r_s_group_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RSGroupInfo* r_s_group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoOfTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoveServersRequest : public ::google::protobuf::Message {
 public:
  MoveServersRequest();
  virtual ~MoveServersRequest();

  MoveServersRequest(const MoveServersRequest& from);

  inline MoveServersRequest& operator=(const MoveServersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveServersRequest& default_instance();

  void Swap(MoveServersRequest* other);

  // implements Message ----------------------------------------------

  MoveServersRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveServersRequest& from);
  void MergeFrom(const MoveServersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string target_group = 1;
  inline bool has_target_group() const;
  inline void clear_target_group();
  static const int kTargetGroupFieldNumber = 1;
  inline const ::std::string& target_group() const;
  inline void set_target_group(const ::std::string& value);
  inline void set_target_group(const char* value);
  inline void set_target_group(const char* value, size_t size);
  inline ::std::string* mutable_target_group();
  inline ::std::string* release_target_group();
  inline void set_allocated_target_group(::std::string* target_group);

  // repeated .hbase.pb.ServerName servers = 3;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 3;
  inline const ::hbase::pb::ServerName& servers(int index) const;
  inline ::hbase::pb::ServerName* mutable_servers(int index);
  inline ::hbase::pb::ServerName* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::ServerName >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::ServerName >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveServersRequest)
 private:
  inline void set_has_target_group();
  inline void clear_has_target_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* target_group_;
  ::google::protobuf::RepeatedPtrField< ::hbase::pb::ServerName > servers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static MoveServersRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveServersResponse : public ::google::protobuf::Message {
 public:
  MoveServersResponse();
  virtual ~MoveServersResponse();

  MoveServersResponse(const MoveServersResponse& from);

  inline MoveServersResponse& operator=(const MoveServersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveServersResponse& default_instance();

  void Swap(MoveServersResponse* other);

  // implements Message ----------------------------------------------

  MoveServersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveServersResponse& from);
  void MergeFrom(const MoveServersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveServersResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static MoveServersResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoveTablesRequest : public ::google::protobuf::Message {
 public:
  MoveTablesRequest();
  virtual ~MoveTablesRequest();

  MoveTablesRequest(const MoveTablesRequest& from);

  inline MoveTablesRequest& operator=(const MoveTablesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveTablesRequest& default_instance();

  void Swap(MoveTablesRequest* other);

  // implements Message ----------------------------------------------

  MoveTablesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveTablesRequest& from);
  void MergeFrom(const MoveTablesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string target_group = 1;
  inline bool has_target_group() const;
  inline void clear_target_group();
  static const int kTargetGroupFieldNumber = 1;
  inline const ::std::string& target_group() const;
  inline void set_target_group(const ::std::string& value);
  inline void set_target_group(const char* value);
  inline void set_target_group(const char* value, size_t size);
  inline ::std::string* mutable_target_group();
  inline ::std::string* release_target_group();
  inline void set_allocated_target_group(::std::string* target_group);

  // repeated .hbase.pb.TableName table_name = 2;
  inline int table_name_size() const;
  inline void clear_table_name();
  static const int kTableNameFieldNumber = 2;
  inline const ::hbase::pb::TableName& table_name(int index) const;
  inline ::hbase::pb::TableName* mutable_table_name(int index);
  inline ::hbase::pb::TableName* add_table_name();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
      table_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
      mutable_table_name();

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveTablesRequest)
 private:
  inline void set_has_target_group();
  inline void clear_has_target_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* target_group_;
  ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName > table_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static MoveTablesRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveTablesResponse : public ::google::protobuf::Message {
 public:
  MoveTablesResponse();
  virtual ~MoveTablesResponse();

  MoveTablesResponse(const MoveTablesResponse& from);

  inline MoveTablesResponse& operator=(const MoveTablesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveTablesResponse& default_instance();

  void Swap(MoveTablesResponse* other);

  // implements Message ----------------------------------------------

  MoveTablesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveTablesResponse& from);
  void MergeFrom(const MoveTablesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.MoveTablesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static MoveTablesResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddRSGroupRequest : public ::google::protobuf::Message {
 public:
  AddRSGroupRequest();
  virtual ~AddRSGroupRequest();

  AddRSGroupRequest(const AddRSGroupRequest& from);

  inline AddRSGroupRequest& operator=(const AddRSGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRSGroupRequest& default_instance();

  void Swap(AddRSGroupRequest* other);

  // implements Message ----------------------------------------------

  AddRSGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRSGroupRequest& from);
  void MergeFrom(const AddRSGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string r_s_group_name = 1;
  inline bool has_r_s_group_name() const;
  inline void clear_r_s_group_name();
  static const int kRSGroupNameFieldNumber = 1;
  inline const ::std::string& r_s_group_name() const;
  inline void set_r_s_group_name(const ::std::string& value);
  inline void set_r_s_group_name(const char* value);
  inline void set_r_s_group_name(const char* value, size_t size);
  inline ::std::string* mutable_r_s_group_name();
  inline ::std::string* release_r_s_group_name();
  inline void set_allocated_r_s_group_name(::std::string* r_s_group_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.AddRSGroupRequest)
 private:
  inline void set_has_r_s_group_name();
  inline void clear_has_r_s_group_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* r_s_group_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static AddRSGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddRSGroupResponse : public ::google::protobuf::Message {
 public:
  AddRSGroupResponse();
  virtual ~AddRSGroupResponse();

  AddRSGroupResponse(const AddRSGroupResponse& from);

  inline AddRSGroupResponse& operator=(const AddRSGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRSGroupResponse& default_instance();

  void Swap(AddRSGroupResponse* other);

  // implements Message ----------------------------------------------

  AddRSGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRSGroupResponse& from);
  void MergeFrom(const AddRSGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.AddRSGroupResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static AddRSGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class RemoveRSGroupRequest : public ::google::protobuf::Message {
 public:
  RemoveRSGroupRequest();
  virtual ~RemoveRSGroupRequest();

  RemoveRSGroupRequest(const RemoveRSGroupRequest& from);

  inline RemoveRSGroupRequest& operator=(const RemoveRSGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRSGroupRequest& default_instance();

  void Swap(RemoveRSGroupRequest* other);

  // implements Message ----------------------------------------------

  RemoveRSGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveRSGroupRequest& from);
  void MergeFrom(const RemoveRSGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string r_s_group_name = 1;
  inline bool has_r_s_group_name() const;
  inline void clear_r_s_group_name();
  static const int kRSGroupNameFieldNumber = 1;
  inline const ::std::string& r_s_group_name() const;
  inline void set_r_s_group_name(const ::std::string& value);
  inline void set_r_s_group_name(const char* value);
  inline void set_r_s_group_name(const char* value, size_t size);
  inline ::std::string* mutable_r_s_group_name();
  inline ::std::string* release_r_s_group_name();
  inline void set_allocated_r_s_group_name(::std::string* r_s_group_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.RemoveRSGroupRequest)
 private:
  inline void set_has_r_s_group_name();
  inline void clear_has_r_s_group_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* r_s_group_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static RemoveRSGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveRSGroupResponse : public ::google::protobuf::Message {
 public:
  RemoveRSGroupResponse();
  virtual ~RemoveRSGroupResponse();

  RemoveRSGroupResponse(const RemoveRSGroupResponse& from);

  inline RemoveRSGroupResponse& operator=(const RemoveRSGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRSGroupResponse& default_instance();

  void Swap(RemoveRSGroupResponse* other);

  // implements Message ----------------------------------------------

  RemoveRSGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveRSGroupResponse& from);
  void MergeFrom(const RemoveRSGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.RemoveRSGroupResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static RemoveRSGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class BalanceRSGroupRequest : public ::google::protobuf::Message {
 public:
  BalanceRSGroupRequest();
  virtual ~BalanceRSGroupRequest();

  BalanceRSGroupRequest(const BalanceRSGroupRequest& from);

  inline BalanceRSGroupRequest& operator=(const BalanceRSGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceRSGroupRequest& default_instance();

  void Swap(BalanceRSGroupRequest* other);

  // implements Message ----------------------------------------------

  BalanceRSGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BalanceRSGroupRequest& from);
  void MergeFrom(const BalanceRSGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string r_s_group_name = 1;
  inline bool has_r_s_group_name() const;
  inline void clear_r_s_group_name();
  static const int kRSGroupNameFieldNumber = 1;
  inline const ::std::string& r_s_group_name() const;
  inline void set_r_s_group_name(const ::std::string& value);
  inline void set_r_s_group_name(const char* value);
  inline void set_r_s_group_name(const char* value, size_t size);
  inline ::std::string* mutable_r_s_group_name();
  inline ::std::string* release_r_s_group_name();
  inline void set_allocated_r_s_group_name(::std::string* r_s_group_name);

  // @@protoc_insertion_point(class_scope:hbase.pb.BalanceRSGroupRequest)
 private:
  inline void set_has_r_s_group_name();
  inline void clear_has_r_s_group_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* r_s_group_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static BalanceRSGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class BalanceRSGroupResponse : public ::google::protobuf::Message {
 public:
  BalanceRSGroupResponse();
  virtual ~BalanceRSGroupResponse();

  BalanceRSGroupResponse(const BalanceRSGroupResponse& from);

  inline BalanceRSGroupResponse& operator=(const BalanceRSGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceRSGroupResponse& default_instance();

  void Swap(BalanceRSGroupResponse* other);

  // implements Message ----------------------------------------------

  BalanceRSGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BalanceRSGroupResponse& from);
  void MergeFrom(const BalanceRSGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool balanceRan = 1;
  inline bool has_balanceran() const;
  inline void clear_balanceran();
  static const int kBalanceRanFieldNumber = 1;
  inline bool balanceran() const;
  inline void set_balanceran(bool value);

  // @@protoc_insertion_point(class_scope:hbase.pb.BalanceRSGroupResponse)
 private:
  inline void set_has_balanceran();
  inline void clear_has_balanceran();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool balanceran_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static BalanceRSGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListRSGroupInfosRequest : public ::google::protobuf::Message {
 public:
  ListRSGroupInfosRequest();
  virtual ~ListRSGroupInfosRequest();

  ListRSGroupInfosRequest(const ListRSGroupInfosRequest& from);

  inline ListRSGroupInfosRequest& operator=(const ListRSGroupInfosRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListRSGroupInfosRequest& default_instance();

  void Swap(ListRSGroupInfosRequest* other);

  // implements Message ----------------------------------------------

  ListRSGroupInfosRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListRSGroupInfosRequest& from);
  void MergeFrom(const ListRSGroupInfosRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hbase.pb.ListRSGroupInfosRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static ListRSGroupInfosRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListRSGroupInfosResponse : public ::google::protobuf::Message {
 public:
  ListRSGroupInfosResponse();
  virtual ~ListRSGroupInfosResponse();

  ListRSGroupInfosResponse(const ListRSGroupInfosResponse& from);

  inline ListRSGroupInfosResponse& operator=(const ListRSGroupInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListRSGroupInfosResponse& default_instance();

  void Swap(ListRSGroupInfosResponse* other);

  // implements Message ----------------------------------------------

  ListRSGroupInfosResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListRSGroupInfosResponse& from);
  void MergeFrom(const ListRSGroupInfosResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hbase.pb.RSGroupInfo r_s_group_info = 1;
  inline int r_s_group_info_size() const;
  inline void clear_r_s_group_info();
  static const int kRSGroupInfoFieldNumber = 1;
  inline const ::hbase::pb::RSGroupInfo& r_s_group_info(int index) const;
  inline ::hbase::pb::RSGroupInfo* mutable_r_s_group_info(int index);
  inline ::hbase::pb::RSGroupInfo* add_r_s_group_info();
  inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::RSGroupInfo >&
      r_s_group_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::RSGroupInfo >*
      mutable_r_s_group_info();

  // @@protoc_insertion_point(class_scope:hbase.pb.ListRSGroupInfosResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hbase::pb::RSGroupInfo > r_s_group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static ListRSGroupInfosResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoOfServerRequest : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoOfServerRequest();
  virtual ~GetRSGroupInfoOfServerRequest();

  GetRSGroupInfoOfServerRequest(const GetRSGroupInfoOfServerRequest& from);

  inline GetRSGroupInfoOfServerRequest& operator=(const GetRSGroupInfoOfServerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoOfServerRequest& default_instance();

  void Swap(GetRSGroupInfoOfServerRequest* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoOfServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoOfServerRequest& from);
  void MergeFrom(const GetRSGroupInfoOfServerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .hbase.pb.ServerName server = 2;
  inline bool has_server() const;
  inline void clear_server();
  static const int kServerFieldNumber = 2;
  inline const ::hbase::pb::ServerName& server() const;
  inline ::hbase::pb::ServerName* mutable_server();
  inline ::hbase::pb::ServerName* release_server();
  inline void set_allocated_server(::hbase::pb::ServerName* server);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoOfServerRequest)
 private:
  inline void set_has_server();
  inline void clear_has_server();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::ServerName* server_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoOfServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRSGroupInfoOfServerResponse : public ::google::protobuf::Message {
 public:
  GetRSGroupInfoOfServerResponse();
  virtual ~GetRSGroupInfoOfServerResponse();

  GetRSGroupInfoOfServerResponse(const GetRSGroupInfoOfServerResponse& from);

  inline GetRSGroupInfoOfServerResponse& operator=(const GetRSGroupInfoOfServerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRSGroupInfoOfServerResponse& default_instance();

  void Swap(GetRSGroupInfoOfServerResponse* other);

  // implements Message ----------------------------------------------

  GetRSGroupInfoOfServerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRSGroupInfoOfServerResponse& from);
  void MergeFrom(const GetRSGroupInfoOfServerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
  inline bool has_r_s_group_info() const;
  inline void clear_r_s_group_info();
  static const int kRSGroupInfoFieldNumber = 1;
  inline const ::hbase::pb::RSGroupInfo& r_s_group_info() const;
  inline ::hbase::pb::RSGroupInfo* mutable_r_s_group_info();
  inline ::hbase::pb::RSGroupInfo* release_r_s_group_info();
  inline void set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info);

  // @@protoc_insertion_point(class_scope:hbase.pb.GetRSGroupInfoOfServerResponse)
 private:
  inline void set_has_r_s_group_info();
  inline void clear_has_r_s_group_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::hbase::pb::RSGroupInfo* r_s_group_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RSGroupAdmin_2eproto();
  friend void protobuf_AssignDesc_RSGroupAdmin_2eproto();
  friend void protobuf_ShutdownFile_RSGroupAdmin_2eproto();

  void InitAsDefaultInstance();
  static GetRSGroupInfoOfServerResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ListTablesOfRSGroupRequest

// required string r_s_group_name = 1;
inline bool ListTablesOfRSGroupRequest::has_r_s_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ListTablesOfRSGroupRequest::set_has_r_s_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ListTablesOfRSGroupRequest::clear_has_r_s_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ListTablesOfRSGroupRequest::clear_r_s_group_name() {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_->clear();
  }
  clear_has_r_s_group_name();
}
inline const ::std::string& ListTablesOfRSGroupRequest::r_s_group_name() const {
  return *r_s_group_name_;
}
inline void ListTablesOfRSGroupRequest::set_r_s_group_name(const ::std::string& value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void ListTablesOfRSGroupRequest::set_r_s_group_name(const char* value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void ListTablesOfRSGroupRequest::set_r_s_group_name(const char* value, size_t size) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ListTablesOfRSGroupRequest::mutable_r_s_group_name() {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  return r_s_group_name_;
}
inline ::std::string* ListTablesOfRSGroupRequest::release_r_s_group_name() {
  clear_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = r_s_group_name_;
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ListTablesOfRSGroupRequest::set_allocated_r_s_group_name(::std::string* r_s_group_name) {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete r_s_group_name_;
  }
  if (r_s_group_name) {
    set_has_r_s_group_name();
    r_s_group_name_ = r_s_group_name;
  } else {
    clear_has_r_s_group_name();
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ListTablesOfRSGroupResponse

// repeated .hbase.pb.TableName table_name = 1;
inline int ListTablesOfRSGroupResponse::table_name_size() const {
  return table_name_.size();
}
inline void ListTablesOfRSGroupResponse::clear_table_name() {
  table_name_.Clear();
}
inline const ::hbase::pb::TableName& ListTablesOfRSGroupResponse::table_name(int index) const {
  return table_name_.Get(index);
}
inline ::hbase::pb::TableName* ListTablesOfRSGroupResponse::mutable_table_name(int index) {
  return table_name_.Mutable(index);
}
inline ::hbase::pb::TableName* ListTablesOfRSGroupResponse::add_table_name() {
  return table_name_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
ListTablesOfRSGroupResponse::table_name() const {
  return table_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
ListTablesOfRSGroupResponse::mutable_table_name() {
  return &table_name_;
}

// -------------------------------------------------------------------

// GetRSGroupInfoRequest

// required string r_s_group_name = 1;
inline bool GetRSGroupInfoRequest::has_r_s_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoRequest::set_has_r_s_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoRequest::clear_has_r_s_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoRequest::clear_r_s_group_name() {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_->clear();
  }
  clear_has_r_s_group_name();
}
inline const ::std::string& GetRSGroupInfoRequest::r_s_group_name() const {
  return *r_s_group_name_;
}
inline void GetRSGroupInfoRequest::set_r_s_group_name(const ::std::string& value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void GetRSGroupInfoRequest::set_r_s_group_name(const char* value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void GetRSGroupInfoRequest::set_r_s_group_name(const char* value, size_t size) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetRSGroupInfoRequest::mutable_r_s_group_name() {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  return r_s_group_name_;
}
inline ::std::string* GetRSGroupInfoRequest::release_r_s_group_name() {
  clear_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = r_s_group_name_;
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetRSGroupInfoRequest::set_allocated_r_s_group_name(::std::string* r_s_group_name) {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete r_s_group_name_;
  }
  if (r_s_group_name) {
    set_has_r_s_group_name();
    r_s_group_name_ = r_s_group_name;
  } else {
    clear_has_r_s_group_name();
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetRSGroupInfoResponse

// optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
inline bool GetRSGroupInfoResponse::has_r_s_group_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoResponse::set_has_r_s_group_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoResponse::clear_has_r_s_group_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoResponse::clear_r_s_group_info() {
  if (r_s_group_info_ != NULL) r_s_group_info_->::hbase::pb::RSGroupInfo::Clear();
  clear_has_r_s_group_info();
}
inline const ::hbase::pb::RSGroupInfo& GetRSGroupInfoResponse::r_s_group_info() const {
  return r_s_group_info_ != NULL ? *r_s_group_info_ : *default_instance_->r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoResponse::mutable_r_s_group_info() {
  set_has_r_s_group_info();
  if (r_s_group_info_ == NULL) r_s_group_info_ = new ::hbase::pb::RSGroupInfo;
  return r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoResponse::release_r_s_group_info() {
  clear_has_r_s_group_info();
  ::hbase::pb::RSGroupInfo* temp = r_s_group_info_;
  r_s_group_info_ = NULL;
  return temp;
}
inline void GetRSGroupInfoResponse::set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info) {
  delete r_s_group_info_;
  r_s_group_info_ = r_s_group_info;
  if (r_s_group_info) {
    set_has_r_s_group_info();
  } else {
    clear_has_r_s_group_info();
  }
}

// -------------------------------------------------------------------

// GetRSGroupInfoOfTableRequest

// required .hbase.pb.TableName table_name = 1;
inline bool GetRSGroupInfoOfTableRequest::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoOfTableRequest::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoOfTableRequest::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoOfTableRequest::clear_table_name() {
  if (table_name_ != NULL) table_name_->::hbase::pb::TableName::Clear();
  clear_has_table_name();
}
inline const ::hbase::pb::TableName& GetRSGroupInfoOfTableRequest::table_name() const {
  return table_name_ != NULL ? *table_name_ : *default_instance_->table_name_;
}
inline ::hbase::pb::TableName* GetRSGroupInfoOfTableRequest::mutable_table_name() {
  set_has_table_name();
  if (table_name_ == NULL) table_name_ = new ::hbase::pb::TableName;
  return table_name_;
}
inline ::hbase::pb::TableName* GetRSGroupInfoOfTableRequest::release_table_name() {
  clear_has_table_name();
  ::hbase::pb::TableName* temp = table_name_;
  table_name_ = NULL;
  return temp;
}
inline void GetRSGroupInfoOfTableRequest::set_allocated_table_name(::hbase::pb::TableName* table_name) {
  delete table_name_;
  table_name_ = table_name;
  if (table_name) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
}

// -------------------------------------------------------------------

// GetRSGroupInfoOfTableResponse

// optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
inline bool GetRSGroupInfoOfTableResponse::has_r_s_group_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoOfTableResponse::set_has_r_s_group_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoOfTableResponse::clear_has_r_s_group_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoOfTableResponse::clear_r_s_group_info() {
  if (r_s_group_info_ != NULL) r_s_group_info_->::hbase::pb::RSGroupInfo::Clear();
  clear_has_r_s_group_info();
}
inline const ::hbase::pb::RSGroupInfo& GetRSGroupInfoOfTableResponse::r_s_group_info() const {
  return r_s_group_info_ != NULL ? *r_s_group_info_ : *default_instance_->r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoOfTableResponse::mutable_r_s_group_info() {
  set_has_r_s_group_info();
  if (r_s_group_info_ == NULL) r_s_group_info_ = new ::hbase::pb::RSGroupInfo;
  return r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoOfTableResponse::release_r_s_group_info() {
  clear_has_r_s_group_info();
  ::hbase::pb::RSGroupInfo* temp = r_s_group_info_;
  r_s_group_info_ = NULL;
  return temp;
}
inline void GetRSGroupInfoOfTableResponse::set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info) {
  delete r_s_group_info_;
  r_s_group_info_ = r_s_group_info;
  if (r_s_group_info) {
    set_has_r_s_group_info();
  } else {
    clear_has_r_s_group_info();
  }
}

// -------------------------------------------------------------------

// MoveServersRequest

// required string target_group = 1;
inline bool MoveServersRequest::has_target_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveServersRequest::set_has_target_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveServersRequest::clear_has_target_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveServersRequest::clear_target_group() {
  if (target_group_ != &::google::protobuf::internal::kEmptyString) {
    target_group_->clear();
  }
  clear_has_target_group();
}
inline const ::std::string& MoveServersRequest::target_group() const {
  return *target_group_;
}
inline void MoveServersRequest::set_target_group(const ::std::string& value) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(value);
}
inline void MoveServersRequest::set_target_group(const char* value) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(value);
}
inline void MoveServersRequest::set_target_group(const char* value, size_t size) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoveServersRequest::mutable_target_group() {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  return target_group_;
}
inline ::std::string* MoveServersRequest::release_target_group() {
  clear_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = target_group_;
    target_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MoveServersRequest::set_allocated_target_group(::std::string* target_group) {
  if (target_group_ != &::google::protobuf::internal::kEmptyString) {
    delete target_group_;
  }
  if (target_group) {
    set_has_target_group();
    target_group_ = target_group;
  } else {
    clear_has_target_group();
    target_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .hbase.pb.ServerName servers = 3;
inline int MoveServersRequest::servers_size() const {
  return servers_.size();
}
inline void MoveServersRequest::clear_servers() {
  servers_.Clear();
}
inline const ::hbase::pb::ServerName& MoveServersRequest::servers(int index) const {
  return servers_.Get(index);
}
inline ::hbase::pb::ServerName* MoveServersRequest::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::hbase::pb::ServerName* MoveServersRequest::add_servers() {
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::ServerName >&
MoveServersRequest::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::ServerName >*
MoveServersRequest::mutable_servers() {
  return &servers_;
}

// -------------------------------------------------------------------

// MoveServersResponse

// -------------------------------------------------------------------

// MoveTablesRequest

// required string target_group = 1;
inline bool MoveTablesRequest::has_target_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveTablesRequest::set_has_target_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveTablesRequest::clear_has_target_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveTablesRequest::clear_target_group() {
  if (target_group_ != &::google::protobuf::internal::kEmptyString) {
    target_group_->clear();
  }
  clear_has_target_group();
}
inline const ::std::string& MoveTablesRequest::target_group() const {
  return *target_group_;
}
inline void MoveTablesRequest::set_target_group(const ::std::string& value) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(value);
}
inline void MoveTablesRequest::set_target_group(const char* value) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(value);
}
inline void MoveTablesRequest::set_target_group(const char* value, size_t size) {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  target_group_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoveTablesRequest::mutable_target_group() {
  set_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    target_group_ = new ::std::string;
  }
  return target_group_;
}
inline ::std::string* MoveTablesRequest::release_target_group() {
  clear_has_target_group();
  if (target_group_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = target_group_;
    target_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MoveTablesRequest::set_allocated_target_group(::std::string* target_group) {
  if (target_group_ != &::google::protobuf::internal::kEmptyString) {
    delete target_group_;
  }
  if (target_group) {
    set_has_target_group();
    target_group_ = target_group;
  } else {
    clear_has_target_group();
    target_group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .hbase.pb.TableName table_name = 2;
inline int MoveTablesRequest::table_name_size() const {
  return table_name_.size();
}
inline void MoveTablesRequest::clear_table_name() {
  table_name_.Clear();
}
inline const ::hbase::pb::TableName& MoveTablesRequest::table_name(int index) const {
  return table_name_.Get(index);
}
inline ::hbase::pb::TableName* MoveTablesRequest::mutable_table_name(int index) {
  return table_name_.Mutable(index);
}
inline ::hbase::pb::TableName* MoveTablesRequest::add_table_name() {
  return table_name_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >&
MoveTablesRequest::table_name() const {
  return table_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::TableName >*
MoveTablesRequest::mutable_table_name() {
  return &table_name_;
}

// -------------------------------------------------------------------

// MoveTablesResponse

// -------------------------------------------------------------------

// AddRSGroupRequest

// required string r_s_group_name = 1;
inline bool AddRSGroupRequest::has_r_s_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRSGroupRequest::set_has_r_s_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRSGroupRequest::clear_has_r_s_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRSGroupRequest::clear_r_s_group_name() {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_->clear();
  }
  clear_has_r_s_group_name();
}
inline const ::std::string& AddRSGroupRequest::r_s_group_name() const {
  return *r_s_group_name_;
}
inline void AddRSGroupRequest::set_r_s_group_name(const ::std::string& value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void AddRSGroupRequest::set_r_s_group_name(const char* value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void AddRSGroupRequest::set_r_s_group_name(const char* value, size_t size) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddRSGroupRequest::mutable_r_s_group_name() {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  return r_s_group_name_;
}
inline ::std::string* AddRSGroupRequest::release_r_s_group_name() {
  clear_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = r_s_group_name_;
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddRSGroupRequest::set_allocated_r_s_group_name(::std::string* r_s_group_name) {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete r_s_group_name_;
  }
  if (r_s_group_name) {
    set_has_r_s_group_name();
    r_s_group_name_ = r_s_group_name;
  } else {
    clear_has_r_s_group_name();
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AddRSGroupResponse

// -------------------------------------------------------------------

// RemoveRSGroupRequest

// required string r_s_group_name = 1;
inline bool RemoveRSGroupRequest::has_r_s_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveRSGroupRequest::set_has_r_s_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveRSGroupRequest::clear_has_r_s_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveRSGroupRequest::clear_r_s_group_name() {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_->clear();
  }
  clear_has_r_s_group_name();
}
inline const ::std::string& RemoveRSGroupRequest::r_s_group_name() const {
  return *r_s_group_name_;
}
inline void RemoveRSGroupRequest::set_r_s_group_name(const ::std::string& value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void RemoveRSGroupRequest::set_r_s_group_name(const char* value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void RemoveRSGroupRequest::set_r_s_group_name(const char* value, size_t size) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveRSGroupRequest::mutable_r_s_group_name() {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  return r_s_group_name_;
}
inline ::std::string* RemoveRSGroupRequest::release_r_s_group_name() {
  clear_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = r_s_group_name_;
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RemoveRSGroupRequest::set_allocated_r_s_group_name(::std::string* r_s_group_name) {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete r_s_group_name_;
  }
  if (r_s_group_name) {
    set_has_r_s_group_name();
    r_s_group_name_ = r_s_group_name;
  } else {
    clear_has_r_s_group_name();
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RemoveRSGroupResponse

// -------------------------------------------------------------------

// BalanceRSGroupRequest

// required string r_s_group_name = 1;
inline bool BalanceRSGroupRequest::has_r_s_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BalanceRSGroupRequest::set_has_r_s_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BalanceRSGroupRequest::clear_has_r_s_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BalanceRSGroupRequest::clear_r_s_group_name() {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_->clear();
  }
  clear_has_r_s_group_name();
}
inline const ::std::string& BalanceRSGroupRequest::r_s_group_name() const {
  return *r_s_group_name_;
}
inline void BalanceRSGroupRequest::set_r_s_group_name(const ::std::string& value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void BalanceRSGroupRequest::set_r_s_group_name(const char* value) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(value);
}
inline void BalanceRSGroupRequest::set_r_s_group_name(const char* value, size_t size) {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  r_s_group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BalanceRSGroupRequest::mutable_r_s_group_name() {
  set_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    r_s_group_name_ = new ::std::string;
  }
  return r_s_group_name_;
}
inline ::std::string* BalanceRSGroupRequest::release_r_s_group_name() {
  clear_has_r_s_group_name();
  if (r_s_group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = r_s_group_name_;
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BalanceRSGroupRequest::set_allocated_r_s_group_name(::std::string* r_s_group_name) {
  if (r_s_group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete r_s_group_name_;
  }
  if (r_s_group_name) {
    set_has_r_s_group_name();
    r_s_group_name_ = r_s_group_name;
  } else {
    clear_has_r_s_group_name();
    r_s_group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BalanceRSGroupResponse

// required bool balanceRan = 1;
inline bool BalanceRSGroupResponse::has_balanceran() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BalanceRSGroupResponse::set_has_balanceran() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BalanceRSGroupResponse::clear_has_balanceran() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BalanceRSGroupResponse::clear_balanceran() {
  balanceran_ = false;
  clear_has_balanceran();
}
inline bool BalanceRSGroupResponse::balanceran() const {
  return balanceran_;
}
inline void BalanceRSGroupResponse::set_balanceran(bool value) {
  set_has_balanceran();
  balanceran_ = value;
}

// -------------------------------------------------------------------

// ListRSGroupInfosRequest

// -------------------------------------------------------------------

// ListRSGroupInfosResponse

// repeated .hbase.pb.RSGroupInfo r_s_group_info = 1;
inline int ListRSGroupInfosResponse::r_s_group_info_size() const {
  return r_s_group_info_.size();
}
inline void ListRSGroupInfosResponse::clear_r_s_group_info() {
  r_s_group_info_.Clear();
}
inline const ::hbase::pb::RSGroupInfo& ListRSGroupInfosResponse::r_s_group_info(int index) const {
  return r_s_group_info_.Get(index);
}
inline ::hbase::pb::RSGroupInfo* ListRSGroupInfosResponse::mutable_r_s_group_info(int index) {
  return r_s_group_info_.Mutable(index);
}
inline ::hbase::pb::RSGroupInfo* ListRSGroupInfosResponse::add_r_s_group_info() {
  return r_s_group_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hbase::pb::RSGroupInfo >&
ListRSGroupInfosResponse::r_s_group_info() const {
  return r_s_group_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::hbase::pb::RSGroupInfo >*
ListRSGroupInfosResponse::mutable_r_s_group_info() {
  return &r_s_group_info_;
}

// -------------------------------------------------------------------

// GetRSGroupInfoOfServerRequest

// required .hbase.pb.ServerName server = 2;
inline bool GetRSGroupInfoOfServerRequest::has_server() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoOfServerRequest::set_has_server() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoOfServerRequest::clear_has_server() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoOfServerRequest::clear_server() {
  if (server_ != NULL) server_->::hbase::pb::ServerName::Clear();
  clear_has_server();
}
inline const ::hbase::pb::ServerName& GetRSGroupInfoOfServerRequest::server() const {
  return server_ != NULL ? *server_ : *default_instance_->server_;
}
inline ::hbase::pb::ServerName* GetRSGroupInfoOfServerRequest::mutable_server() {
  set_has_server();
  if (server_ == NULL) server_ = new ::hbase::pb::ServerName;
  return server_;
}
inline ::hbase::pb::ServerName* GetRSGroupInfoOfServerRequest::release_server() {
  clear_has_server();
  ::hbase::pb::ServerName* temp = server_;
  server_ = NULL;
  return temp;
}
inline void GetRSGroupInfoOfServerRequest::set_allocated_server(::hbase::pb::ServerName* server) {
  delete server_;
  server_ = server;
  if (server) {
    set_has_server();
  } else {
    clear_has_server();
  }
}

// -------------------------------------------------------------------

// GetRSGroupInfoOfServerResponse

// optional .hbase.pb.RSGroupInfo r_s_group_info = 1;
inline bool GetRSGroupInfoOfServerResponse::has_r_s_group_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRSGroupInfoOfServerResponse::set_has_r_s_group_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRSGroupInfoOfServerResponse::clear_has_r_s_group_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRSGroupInfoOfServerResponse::clear_r_s_group_info() {
  if (r_s_group_info_ != NULL) r_s_group_info_->::hbase::pb::RSGroupInfo::Clear();
  clear_has_r_s_group_info();
}
inline const ::hbase::pb::RSGroupInfo& GetRSGroupInfoOfServerResponse::r_s_group_info() const {
  return r_s_group_info_ != NULL ? *r_s_group_info_ : *default_instance_->r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoOfServerResponse::mutable_r_s_group_info() {
  set_has_r_s_group_info();
  if (r_s_group_info_ == NULL) r_s_group_info_ = new ::hbase::pb::RSGroupInfo;
  return r_s_group_info_;
}
inline ::hbase::pb::RSGroupInfo* GetRSGroupInfoOfServerResponse::release_r_s_group_info() {
  clear_has_r_s_group_info();
  ::hbase::pb::RSGroupInfo* temp = r_s_group_info_;
  r_s_group_info_ = NULL;
  return temp;
}
inline void GetRSGroupInfoOfServerResponse::set_allocated_r_s_group_info(::hbase::pb::RSGroupInfo* r_s_group_info) {
  delete r_s_group_info_;
  r_s_group_info_ = r_s_group_info;
  if (r_s_group_info) {
    set_has_r_s_group_info();
  } else {
    clear_has_r_s_group_info();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace hbase

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RSGroupAdmin_2eproto__INCLUDED
